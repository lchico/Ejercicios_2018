
Ejercicios4/LuisChico/out/LuisChico.elf:     file format elf32-littlearm
Ejercicios4/LuisChico/out/LuisChico.elf
architecture: arm, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x1a0026c9

Program Header:
0x70000001 off    0x0000b0e0 vaddr 0x1a0030e0 paddr 0x1a0030e0 align 2**2
         filesz 0x00000008 memsz 0x00000008 flags r--
    LOAD off    0x00000000 vaddr 0x10000000 paddr 0x10000000 align 2**15
         filesz 0x000000b4 memsz 0x000001c4 flags rw-
    LOAD off    0x00008000 vaddr 0x1a000000 paddr 0x1a000000 align 2**15
         filesz 0x000030e8 memsz 0x000030e8 flags r-x
    LOAD off    0x00010000 vaddr 0x10000000 paddr 0x1a0030e8 align 2**15
         filesz 0x0000013c memsz 0x0000013c flags rw-
private flags = 5000402: [Version5 EABI] [hard-float ABI] [has entry point]

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000030e0  1a000000  1a000000  00008000  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         0000013c  10000000  1a0030e8  00010000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  2 .data_RAM2    00000000  10080000  10080000  0001013c  2**2
                  CONTENTS
  3 .data_RAM3    00000000  20000000  20000000  0001013c  2**2
                  CONTENTS
  4 .data_RAM4    00000000  20008000  20008000  0001013c  2**2
                  CONTENTS
  5 .data_RAM5    00000000  2000c000  2000c000  0001013c  2**2
                  CONTENTS
  6 .bss          00000084  10000140  10000140  00000140  2**3
                  ALLOC
  7 .bss_RAM2     00000000  10080000  10080000  0001013c  2**2
                  CONTENTS
  8 .bss_RAM3     00000000  20000000  20000000  0001013c  2**2
                  CONTENTS
  9 .bss_RAM4     00000000  20008000  20008000  0001013c  2**2
                  CONTENTS
 10 .bss_RAM5     00000000  2000c000  2000c000  0001013c  2**2
                  CONTENTS
 11 .ARM.exidx    00000008  1a0030e0  1a0030e0  0000b0e0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 12 .uninit_RESERVED 00000000  10000000  10000000  0001013c  2**2
                  CONTENTS
 13 .noinit_RAM2  00000000  10080000  10080000  0001013c  2**2
                  CONTENTS
 14 .noinit_RAM3  00000000  20000000  20000000  0001013c  2**2
                  CONTENTS
 15 .noinit_RAM4  00000000  20008000  20008000  0001013c  2**2
                  CONTENTS
 16 .noinit_RAM5  00000000  2000c000  2000c000  0001013c  2**2
                  CONTENTS
 17 .noinit       00000000  100001c4  100001c4  0001013c  2**2
                  CONTENTS
 18 .debug_info   0000e9e1  00000000  00000000  0001013c  2**0
                  CONTENTS, READONLY, DEBUGGING
 19 .debug_abbrev 00002d47  00000000  00000000  0001eb1d  2**0
                  CONTENTS, READONLY, DEBUGGING
 20 .debug_loc    00004ce5  00000000  00000000  00021864  2**0
                  CONTENTS, READONLY, DEBUGGING
 21 .debug_aranges 000003c0  00000000  00000000  00026549  2**0
                  CONTENTS, READONLY, DEBUGGING
 22 .debug_macro  0000acce  00000000  00000000  00026909  2**0
                  CONTENTS, READONLY, DEBUGGING
 23 .debug_line   0000c81a  00000000  00000000  000315d7  2**0
                  CONTENTS, READONLY, DEBUGGING
 24 .debug_str    0001c80a  00000000  00000000  0003ddf1  2**0
                  CONTENTS, READONLY, DEBUGGING
 25 .comment      000000e0  00000000  00000000  0005a5fb  2**0
                  CONTENTS, READONLY
 26 .ARM.attributes 00000039  00000000  00000000  0005a6db  2**0
                  CONTENTS, READONLY
 27 .debug_frame  00001264  00000000  00000000  0005a714  2**2
                  CONTENTS, READONLY, DEBUGGING
 28 .debug_ranges 000000a0  00000000  00000000  0005b978  2**0
                  CONTENTS, READONLY, DEBUGGING
SYMBOL TABLE:
1a000000 l    d  .text	00000000 .text
10000000 l    d  .data	00000000 .data
10080000 l    d  .data_RAM2	00000000 .data_RAM2
20000000 l    d  .data_RAM3	00000000 .data_RAM3
20008000 l    d  .data_RAM4	00000000 .data_RAM4
2000c000 l    d  .data_RAM5	00000000 .data_RAM5
10000140 l    d  .bss	00000000 .bss
10080000 l    d  .bss_RAM2	00000000 .bss_RAM2
20000000 l    d  .bss_RAM3	00000000 .bss_RAM3
20008000 l    d  .bss_RAM4	00000000 .bss_RAM4
2000c000 l    d  .bss_RAM5	00000000 .bss_RAM5
1a0030e0 l    d  .ARM.exidx	00000000 .ARM.exidx
10000000 l    d  .uninit_RESERVED	00000000 .uninit_RESERVED
10080000 l    d  .noinit_RAM2	00000000 .noinit_RAM2
20000000 l    d  .noinit_RAM3	00000000 .noinit_RAM3
20008000 l    d  .noinit_RAM4	00000000 .noinit_RAM4
2000c000 l    d  .noinit_RAM5	00000000 .noinit_RAM5
100001c4 l    d  .noinit	00000000 .noinit
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_loc	00000000 .debug_loc
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_macro	00000000 .debug_macro
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .ARM.attributes	00000000 .ARM.attributes
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    df *ABS*	00000000 cr_startup_lpc43xx.c
00000000 l    df *ABS*	00000000 sapi_uart.c
00000000 l    df *ABS*	00000000 crp.c
00000000 l    df *ABS*	00000000 cooperativeOs_isr.c
00000000 l    df *ABS*	00000000 cooperativeOs_scheduler.c
1a00036c l     F .text	00000008 schedulerGoToSleep
00000000 l    df *ABS*	00000000 main.c
1a00042c l     F .text	00000078 taskMenuUpdate
1a0004a4 l     F .text	00000028 taskBlinkLed
10000000 l     O .data	000000f5 menu
10000141 l     O .bss	00000001 debugPrint
10000142 l     O .bss	00000001 ledState
00000000 l    df *ABS*	00000000 uart.c
00000000 l    df *ABS*	00000000 sapi_board.c
00000000 l    df *ABS*	00000000 sapi_convert.c
10000148 l     O .bss	00000011 result.10353
00000000 l    df *ABS*	00000000 sapi_datatypes.c
00000000 l    df *ABS*	00000000 sapi_delay.c
00000000 l    df *ABS*	00000000 sapi_gpio.c
1a000a08 l     F .text	0000002c gpioObtainPinConfig
00000000 l    df *ABS*	00000000 sapi_print.c
00000000 l    df *ABS*	00000000 sapi_sleep.c
00000000 l    df *ABS*	00000000 sapi_tick.c
00000000 l    df *ABS*	00000000 sapi_timer.c
1a000de0 l     F .text	00000002 errorOcurred
1a000de4 l     F .text	00000002 doNothing
1a002f44 l     O .text	00000030 timer_sd
100000fc l     O .data	00000040 timer_dd
00000000 l    df *ABS*	00000000 board.c
1a001280 l     F .text	00000040 Board_LED_Init
1a002f74 l     O .text	0000000c gpioLEDBits
00000000 l    df *ABS*	00000000 board_sysinit.c
1a002f90 l     O .text	00000060 pinmuxing
1a002ff0 l     O .text	0000000c InitClkStates
00000000 l    df *ABS*	00000000 sysinit.c
00000000 l    df *ABS*	00000000 chip_18xx_43xx.c
1a001558 l     F .text	00000034 Chip_USB_PllSetup
1a002ffc l     O .text	00000014 usbPLLSetup
00000000 l    df *ABS*	00000000 clock_18xx_43xx.c
1a00161c l     F .text	000000a8 pll_calc_divs
1a0016c4 l     F .text	00000104 pll_get_frac
1a0017c8 l     F .text	00000024 Chip_Clock_TestMainPLLMultiplier
1a0017ec l     F .text	00000048 Chip_Clock_FindBaseClock
1a001c14 l     F .text	00000022 Chip_Clock_GetDivRate
1a003010 l     O .text	0000006c periph_to_base
1000015c l     O .bss	00000008 audio_usb_pll_freq
00000000 l    df *ABS*	00000000 fpu_init.c
00000000 l    df *ABS*	00000000 gpio_18xx_43xx.c
00000000 l    df *ABS*	00000000 ring_buffer.c
00000000 l    df *ABS*	00000000 sysinit_18xx_43xx.c
1a003088 l     O .text	00000048 InitClkStates
00000000 l    df *ABS*	00000000 timer_18xx_43xx.c
1a002268 l     F .text	0000002c Chip_TIMER_GetClockIndex
00000000 l    df *ABS*	00000000 uart_18xx_43xx.c
1a0022ec l     F .text	0000002c Chip_UART_GetIndex
1a002318 l     F .text	00000048 Chip_UART_ABIntHandler
1a0030d0 l     O .text	00000008 UART_PClock
1a0030d8 l     O .text	00000008 UART_BClock
10000164 l     O .bss	00000001 ABsyncSts
00000000 l    df *ABS*	00000000 _aeabi_ldivmod.o
00000000 l    df *ABS*	00000000 _aeabi_uldivmod.o
00000000 l    df *ABS*	00000000 bpabi.c
00000000 l    df *ABS*	00000000 _dvmd_tls.o
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 memcpy.c
00000000 l    df *ABS*	00000000 memset.c
00000000 l    df *ABS*	00000000 
1a080000 l       *ABS*	00000000 __top_MFlashA512
1a0030e8 l       .ARM.exidx	00000000 __exidx_end
1a0030e8 l       .ARM.exidx	00000000 _etext
20008000 l       *ABS*	00000000 __top_RamAHB32
1a0030e0 l       .text	00000000 __exidx_start
20010000 l       *ABS*	00000000 __top_RamAHB_ETB16
10008000 l       *ABS*	00000000 __top_RamLoc32
2000c000 l       *ABS*	00000000 __top_RamAHB16
1008a000 l       *ABS*	00000000 __top_RamLoc40
100001c4 l       .bss	00000000 _pvHeapStart
1b080000 l       *ABS*	00000000 __top_MFlashB512
1a0018e4 g     F .text	0000001c Chip_Clock_GetDividerSource
1a0027dc g     F .text	0000002e .hidden __gnu_uldivmod_helper
1a001048 g     F .text	00000040 TIMER2_IRQHandler
1a000194  w    F .text	00000002 DebugMon_Handler
1a0001a0  w    F .text	00000002 RIT_IRQHandler
1a000ef4 g     F .text	00000040 Timer_DeInit
1a0001a0  w    F .text	00000002 ADCHS_IRQHandler
1a002810 g     F .text	0000029c .hidden __divdi3
1a000114 g       .text	00000000 __section_table_start
1a0001a0  w    F .text	00000002 FLASH_EEPROM_IRQHandler
1a0006fc g     F .text	0000008c int64ToString
1a0001a0  w    F .text	00000002 I2C0_IRQHandler
1a00112c g     F .text	00000044 uartReadByte
1a00158c g     F .text	00000034 Chip_USB0_Init
10000143 g     O .bss	00000001 RXIndex_lectura
1a0023f0 g     F .text	00000010 Chip_UART_CheckBusy
1a0009ac g     F .text	0000003e delayRead
1a000180  w    F .text	00000002 HardFault_Handler
1a002684 g     F .text	0000000c Chip_UART_GetABEOStatus
1a000000 g       *ABS*	00000000 __vectors_start__
1a002034 g     F .text	00000030 RingBuffer_Pop
1a00132c g     F .text	00000014 Board_UARTPutSTR
1a001cc8 g     F .text	00000018 Chip_Clock_DisableBaseClock
1a000dbc g     F .text	00000024 SysTick_Handler
1a00246c g     F .text	00000044 Chip_UART_SetBaud
1a001a54 g     F .text	0000009c Chip_Clock_SetupMainPLLMult
1a000cac g     F .text	00000008 printString
1a0001a0  w    F .text	00000002 SDIO_IRQHandler
1a001310 g     F .text	0000001c Board_UARTGetChar
1a0001a0  w    F .text	00000002 ATIMER_IRQHandler
1a0007fc g     F .text	000000a4 uintToAsciiHex
1a000198  w    F .text	00000002 PendSV_Handler
1a00017c  w    F .text	00000002 NMI_Handler
1a000150 g       .text	00000000 __data_section_table_end
1a0001a0  w    F .text	00000002 I2C1_IRQHandler
10000145 g     O .bss	00000001 TXIndex_lectura
1a0001a0  w    F .text	00000002 UART1_IRQHandler
1a0001a0  w    F .text	00000002 GPIO5_IRQHandler
1a0003e8 g     F .text	00000040 schedulerDispatchTasks
1a0001a0  w    F .text	00000002 CAN1_IRQHandler
1a001ed0 g     F .text	00000014 Chip_Clock_EnablePLL
53ff519e g       *ABS*	00000000 __valid_user_code_checksum
1a00144c g     F .text	00000028 Board_SSP_Init
1a0001a0  w    F .text	00000002 USB1_IRQHandler
1a0001a0  w    F .text	00000002 I2S0_IRQHandler
1a0011a0 g     F .text	00000084 waitForReceiveStringOrTimeout
1a001088 g     F .text	00000040 TIMER3_IRQHandler
1a001d24 g     F .text	0000000c Chip_Clock_GetBaseClocktHz
1a000178 g     F .text	00000002 UART0_IRQHandler
1a0001c0 g     F .text	00000012 bss_init
1a0022c4 g     F .text	00000028 Chip_TIMER_ExtMatchControlSet
1a002554 g     F .text	0000000e Chip_UART_ReadRB
1a0022ac g     F .text	00000018 Chip_TIMER_Reset
1a002d18 g     F .text	00000016 memcpy
1a0001a0  w    F .text	00000002 SGPIO_IRQHandler
1a0022a0 g     F .text	0000000c Chip_TIMER_DeInit
1a001e90 g     F .text	00000040 Chip_Clock_SetupPLL
1a00277c g     F .text	00000000 .hidden __aeabi_uldivmod
100001c4 g       .noinit	00000000 _noinit
1a001260 g     F .text	00000018 uartWriteString
100001c0 g     O .bss	00000004 SystemCoreClock
1a002360 g     F .text	00000050 Chip_UART_Init
1a0001a0  w    F .text	00000002 ADC0_IRQHandler
1a001fa4 g     F .text	00000090 RingBuffer_InsertMult
1a00098c g     F .text	00000020 delayConfig
1a000ce8 g     F .text	00000022 printUIntFormat
1a00018c  w    F .text	00000002 UsageFault_Handler
1a001e14 g     F .text	0000004c Chip_Clock_GetRate
1a0001a0  w    F .text	00000002 GPIO6_IRQHandler
100001b0 g     O .bss	00000008 tickCounter
1a0014bc g     F .text	00000074 Board_SetupClocking
1a002260 g     F .text	00000008 Chip_SystemInit
1a002f8c g     O .text	00000004 ExtRateIn
1a0001a0  w    F .text	00000002 IntDefaultHandler
1a000300 g       .text	00000000 __CRP_WORD_END__
1a000db0 g     F .text	0000000c tickWrite
1a001f60 g     F .text	00000002 Chip_GPIO_DeInit
1a000578 g     F .text	00000060 UpdateRxTx
1a000374 g     F .text	00000040 schedulerAddTask
1a0001a0  w    F .text	00000002 GPIO1_IRQHandler
1a000d2c g     F .text	00000078 tickConfig
1a0015c0 g     F .text	00000048 Chip_USB1_Init
1a0001a0  w    F .text	00000002 SSP0_IRQHandler
1a000a34 g     F .text	0000019c gpioConfig
1a0002fc g     O .text	00000004 CRP_WORD
1a00224c g     F .text	00000014 Chip_SetupIrcClocking
1a0005f4 g     F .text	00000018 Write_String_To_Buffer
1a002aac g     F .text	0000026a .hidden __udivdi3
1a0001a0  w    F .text	00000002 ADC1_IRQHandler
10000140 g     O .bss	00000001 errorCode
1a001f74 g     F .text	00000030 RingBuffer_Insert
1a0013d4 g     F .text	00000028 Board_Init
1a000114 g       .text	00000000 __data_section_table
1a0001a0  w    F .text	00000002 RTC_IRQHandler
100001c4 g       .bss	00000000 _ebss
1a000fd0 g     F .text	0000003c TIMER0_IRQHandler
1a000548 g     F .text	00000030 Get_Char_From_Buffer
1a0001a0  w    F .text	00000002 SPI_IRQHandler
1a0001a0  w    F .text	00000002 LCD_IRQHandler
1a001834 g     F .text	0000004c Chip_Clock_EnableCrystal
1a00060c g     F .text	000000ee boardConfig
1a0001a4 g     F .text	0000001a data_init
1a00100c g     F .text	0000003c TIMER1_IRQHandler
1a001890 g     F .text	00000054 Chip_Clock_SetDivider
1a001278 g     F .text	00000002 UART2_IRQHandler
1a000cb4 g     F .text	00000010 printEnter
1a001bac g     F .text	00000068 Chip_Clock_GetMainPLLHz
1a0023b0 g     F .text	0000001c Chip_UART_DeInit
1a0008a0 g     F .text	00000004 sAPI_NullFuncPtr
10000144 g     O .bss	00000001 RXIndex_escritura
1a001170 g     F .text	00000030 uartWriteByte
1a000c80 g     F .text	00000016 gpioToggle
1a0001a0  w    F .text	00000002 GPIO2_IRQHandler
1a001880 g     F .text	00000010 Chip_Clock_DisableCrystal
1a001dec g     F .text	00000014 Chip_Clock_StartPowerDown
1a000de8 g     F .text	0000010c Timer_Init
1a00035c g     F .text	00000010 schedulerStart
1a000f34 g     F .text	00000008 Timer_microsecondsToTicks
1a001d00 g     F .text	00000024 Chip_Clock_GetBaseClock
1a001ef8 g     F .text	0000000c Chip_Clock_GetPLLStatus
1a0024b0 g     F .text	00000024 Chip_UART_RXIntHandlerRB
1a002510 g     F .text	00000042 Chip_UART_SendRB
10000140 g       .bss	00000000 _bss
1a0001a0  w    F .text	00000002 I2S1_IRQHandler
1a0003b4 g     F .text	00000034 schedulerDeleteTask
1a001af0 g     F .text	000000bc Chip_Clock_SetupMainPLLHz
1a001f5c g     F .text	00000002 Chip_GPIO_Init
1a002f88 g     O .text	00000004 OscRateIn
1a0013fc g     F .text	00000024 Board_I2C_Init
100001c4 g       .noinit	00000000 _end_noinit
10008000 g       *ABS*	00000000 _vStackTop
1a0013b0 g     F .text	00000024 Board_ENET_GetMacADDR
1a0008a4 g     F .text	00000052 delayInaccurate
1a0001a0  w    F .text	00000002 SSP1_IRQHandler
1a002294 g     F .text	0000000c Chip_TIMER_Init
1a0005d8 g     F .text	0000001c Write_Char_To_Buffer
1a001ce0 g     F .text	00000020 Chip_Clock_IsBaseClockEnabled
1a000178 g       .text	00000000 __bss_section_table_end
1a001c7c g     F .text	00000034 Chip_Clock_GetBaseClockOpts
1a000d28 g     F .text	00000004 sleepUntilNextInterrupt
1a00280c  w    F .text	00000002 .hidden __aeabi_ldiv0
1a002064 g     F .text	00000082 RingBuffer_PopMult
1a0001a0  w    F .text	00000002 USB0_IRQHandler
1a001db8 g     F .text	00000034 Chip_Clock_Disable
1a0001a0  w    F .text	00000002 GPIO3_IRQHandler
1a000f74 g     F .text	00000044 Timer_DisableCompareMatch
1a0012fc g     F .text	00000014 Board_UARTPutChar
1a0023cc g     F .text	00000022 Chip_UART_Send
1a0001a0  w    F .text	00000002 SCT_IRQHandler
1a001e60 g     F .text	00000030 Chip_Clock_GetEMCRate
1a000788 g     F .text	00000074 uint64ToString
1a002564 g     F .text	00000036 Chip_UART_IRQRBHandler
1a001900 g     F .text	0000001c Chip_Clock_GetDividerDivisor
1a0002fc g       .text	00000000 __CRP_WORD_START__
1a002d2e g     F .text	00000010 memset
1a000184  w    F .text	00000002 MemManage_Handler
1a0004cc g     F .text	0000007c main
1a002424 g     F .text	00000022 Chip_UART_Read
10000198 g     O .bss	0000000a TX_buffer
1a0001a0  w    F .text	00000002 WDT_IRQHandler
1a000190  w    F .text	00000002 SVC_Handler
1a000300 g     F .text	0000003c schedulerUpdate
1a000f3c g     F .text	00000038 Timer_EnableCompareMatch
1a002238 g     F .text	00000014 Chip_SetupXtalClocking
1a001398 g     F .text	00000016 Board_LED_Toggle
1a0001a0  w    F .text	00000002 GPIO7_IRQHandler
1a001d30 g     F .text	0000003c Chip_Clock_EnableOpts
1a002e08 g     O .text	00000136 gpioPinsConfig
1a00191c g     F .text	000000b8 Chip_Clock_GetClockInputHz
1a001f04 g     F .text	00000058 fpuInit
1a001368 g     F .text	00000030 Board_LED_Test
1a0019d4 g     F .text	00000080 Chip_Clock_CalcMainPLLValue
1a00153c g     F .text	0000001c SystemInit
1a0001a0  w    F .text	00000002 SPIFI_IRQHandler
1a000954 g     F .text	00000038 delay
1a0001a0  w    F .text	00000002 QEI_IRQHandler
1a000150 g       .text	00000000 __bss_section_table
10000146 g     O .bss	00000001 TXIndex_escritura
1a001da0 g     F .text	00000018 Chip_Clock_RTCEnable
1a000bd0 g     F .text	00000058 gpioWrite
1a002400 g     F .text	00000024 Chip_UART_SendBlocking
1a001488 g     F .text	00000034 Board_SetupMuxing
1a00259c g     F .text	000000e8 Chip_UART_SetBaudFDR
1a000da4 g     F .text	0000000c tickRead
100001b8 g     O .bss	00000008 tickRateMS
1a0001a0  w    F .text	00000002 ETH_IRQHandler
100000f8 g     O .data	00000004 tickHookFunction
10000000 g       .uninit_RESERVED	00000000 _end_uninit_RESERVED
1a001224 g     F .text	0000003a waitForReceiveStringOrTimeoutBlocking
1a0001a0  w    F .text	00000002 CAN0_IRQHandler
1a000d0c g     F .text	0000001a printHex
10000000 g       .data	00000000 _data
1a000178 g       .text	00000000 __section_table_end
1a000cc4 g     F .text	00000022 printIntFormat
1a0010c8 g     F .text	00000064 uartConfig
1a0001a0  w    F .text	00000002 GINT0_IRQHandler
1a0001a0  w    F .text	00000002 DAC_IRQHandler
1a0012d4 g     F .text	00000028 Board_Debug_Init
1000013c g       .data	00000000 _edata
1a0001a0  w    F .text	00000002 M0SUB_IRQHandler
1a002690 g     F .text	00000038 Chip_UART_ABCmd
1a000428 g     F .text	00000002 schedulerReportStatus
1a0020e8 g     F .text	00000150 Chip_SetupCoreClock
1a0001a0  w    F .text	00000002 GPIO0_IRQHandler
100001a4 g     O .bss	0000000a RX_buffer
1a001420 g     F .text	0000002c Board_SDMMC_Init
1a000000 g     O .text	00000114 g_pfnVectors
1a0026c8 g     F .text	0000007c ResetISR
1a001608 g     F .text	00000014 SystemCoreClockUpdate
1a001474 g     F .text	00000014 Board_DAC_Init
1a000c9c g     F .text	0000000e printConfigUart
1a0001a0  w    F .text	00000002 DMA_IRQHandler
1a0001a0  w    F .text	00000002 EVRT_IRQHandler
1a001f64 g     F .text	00000010 RingBuffer_Init
1a0008f8 g     F .text	0000005a delayInaccurateUs
1a00280c  w    F .text	00000002 .hidden __aeabi_idiv0
1a001ee4 g     F .text	00000014 Chip_Clock_DisablePLL
1a000c98 g     F .text	00000004 printSetUart
1a001e00 g     F .text	00000014 Chip_Clock_ClearPowerDown
1a0024d4 g     F .text	0000003a Chip_UART_TXIntHandlerRB
1a000188  w    F .text	00000002 BusFault_Handler
1a001d6c g     F .text	00000034 Chip_Clock_Enable
1a00127c g     F .text	00000002 UART3_IRQHandler
1a0009ec g     F .text	0000001c delayWrite
1a0001a0  w    F .text	00000002 MCPWM_IRQHandler
1a0027ac g     F .text	0000002e .hidden __gnu_ldivmod_helper
1a001340 g     F .text	00000028 Board_LED_Set
1a0001a0  w    F .text	00000002 M0APP_IRQHandler
1a000c28 g     F .text	00000058 gpioRead
10000168 g     O .bss	00000030 schedulerTasks
1a0001a0  w    F .text	00000002 GINT1_IRQHandler
1a00033c g     F .text	00000020 schedulerInit
1a000fb8 g     F .text	00000018 Timer_SetCompareMatch
1a002744 g     F .text	00000000 .hidden __aeabi_ldivmod
1a002448 g     F .text	00000024 Chip_UART_ReadBlocking
1a0012c0 g     F .text	00000014 Board_UART_Init
1a001cb0 g     F .text	00000018 Chip_Clock_EnableBaseClock
1a001c38 g     F .text	00000044 Chip_Clock_SetBaseClock
1a0001a0  w    F .text	00000002 GPIO4_IRQHandler
1a001530 g     F .text	0000000c Board_SystemInit



Disassembly of section .text:

1a000000 <g_pfnVectors>:
1a000000:	00 80 00 10 c9 26 00 1a 7d 01 00 1a 81 01 00 1a     .....&..}.......
1a000010:	85 01 00 1a 89 01 00 1a 8d 01 00 1a 9e 51 ff 53     .............Q.S
	...
1a00002c:	91 01 00 1a 95 01 00 1a 00 00 00 00 99 01 00 1a     ................
1a00003c:	bd 0d 00 1a a1 01 00 1a a1 01 00 1a a1 01 00 1a     ................
1a00004c:	00 00 00 00 a1 01 00 1a a1 01 00 1a a1 01 00 1a     ................
1a00005c:	a1 01 00 1a a1 01 00 1a a1 01 00 1a a1 01 00 1a     ................
1a00006c:	a1 01 00 1a d1 0f 00 1a 0d 10 00 1a 49 10 00 1a     ............I...
1a00007c:	89 10 00 1a a1 01 00 1a a1 01 00 1a a1 01 00 1a     ................
1a00008c:	a1 01 00 1a a1 01 00 1a a1 01 00 1a a1 01 00 1a     ................
1a00009c:	a1 01 00 1a 79 01 00 1a a1 01 00 1a 79 12 00 1a     ....y.......y...
1a0000ac:	7d 12 00 1a a1 01 00 1a a1 01 00 1a a1 01 00 1a     }...............
1a0000bc:	a1 01 00 1a a1 01 00 1a a1 01 00 1a a1 01 00 1a     ................
1a0000cc:	a1 01 00 1a a1 01 00 1a a1 01 00 1a a1 01 00 1a     ................
1a0000dc:	a1 01 00 1a a1 01 00 1a a1 01 00 1a a1 01 00 1a     ................
1a0000ec:	a1 01 00 1a 00 00 00 00 a1 01 00 1a a1 01 00 1a     ................
1a0000fc:	a1 01 00 1a 00 00 00 00 a1 01 00 1a a1 01 00 1a     ................
1a00010c:	a1 01 00 1a a1 01 00 1a                             ........

1a000114 <__data_section_table>:
1a000114:	1a0030e8 	.word	0x1a0030e8
1a000118:	10000000 	.word	0x10000000
1a00011c:	0000013c 	.word	0x0000013c
1a000120:	1a0030e8 	.word	0x1a0030e8
1a000124:	10080000 	.word	0x10080000
1a000128:	00000000 	.word	0x00000000
1a00012c:	1a0030e8 	.word	0x1a0030e8
1a000130:	20000000 	.word	0x20000000
1a000134:	00000000 	.word	0x00000000
1a000138:	1a0030e8 	.word	0x1a0030e8
1a00013c:	20008000 	.word	0x20008000
1a000140:	00000000 	.word	0x00000000
1a000144:	1a0030e8 	.word	0x1a0030e8
1a000148:	2000c000 	.word	0x2000c000
1a00014c:	00000000 	.word	0x00000000

1a000150 <__bss_section_table>:
1a000150:	10000140 	.word	0x10000140
1a000154:	00000084 	.word	0x00000084
1a000158:	10080000 	.word	0x10080000
1a00015c:	00000000 	.word	0x00000000
1a000160:	20000000 	.word	0x20000000
1a000164:	00000000 	.word	0x00000000
1a000168:	20008000 	.word	0x20008000
1a00016c:	00000000 	.word	0x00000000
1a000170:	2000c000 	.word	0x2000c000
1a000174:	00000000 	.word	0x00000000

1a000178 <UART0_IRQHandler>:
1a000178:	4770      	bx	lr
1a00017a:	bf00      	nop

1a00017c <NMI_Handler>:
1a00017c:	e7fe      	b.n	1a00017c <NMI_Handler>
1a00017e:	bf00      	nop

1a000180 <HardFault_Handler>:
1a000180:	e7fe      	b.n	1a000180 <HardFault_Handler>
1a000182:	bf00      	nop

1a000184 <MemManage_Handler>:
1a000184:	e7fe      	b.n	1a000184 <MemManage_Handler>
1a000186:	bf00      	nop

1a000188 <BusFault_Handler>:
1a000188:	e7fe      	b.n	1a000188 <BusFault_Handler>
1a00018a:	bf00      	nop

1a00018c <UsageFault_Handler>:
1a00018c:	e7fe      	b.n	1a00018c <UsageFault_Handler>
1a00018e:	bf00      	nop

1a000190 <SVC_Handler>:
1a000190:	e7fe      	b.n	1a000190 <SVC_Handler>
1a000192:	bf00      	nop

1a000194 <DebugMon_Handler>:
1a000194:	e7fe      	b.n	1a000194 <DebugMon_Handler>
1a000196:	bf00      	nop

1a000198 <PendSV_Handler>:
1a000198:	e7fe      	b.n	1a000198 <PendSV_Handler>
1a00019a:	bf00      	nop
1a00019c:	e7fe      	b.n	1a00019c <PendSV_Handler+0x4>
1a00019e:	bf00      	nop

1a0001a0 <ADC0_IRQHandler>:
1a0001a0:	e7fe      	b.n	1a0001a0 <ADC0_IRQHandler>
1a0001a2:	bf00      	nop

1a0001a4 <data_init>:
1a0001a4:	b410      	push	{r4}
1a0001a6:	2300      	movs	r3, #0
1a0001a8:	e004      	b.n	1a0001b4 <data_init+0x10>
1a0001aa:	6804      	ldr	r4, [r0, #0]
1a0001ac:	600c      	str	r4, [r1, #0]
1a0001ae:	3304      	adds	r3, #4
1a0001b0:	3004      	adds	r0, #4
1a0001b2:	3104      	adds	r1, #4
1a0001b4:	4293      	cmp	r3, r2
1a0001b6:	d3f8      	bcc.n	1a0001aa <data_init+0x6>
1a0001b8:	f85d 4b04 	ldr.w	r4, [sp], #4
1a0001bc:	4770      	bx	lr
1a0001be:	bf00      	nop

1a0001c0 <bss_init>:
1a0001c0:	2300      	movs	r3, #0
1a0001c2:	e003      	b.n	1a0001cc <bss_init+0xc>
1a0001c4:	2200      	movs	r2, #0
1a0001c6:	6002      	str	r2, [r0, #0]
1a0001c8:	3304      	adds	r3, #4
1a0001ca:	3004      	adds	r0, #4
1a0001cc:	428b      	cmp	r3, r1
1a0001ce:	d3f9      	bcc.n	1a0001c4 <bss_init+0x4>
1a0001d0:	4770      	bx	lr
1a0001d2:	bf00      	nop
1a0001d4:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a0001d8:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a0001dc:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a0001e0:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a0001e4:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a0001e8:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a0001ec:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a0001f0:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a0001f4:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a0001f8:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a0001fc:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a000200:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a000204:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a000208:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a00020c:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a000210:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a000214:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a000218:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a00021c:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a000220:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a000224:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a000228:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a00022c:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a000230:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a000234:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a000238:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a00023c:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a000240:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a000244:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a000248:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a00024c:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a000250:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a000254:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a000258:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a00025c:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a000260:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a000264:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a000268:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a00026c:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a000270:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a000274:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a000278:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a00027c:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a000280:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a000284:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a000288:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a00028c:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a000290:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a000294:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a000298:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a00029c:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a0002a0:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a0002a4:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a0002a8:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a0002ac:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a0002b0:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a0002b4:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a0002b8:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a0002bc:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a0002c0:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a0002c4:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a0002c8:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a0002cc:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a0002d0:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a0002d4:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a0002d8:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a0002dc:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a0002e0:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a0002e4:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a0002e8:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a0002ec:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a0002f0:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a0002f4:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a0002f8:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff

1a0002fc <CRP_WORD>:
1a0002fc:	ffff ffff                                   ....

1a000300 <schedulerUpdate>:

   int32_t index;
   //serialDebugPrintLnString( "schedulerUpdate." );

   // NOTE: calculations are in *TICKS* (not milliseconds)
   for( index = 0; index < SCHEDULER_MAX_TASKS; index++ ){
1a000300:	2300      	movs	r3, #0
1a000302:	e015      	b.n	1a000330 <schedulerUpdate+0x30>
      // Check if there is a task at this location
      if( schedulerTasks[index].pTask ){
1a000304:	011a      	lsls	r2, r3, #4
1a000306:	490c      	ldr	r1, [pc, #48]	; (1a000338 <schedulerUpdate+0x38>)
1a000308:	588a      	ldr	r2, [r1, r2]
1a00030a:	b182      	cbz	r2, 1a00032e <schedulerUpdate+0x2e>
         if( --schedulerTasks[index].delay <= 0 ){
1a00030c:	eb01 1103 	add.w	r1, r1, r3, lsl #4
1a000310:	684a      	ldr	r2, [r1, #4]
1a000312:	3a01      	subs	r2, #1
1a000314:	604a      	str	r2, [r1, #4]
1a000316:	2a00      	cmp	r2, #0
1a000318:	dc09      	bgt.n	1a00032e <schedulerUpdate+0x2e>
            // The task is due to run
            schedulerTasks[index].runMe += 1; // Inc. the 'runMe' flag
1a00031a:	460a      	mov	r2, r1
1a00031c:	68c9      	ldr	r1, [r1, #12]
1a00031e:	3101      	adds	r1, #1
1a000320:	60d1      	str	r1, [r2, #12]
            if( schedulerTasks[index].period ){
1a000322:	6892      	ldr	r2, [r2, #8]
1a000324:	b11a      	cbz	r2, 1a00032e <schedulerUpdate+0x2e>
               // Schedule regular tasks to run again
               schedulerTasks[index].delay = schedulerTasks[index].period;
1a000326:	4904      	ldr	r1, [pc, #16]	; (1a000338 <schedulerUpdate+0x38>)
1a000328:	eb01 1103 	add.w	r1, r1, r3, lsl #4
1a00032c:	604a      	str	r2, [r1, #4]

   int32_t index;
   //serialDebugPrintLnString( "schedulerUpdate." );

   // NOTE: calculations are in *TICKS* (not milliseconds)
   for( index = 0; index < SCHEDULER_MAX_TASKS; index++ ){
1a00032e:	3301      	adds	r3, #1
1a000330:	2b02      	cmp	r3, #2
1a000332:	dde7      	ble.n	1a000304 <schedulerUpdate+0x4>
            }
         }
      }
   }
   return 0;
}
1a000334:	2000      	movs	r0, #0
1a000336:	4770      	bx	lr
1a000338:	10000168 	.word	0x10000168

1a00033c <schedulerInit>:
schedulerInit()
Scheduler initialization function. Prepares scheduler
data structures.
Must call this function before using the scheduler.
-*------------------------------------------------------------------*/
void schedulerInit( void ){
1a00033c:	b510      	push	{r4, lr}

   uint32_t i;
   for( i = 0; i < SCHEDULER_MAX_TASKS; i++ ){
1a00033e:	2400      	movs	r4, #0
1a000340:	e003      	b.n	1a00034a <schedulerInit+0xe>
      schedulerDeleteTask(i);
1a000342:	4620      	mov	r0, r4
1a000344:	f000 f836 	bl	1a0003b4 <schedulerDeleteTask>
Must call this function before using the scheduler.
-*------------------------------------------------------------------*/
void schedulerInit( void ){

   uint32_t i;
   for( i = 0; i < SCHEDULER_MAX_TASKS; i++ ){
1a000348:	3401      	adds	r4, #1
1a00034a:	2c02      	cmp	r4, #2
1a00034c:	d9f9      	bls.n	1a000342 <schedulerInit+0x6>
      schedulerDeleteTask(i);
   }
   /* Reset the global error variable
      - schedulerDelete_Task() will generate an error code,
        (because the task array is empty) */
   errorCode = 0;
1a00034e:	2200      	movs	r2, #0
1a000350:	4b01      	ldr	r3, [pc, #4]	; (1a000358 <schedulerInit+0x1c>)
1a000352:	701a      	strb	r2, [r3, #0]
1a000354:	bd10      	pop	{r4, pc}
1a000356:	bf00      	nop
1a000358:	10000140 	.word	0x10000140

1a00035c <schedulerStart>:
Starts the scheduler, by enabling timer interrupts.
NOTE: Usually called after all regular tasks are added,
to keep the tasks synchronized.
NOTE: ONLY THE SCHEDULER INTERRUPT SHOULD BE ENABLED!!!
-*------------------------------------------------------------------*/
void schedulerStart( tick_t tickRateMs ){
1a00035c:	b508      	push	{r3, lr}
      El tick hook es simplemente una función que se ejecutará períodicamente
      con cada interrupción de Tick, este nombre se refiere a una función
      "enganchada" a una interrupción */

   // Inicializar el conteo de Ticks con resolución de 1ms, con tickHook
   if( tickConfig( tickRateMs, schedulerUpdate ) ){
1a00035e:	4a02      	ldr	r2, [pc, #8]	; (1a000368 <schedulerStart+0xc>)
1a000360:	f000 fce4 	bl	1a000d2c <tickConfig>
1a000364:	bd08      	pop	{r3, pc}
1a000366:	bf00      	nop
1a000368:	1a000301 	.word	0x1a000301

1a00036c <schedulerGoToSleep>:
to save power. The next clock tick will return the processor
to the normal operating state.
*** May wish to disable this if using a watchdog ***
*** ADAPT AS REQUIRED FOR YOUR HARDWARE ***
-*------------------------------------------------------------------*/
static void schedulerGoToSleep(){
1a00036c:	b508      	push	{r3, lr}
   // Se pone el sistema en bajo consumo hasta que ocurra la proxima
   // interrupcion, en este caso la de Tick.
   sleepUntilNextInterrupt();
1a00036e:	f000 fcdb 	bl	1a000d28 <sleepUntilNextInterrupt>
1a000372:	bd08      	pop	{r3, pc}

1a000374 <schedulerAddTask>:
Task will be first executed at T = 300 ticks, then 1300, 2300, etc.
-*------------------------------------------------------------------*/
int32_t schedulerAddTask( sAPI_FuncPtr_t pFunction,
                          const int32_t DELAY,
                          const int32_t PERIOD
                        ){
1a000374:	b470      	push	{r4, r5, r6}

   int32_t index = 0;
1a000376:	2300      	movs	r3, #0

   // First find a gap in the array (if there is one)
   while( (schedulerTasks[index].pTask != 0) && (index < SCHEDULER_MAX_TASKS) ){
1a000378:	e000      	b.n	1a00037c <schedulerAddTask+0x8>
      index++;
1a00037a:	3301      	adds	r3, #1
                        ){

   int32_t index = 0;

   // First find a gap in the array (if there is one)
   while( (schedulerTasks[index].pTask != 0) && (index < SCHEDULER_MAX_TASKS) ){
1a00037c:	011c      	lsls	r4, r3, #4
1a00037e:	4d0b      	ldr	r5, [pc, #44]	; (1a0003ac <schedulerAddTask+0x38>)
1a000380:	592c      	ldr	r4, [r5, r4]
1a000382:	b10c      	cbz	r4, 1a000388 <schedulerAddTask+0x14>
1a000384:	2b02      	cmp	r3, #2
1a000386:	ddf8      	ble.n	1a00037a <schedulerAddTask+0x6>
      index++;
   }

   // Have we reached the end of the list?
   if( index == SCHEDULER_MAX_TASKS ){
1a000388:	2b03      	cmp	r3, #3
1a00038a:	d104      	bne.n	1a000396 <schedulerAddTask+0x22>
      // Task list is full
      // Set the global error variable
      errorCode = 2; // ERROR_schedulerTOO_MANYTasks;
1a00038c:	2202      	movs	r2, #2
1a00038e:	4b08      	ldr	r3, [pc, #32]	; (1a0003b0 <schedulerAddTask+0x3c>)
1a000390:	701a      	strb	r2, [r3, #0]
      // Also return an error code
      return SCHEDULER_MAX_TASKS;
1a000392:	2003      	movs	r0, #3
1a000394:	e008      	b.n	1a0003a8 <schedulerAddTask+0x34>
   }

   // If we're here, there is a space in the task array
   schedulerTasks[index].pTask  = pFunction;
1a000396:	4e05      	ldr	r6, [pc, #20]	; (1a0003ac <schedulerAddTask+0x38>)
1a000398:	011d      	lsls	r5, r3, #4
1a00039a:	1974      	adds	r4, r6, r5
1a00039c:	5170      	str	r0, [r6, r5]
   schedulerTasks[index].delay  = DELAY;
1a00039e:	6061      	str	r1, [r4, #4]
   schedulerTasks[index].period = PERIOD;
1a0003a0:	60a2      	str	r2, [r4, #8]
   schedulerTasks[index].runMe  = 0;
1a0003a2:	2200      	movs	r2, #0
1a0003a4:	60e2      	str	r2, [r4, #12]

   return index; // return position of task (to allow later deletion)
1a0003a6:	4618      	mov	r0, r3
}
1a0003a8:	bc70      	pop	{r4, r5, r6}
1a0003aa:	4770      	bx	lr
1a0003ac:	10000168 	.word	0x10000168
1a0003b0:	10000140 	.word	0x10000140

1a0003b4 <schedulerDeleteTask>:

taskIndex - The task index. Provided by schedulerAddTask().

RETURN VALUE: RETURN_ERROR or RETURN_NORMAL
-*------------------------------------------------------------------*/
int8_t schedulerDeleteTask( int32_t taskIndex ){
1a0003b4:	b430      	push	{r4, r5}

   int8_t returnCode;

   if(schedulerTasks[taskIndex].pTask == 0){
1a0003b6:	0103      	lsls	r3, r0, #4
1a0003b8:	4a09      	ldr	r2, [pc, #36]	; (1a0003e0 <schedulerDeleteTask+0x2c>)
1a0003ba:	58d3      	ldr	r3, [r2, r3]
1a0003bc:	b923      	cbnz	r3, 1a0003c8 <schedulerDeleteTask+0x14>
      // No task at this location...
      // Set the global error variable
      errorCode = 2; // ERROR_SCH_CANNOT_DELETE_TASK;
1a0003be:	2202      	movs	r2, #2
1a0003c0:	4b08      	ldr	r3, [pc, #32]	; (1a0003e4 <schedulerDeleteTask+0x30>)
1a0003c2:	701a      	strb	r2, [r3, #0]
      // ...also return an error code
      returnCode = -1; // RETURN_ERROR;
1a0003c4:	25ff      	movs	r5, #255	; 0xff
1a0003c6:	e000      	b.n	1a0003ca <schedulerDeleteTask+0x16>
   }
   else{
      returnCode = 0; // RETURN_NORMAL;
1a0003c8:	2500      	movs	r5, #0
   }
   schedulerTasks[taskIndex].pTask = 0x0000;
1a0003ca:	4c05      	ldr	r4, [pc, #20]	; (1a0003e0 <schedulerDeleteTask+0x2c>)
1a0003cc:	0103      	lsls	r3, r0, #4
1a0003ce:	18e1      	adds	r1, r4, r3
1a0003d0:	2200      	movs	r2, #0
1a0003d2:	50e2      	str	r2, [r4, r3]
   schedulerTasks[taskIndex].delay = (int32_t)0;
1a0003d4:	604a      	str	r2, [r1, #4]
   schedulerTasks[taskIndex].period = (int32_t)0;
1a0003d6:	608a      	str	r2, [r1, #8]
   schedulerTasks[taskIndex].runMe = (int8_t)0;
1a0003d8:	60ca      	str	r2, [r1, #12]
   return returnCode; // return status
}
1a0003da:	b268      	sxtb	r0, r5
1a0003dc:	bc30      	pop	{r4, r5}
1a0003de:	4770      	bx	lr
1a0003e0:	10000168 	.word	0x10000168
1a0003e4:	10000140 	.word	0x10000140

1a0003e8 <schedulerDispatchTasks>:
schedulerDispatchTasks()
This is the 'dispatcher' function. When a task (function)
is due to run, schedulerDispatchTasks() will run it.
This function must be called (repeatedly) from the main loop.
-*------------------------------------------------------------------*/
void schedulerDispatchTasks( void ){
1a0003e8:	b538      	push	{r3, r4, r5, lr}

   int32_t index;
   // Dispatches (runs) the next task (if one is ready)
   for (index = 0; index < SCHEDULER_MAX_TASKS; index++){
1a0003ea:	2400      	movs	r4, #0
1a0003ec:	e014      	b.n	1a000418 <schedulerDispatchTasks+0x30>

      if (schedulerTasks[index].runMe > 0){
1a0003ee:	4b0d      	ldr	r3, [pc, #52]	; (1a000424 <schedulerDispatchTasks+0x3c>)
1a0003f0:	eb03 1304 	add.w	r3, r3, r4, lsl #4
1a0003f4:	68db      	ldr	r3, [r3, #12]
1a0003f6:	2b00      	cmp	r3, #0
1a0003f8:	dd0d      	ble.n	1a000416 <schedulerDispatchTasks+0x2e>

         (*schedulerTasks[index].pTask)(0); // Run the task
1a0003fa:	4a0a      	ldr	r2, [pc, #40]	; (1a000424 <schedulerDispatchTasks+0x3c>)
1a0003fc:	0123      	lsls	r3, r4, #4
1a0003fe:	18d5      	adds	r5, r2, r3
1a000400:	58d3      	ldr	r3, [r2, r3]
1a000402:	2000      	movs	r0, #0
1a000404:	4798      	blx	r3
         schedulerTasks[index].runMe -= 1; // Reset/reduce runMe flag
1a000406:	68eb      	ldr	r3, [r5, #12]
1a000408:	3b01      	subs	r3, #1
1a00040a:	60eb      	str	r3, [r5, #12]

         // Periodic tasks will automatically run again
         // - if this is a 'one shot' task, remove it from the array
         if (schedulerTasks[index].period == 0){
1a00040c:	68ab      	ldr	r3, [r5, #8]
1a00040e:	b913      	cbnz	r3, 1a000416 <schedulerDispatchTasks+0x2e>
            schedulerDeleteTask(index);
1a000410:	4620      	mov	r0, r4
1a000412:	f7ff ffcf 	bl	1a0003b4 <schedulerDeleteTask>
-*------------------------------------------------------------------*/
void schedulerDispatchTasks( void ){

   int32_t index;
   // Dispatches (runs) the next task (if one is ready)
   for (index = 0; index < SCHEDULER_MAX_TASKS; index++){
1a000416:	3401      	adds	r4, #1
1a000418:	2c02      	cmp	r4, #2
1a00041a:	dde8      	ble.n	1a0003ee <schedulerDispatchTasks+0x6>
   }

   // Report system status
   schedulerReportStatus();
   // The scheduler enters idle mode at this point32_t
   schedulerGoToSleep();
1a00041c:	f7ff ffa6 	bl	1a00036c <schedulerGoToSleep>
1a000420:	bd38      	pop	{r3, r4, r5, pc}
1a000422:	bf00      	nop
1a000424:	10000168 	.word	0x10000168

1a000428 <schedulerReportStatus>:
After this the the error code is reset to 0.
This code may be easily adapted to display the last
error 'for ever': this may be appropriate in your
application.
-*------------------------------------------------------------------*/
void schedulerReportStatus( void ){
1a000428:	4770      	bx	lr
1a00042a:	bf00      	nop

1a00042c <taskMenuUpdate>:





static void taskMenuUpdate(void){
1a00042c:	b510      	push	{r4, lr}
1a00042e:	b082      	sub	sp, #8

	uint8_t receiveByte;

	if (uartReadByte( UART_USB, &receiveByte ) != FALSE) {
1a000430:	2000      	movs	r0, #0
1a000432:	f10d 0107 	add.w	r1, sp, #7
1a000436:	f000 fe79 	bl	1a00112c <uartReadByte>
1a00043a:	b338      	cbz	r0, 1a00048c <taskMenuUpdate+0x60>

		if(receiveByte != 0)
1a00043c:	f89d 3007 	ldrb.w	r3, [sp, #7]
1a000440:	b323      	cbz	r3, 1a00048c <taskMenuUpdate+0x60>
			switch (receiveByte) {
1a000442:	2b4c      	cmp	r3, #76	; 0x4c
1a000444:	d015      	beq.n	1a000472 <taskMenuUpdate+0x46>
1a000446:	d804      	bhi.n	1a000452 <taskMenuUpdate+0x26>
1a000448:	2b0a      	cmp	r3, #10
1a00044a:	d01f      	beq.n	1a00048c <taskMenuUpdate+0x60>
1a00044c:	2b0d      	cmp	r3, #13
1a00044e:	d01d      	beq.n	1a00048c <taskMenuUpdate+0x60>
1a000450:	e016      	b.n	1a000480 <taskMenuUpdate+0x54>
1a000452:	2b54      	cmp	r3, #84	; 0x54
1a000454:	d001      	beq.n	1a00045a <taskMenuUpdate+0x2e>
1a000456:	2b74      	cmp	r3, #116	; 0x74
1a000458:	d112      	bne.n	1a000480 <taskMenuUpdate+0x54>
			case 't':
			case 'T':
				Write_String_To_Buffer( menu);
1a00045a:	480d      	ldr	r0, [pc, #52]	; (1a000490 <taskMenuUpdate+0x64>)
1a00045c:	f000 f8ca 	bl	1a0005f4 <Write_String_To_Buffer>
				debugPrintlnString( "Caracter recibido: T\n\r");
1a000460:	4c0c      	ldr	r4, [pc, #48]	; (1a000494 <taskMenuUpdate+0x68>)
1a000462:	7820      	ldrb	r0, [r4, #0]
1a000464:	490c      	ldr	r1, [pc, #48]	; (1a000498 <taskMenuUpdate+0x6c>)
1a000466:	f000 fc21 	bl	1a000cac <printString>
1a00046a:	7820      	ldrb	r0, [r4, #0]
1a00046c:	f000 fc22 	bl	1a000cb4 <printEnter>
				break;
1a000470:	e00c      	b.n	1a00048c <taskMenuUpdate+0x60>

			case 'L':
				Write_String_To_Buffer( menu);
1a000472:	4807      	ldr	r0, [pc, #28]	; (1a000490 <taskMenuUpdate+0x64>)
1a000474:	f000 f8be 	bl	1a0005f4 <Write_String_To_Buffer>
				Write_String_To_Buffer("Caracter recibido: L\n\r");
1a000478:	4808      	ldr	r0, [pc, #32]	; (1a00049c <taskMenuUpdate+0x70>)
1a00047a:	f000 f8bb 	bl	1a0005f4 <Write_String_To_Buffer>
				break;
1a00047e:	e005      	b.n	1a00048c <taskMenuUpdate+0x60>
			case '\n':
			case '\r':
				break;

			default:
				Write_String_To_Buffer( menu);
1a000480:	4803      	ldr	r0, [pc, #12]	; (1a000490 <taskMenuUpdate+0x64>)
1a000482:	f000 f8b7 	bl	1a0005f4 <Write_String_To_Buffer>
				Write_String_To_Buffer("Caracter recibido fuera de menu\n\r");
1a000486:	4806      	ldr	r0, [pc, #24]	; (1a0004a0 <taskMenuUpdate+0x74>)
1a000488:	f000 f8b4 	bl	1a0005f4 <Write_String_To_Buffer>
				break;
			}
	}
}
1a00048c:	b002      	add	sp, #8
1a00048e:	bd10      	pop	{r4, pc}
1a000490:	10000000 	.word	0x10000000
1a000494:	10000141 	.word	0x10000141
1a000498:	1a002d40 	.word	0x1a002d40
1a00049c:	1a002d58 	.word	0x1a002d58
1a0004a0:	1a002d70 	.word	0x1a002d70

1a0004a4 <taskBlinkLed>:
	return 0;
}

/*==================[definiciones de funciones internas]=====================*/

void taskBlinkLed(void){
1a0004a4:	b508      	push	{r3, lr}

	if (ledState == ON){
1a0004a6:	4b08      	ldr	r3, [pc, #32]	; (1a0004c8 <taskBlinkLed+0x24>)
1a0004a8:	785b      	ldrb	r3, [r3, #1]
1a0004aa:	2b01      	cmp	r3, #1
1a0004ac:	d103      	bne.n	1a0004b6 <taskBlinkLed+0x12>
		ledState = OFF; // Apago el pin
1a0004ae:	2200      	movs	r2, #0
1a0004b0:	4b05      	ldr	r3, [pc, #20]	; (1a0004c8 <taskBlinkLed+0x24>)
1a0004b2:	705a      	strb	r2, [r3, #1]
1a0004b4:	e002      	b.n	1a0004bc <taskBlinkLed+0x18>
	}
	else{
		ledState = ON; // Prendo el pin
1a0004b6:	2201      	movs	r2, #1
1a0004b8:	4b03      	ldr	r3, [pc, #12]	; (1a0004c8 <taskBlinkLed+0x24>)
1a0004ba:	705a      	strb	r2, [r3, #1]
	}
	// Use of digitalWrite
	gpioWrite( LED3, ledState );
1a0004bc:	202d      	movs	r0, #45	; 0x2d
1a0004be:	4b02      	ldr	r3, [pc, #8]	; (1a0004c8 <taskBlinkLed+0x24>)
1a0004c0:	7859      	ldrb	r1, [r3, #1]
1a0004c2:	f000 fb85 	bl	1a000bd0 <gpioWrite>
1a0004c6:	bd08      	pop	{r3, pc}
1a0004c8:	10000141 	.word	0x10000141

1a0004cc <main>:

/*==================[declaraciones de funciones externas]====================*/

/*==================[funcion principal]======================================*/

int main( void ){
1a0004cc:	b508      	push	{r3, lr}
	//Inicializar el hardware, perifericos, puertos, clock, etc.
	boardConfig();
1a0004ce:	f000 f89d 	bl	1a00060c <boardConfig>
	// Inicializar UART_USB como salida de consola
	debugPrintConfigUart( UART_USB, 115200 );
1a0004d2:	4c17      	ldr	r4, [pc, #92]	; (1a000530 <main+0x64>)
1a0004d4:	4620      	mov	r0, r4
1a0004d6:	2100      	movs	r1, #0
1a0004d8:	f44f 32e1 	mov.w	r2, #115200	; 0x1c200
1a0004dc:	f000 fbde 	bl	1a000c9c <printConfigUart>
	debugPrintlnString( "UART_USB configurada.\n\r" );
1a0004e0:	7820      	ldrb	r0, [r4, #0]
1a0004e2:	4914      	ldr	r1, [pc, #80]	; (1a000534 <main+0x68>)
1a0004e4:	f000 fbe2 	bl	1a000cac <printString>
1a0004e8:	7820      	ldrb	r0, [r4, #0]
1a0004ea:	f000 fbe3 	bl	1a000cb4 <printEnter>

	//FUNCION que inicializa el planificador de tareas
	schedulerInit();
1a0004ee:	f7ff ff25 	bl	1a00033c <schedulerInit>
	//Cargar las tareas del sistema operativo con sus periodicidades
	schedulerAddTask( (sAPI_FuncPtr_t) taskBlinkLed, 0, BLINK_TIME_PERIOD );
1a0004f2:	4811      	ldr	r0, [pc, #68]	; (1a000538 <main+0x6c>)
1a0004f4:	2100      	movs	r1, #0
1a0004f6:	f44f 72fa 	mov.w	r2, #500	; 0x1f4
1a0004fa:	f7ff ff3b 	bl	1a000374 <schedulerAddTask>
	schedulerAddTask( (sAPI_FuncPtr_t) taskMenuUpdate, 1, CONSOLE_TIME_PERIOD );
1a0004fe:	480f      	ldr	r0, [pc, #60]	; (1a00053c <main+0x70>)
1a000500:	2101      	movs	r1, #1
1a000502:	f44f 72fa 	mov.w	r2, #500	; 0x1f4
1a000506:	f7ff ff35 	bl	1a000374 <schedulerAddTask>
	schedulerAddTask( (sAPI_FuncPtr_t) UpdateRxTx, 1, UPDATE_RXTX_TIME_PERIOD );
1a00050a:	480d      	ldr	r0, [pc, #52]	; (1a000540 <main+0x74>)
1a00050c:	2101      	movs	r1, #1
1a00050e:	220a      	movs	r2, #10
1a000510:	f7ff ff30 	bl	1a000374 <schedulerAddTask>


	//Iniciar el planificador de tareas
	schedulerStart( 1 );
1a000514:	2001      	movs	r0, #1
1a000516:	2100      	movs	r1, #0
1a000518:	f7ff ff20 	bl	1a00035c <schedulerStart>

	debugPrintlnString(menu);
1a00051c:	7820      	ldrb	r0, [r4, #0]
1a00051e:	4909      	ldr	r1, [pc, #36]	; (1a000544 <main+0x78>)
1a000520:	f000 fbc4 	bl	1a000cac <printString>
1a000524:	7820      	ldrb	r0, [r4, #0]
1a000526:	f000 fbc5 	bl	1a000cb4 <printEnter>
	//Lazo infinito

	while(TRUE) {
		//Ejecutar tareas
		schedulerDispatchTasks();
1a00052a:	f7ff ff5d 	bl	1a0003e8 <schedulerDispatchTasks>
	}
1a00052e:	e7fc      	b.n	1a00052a <main+0x5e>
1a000530:	10000141 	.word	0x10000141
1a000534:	1a002d94 	.word	0x1a002d94
1a000538:	1a0004a5 	.word	0x1a0004a5
1a00053c:	1a00042d 	.word	0x1a00042d
1a000540:	1a000579 	.word	0x1a000579
1a000544:	10000000 	.word	0x10000000

1a000548 <Get_Char_From_Buffer>:
char TX_buffer[BUFFER_SIZE_TX];

/* Función consumidora */
char Get_Char_From_Buffer (char * ch){
	// Hay nuevo dato en el buffer?
	if (RXIndex_lectura <RXIndex_escritura)	{
1a000548:	4b09      	ldr	r3, [pc, #36]	; (1a000570 <Get_Char_From_Buffer+0x28>)
1a00054a:	781a      	ldrb	r2, [r3, #0]
1a00054c:	785b      	ldrb	r3, [r3, #1]
1a00054e:	429a      	cmp	r2, r3
1a000550:	d208      	bcs.n	1a000564 <Get_Char_From_Buffer+0x1c>
		*ch = RX_buffer [ RXIndex_lectura ];
1a000552:	4b08      	ldr	r3, [pc, #32]	; (1a000574 <Get_Char_From_Buffer+0x2c>)
1a000554:	5c9b      	ldrb	r3, [r3, r2]
1a000556:	7003      	strb	r3, [r0, #0]
		RXIndex_lectura ++;
1a000558:	4a05      	ldr	r2, [pc, #20]	; (1a000570 <Get_Char_From_Buffer+0x28>)
1a00055a:	7813      	ldrb	r3, [r2, #0]
1a00055c:	3301      	adds	r3, #1
1a00055e:	7013      	strb	r3, [r2, #0]
		return 1; // Hay nuevo dato
1a000560:	2001      	movs	r0, #1
1a000562:	4770      	bx	lr
	}else {
		RXIndex_lectura=0;
1a000564:	4b02      	ldr	r3, [pc, #8]	; (1a000570 <Get_Char_From_Buffer+0x28>)
1a000566:	2000      	movs	r0, #0
1a000568:	7018      	strb	r0, [r3, #0]
		RXIndex_escritura=0;
1a00056a:	7058      	strb	r0, [r3, #1]
		return 0; // No Hay
	}
}
1a00056c:	4770      	bx	lr
1a00056e:	bf00      	nop
1a000570:	10000143 	.word	0x10000143
1a000574:	100001a4 	.word	0x100001a4

1a000578 <UpdateRxTx>:

/* Send and receive data from RX and TX buffer  */
void UpdateRxTx(void) {
1a000578:	b500      	push	{lr}
1a00057a:	b083      	sub	sp, #12
	char dato;
	if(TXIndex_lectura < TXIndex_escritura){ // Hay byte en el buffer Tx para	transmitir?
1a00057c:	4b13      	ldr	r3, [pc, #76]	; (1a0005cc <UpdateRxTx+0x54>)
1a00057e:	789a      	ldrb	r2, [r3, #2]
1a000580:	78db      	ldrb	r3, [r3, #3]
1a000582:	429a      	cmp	r2, r3
1a000584:	d209      	bcs.n	1a00059a <UpdateRxTx+0x22>
		uartWriteByte( UART_USB, TX_buffer [ TXIndex_lectura ] );
1a000586:	2000      	movs	r0, #0
1a000588:	4b11      	ldr	r3, [pc, #68]	; (1a0005d0 <UpdateRxTx+0x58>)
1a00058a:	5c99      	ldrb	r1, [r3, r2]
1a00058c:	f000 fdf0 	bl	1a001170 <uartWriteByte>
		TXIndex_lectura++;
1a000590:	4a0e      	ldr	r2, [pc, #56]	; (1a0005cc <UpdateRxTx+0x54>)
1a000592:	7893      	ldrb	r3, [r2, #2]
1a000594:	3301      	adds	r3, #1
1a000596:	7093      	strb	r3, [r2, #2]
1a000598:	e003      	b.n	1a0005a2 <UpdateRxTx+0x2a>
	}else{ 							// No hay datos disponibles para enviar
		TXIndex_lectura = 0;
1a00059a:	4b0c      	ldr	r3, [pc, #48]	; (1a0005cc <UpdateRxTx+0x54>)
1a00059c:	2200      	movs	r2, #0
1a00059e:	709a      	strb	r2, [r3, #2]
		TXIndex_escritura = 0;
1a0005a0:	70da      	strb	r2, [r3, #3]
	}
	// se ha recibido algún byte?
	if ( uartReadByte( UART_USB, &dato)  != FALSE ){
1a0005a2:	2000      	movs	r0, #0
1a0005a4:	f10d 0107 	add.w	r1, sp, #7
1a0005a8:	f000 fdc0 	bl	1a00112c <uartReadByte>
1a0005ac:	b150      	cbz	r0, 1a0005c4 <UpdateRxTx+0x4c>
		// Byte recibido. Escribir byte en buffer de entrada
		if (RXIndex_escritura < BUFFER_SIZE_RX) {
1a0005ae:	4b07      	ldr	r3, [pc, #28]	; (1a0005cc <UpdateRxTx+0x54>)
1a0005b0:	785b      	ldrb	r3, [r3, #1]
1a0005b2:	2b09      	cmp	r3, #9
1a0005b4:	d806      	bhi.n	1a0005c4 <UpdateRxTx+0x4c>
			RX_buffer[RXIndex_escritura] = dato; // Guardar dato en buffer
1a0005b6:	f89d 1007 	ldrb.w	r1, [sp, #7]
1a0005ba:	4a06      	ldr	r2, [pc, #24]	; (1a0005d4 <UpdateRxTx+0x5c>)
1a0005bc:	54d1      	strb	r1, [r2, r3]
			RXIndex_escritura++; // Inc sin desbordar buffer
1a0005be:	3301      	adds	r3, #1
1a0005c0:	4a02      	ldr	r2, [pc, #8]	; (1a0005cc <UpdateRxTx+0x54>)
1a0005c2:	7053      	strb	r3, [r2, #1]
		} else {
			/* Write buffer is full, have to wait free space */
		}
	}
}
1a0005c4:	b003      	add	sp, #12
1a0005c6:	f85d fb04 	ldr.w	pc, [sp], #4
1a0005ca:	bf00      	nop
1a0005cc:	10000143 	.word	0x10000143
1a0005d0:	10000198 	.word	0x10000198
1a0005d4:	100001a4 	.word	0x100001a4

1a0005d8 <Write_Char_To_Buffer>:
	}
}

void Write_Char_To_Buffer ( char Data ){
	// Write to the buffer *only* if there is space
	if (TXIndex_escritura < BUFFER_SIZE_TX){
1a0005d8:	4b04      	ldr	r3, [pc, #16]	; (1a0005ec <Write_Char_To_Buffer+0x14>)
1a0005da:	78db      	ldrb	r3, [r3, #3]
1a0005dc:	2b09      	cmp	r3, #9
1a0005de:	d804      	bhi.n	1a0005ea <Write_Char_To_Buffer+0x12>
		TX_buffer[TXIndex_escritura ] = Data;
1a0005e0:	4a03      	ldr	r2, [pc, #12]	; (1a0005f0 <Write_Char_To_Buffer+0x18>)
1a0005e2:	54d0      	strb	r0, [r2, r3]
		TXIndex_escritura++;
1a0005e4:	3301      	adds	r3, #1
1a0005e6:	4a01      	ldr	r2, [pc, #4]	; (1a0005ec <Write_Char_To_Buffer+0x14>)
1a0005e8:	70d3      	strb	r3, [r2, #3]
1a0005ea:	4770      	bx	lr
1a0005ec:	10000143 	.word	0x10000143
1a0005f0:	10000198 	.word	0x10000198

1a0005f4 <Write_String_To_Buffer>:
		}
	}
}

/* Funciones productoras */
void Write_String_To_Buffer( char* STR_PTR ){
1a0005f4:	b538      	push	{r3, r4, r5, lr}
1a0005f6:	4605      	mov	r5, r0
	char i = 0;
1a0005f8:	2400      	movs	r4, #0
	while ( STR_PTR [ i ] != '\0'){
1a0005fa:	e003      	b.n	1a000604 <Write_String_To_Buffer+0x10>
		Write_Char_To_Buffer ( STR_PTR [ i ] );
1a0005fc:	f7ff ffec 	bl	1a0005d8 <Write_Char_To_Buffer>
		i++;
1a000600:	3401      	adds	r4, #1
1a000602:	b2e4      	uxtb	r4, r4
}

/* Funciones productoras */
void Write_String_To_Buffer( char* STR_PTR ){
	char i = 0;
	while ( STR_PTR [ i ] != '\0'){
1a000604:	5d28      	ldrb	r0, [r5, r4]
1a000606:	2800      	cmp	r0, #0
1a000608:	d1f8      	bne.n	1a0005fc <Write_String_To_Buffer+0x8>
		Write_Char_To_Buffer ( STR_PTR [ i ] );
		i++;
	}
}
1a00060a:	bd38      	pop	{r3, r4, r5, pc}

1a00060c <boardConfig>:
1a00060c:	b508      	push	{r3, lr}
1a00060e:	f000 fffb 	bl	1a001608 <SystemCoreClockUpdate>
1a000612:	f000 fedf 	bl	1a0013d4 <Board_Init>
1a000616:	2001      	movs	r0, #1
1a000618:	2100      	movs	r1, #0
1a00061a:	2200      	movs	r2, #0
1a00061c:	f000 fb86 	bl	1a000d2c <tickConfig>
1a000620:	2000      	movs	r0, #0
1a000622:	2105      	movs	r1, #5
1a000624:	f000 fa06 	bl	1a000a34 <gpioConfig>
1a000628:	2024      	movs	r0, #36	; 0x24
1a00062a:	2100      	movs	r1, #0
1a00062c:	f000 fa02 	bl	1a000a34 <gpioConfig>
1a000630:	2025      	movs	r0, #37	; 0x25
1a000632:	2100      	movs	r1, #0
1a000634:	f000 f9fe 	bl	1a000a34 <gpioConfig>
1a000638:	2026      	movs	r0, #38	; 0x26
1a00063a:	2100      	movs	r1, #0
1a00063c:	f000 f9fa 	bl	1a000a34 <gpioConfig>
1a000640:	2027      	movs	r0, #39	; 0x27
1a000642:	2100      	movs	r1, #0
1a000644:	f000 f9f6 	bl	1a000a34 <gpioConfig>
1a000648:	2028      	movs	r0, #40	; 0x28
1a00064a:	2101      	movs	r1, #1
1a00064c:	f000 f9f2 	bl	1a000a34 <gpioConfig>
1a000650:	2029      	movs	r0, #41	; 0x29
1a000652:	2101      	movs	r1, #1
1a000654:	f000 f9ee 	bl	1a000a34 <gpioConfig>
1a000658:	202a      	movs	r0, #42	; 0x2a
1a00065a:	2101      	movs	r1, #1
1a00065c:	f000 f9ea 	bl	1a000a34 <gpioConfig>
1a000660:	202b      	movs	r0, #43	; 0x2b
1a000662:	2101      	movs	r1, #1
1a000664:	f000 f9e6 	bl	1a000a34 <gpioConfig>
1a000668:	202c      	movs	r0, #44	; 0x2c
1a00066a:	2101      	movs	r1, #1
1a00066c:	f000 f9e2 	bl	1a000a34 <gpioConfig>
1a000670:	202d      	movs	r0, #45	; 0x2d
1a000672:	2101      	movs	r1, #1
1a000674:	f000 f9de 	bl	1a000a34 <gpioConfig>
1a000678:	202e      	movs	r0, #46	; 0x2e
1a00067a:	2100      	movs	r1, #0
1a00067c:	f000 f9da 	bl	1a000a34 <gpioConfig>
1a000680:	202f      	movs	r0, #47	; 0x2f
1a000682:	2100      	movs	r1, #0
1a000684:	f000 f9d6 	bl	1a000a34 <gpioConfig>
1a000688:	2030      	movs	r0, #48	; 0x30
1a00068a:	2100      	movs	r1, #0
1a00068c:	f000 f9d2 	bl	1a000a34 <gpioConfig>
1a000690:	2031      	movs	r0, #49	; 0x31
1a000692:	2100      	movs	r1, #0
1a000694:	f000 f9ce 	bl	1a000a34 <gpioConfig>
1a000698:	2032      	movs	r0, #50	; 0x32
1a00069a:	2100      	movs	r1, #0
1a00069c:	f000 f9ca 	bl	1a000a34 <gpioConfig>
1a0006a0:	2033      	movs	r0, #51	; 0x33
1a0006a2:	2100      	movs	r1, #0
1a0006a4:	f000 f9c6 	bl	1a000a34 <gpioConfig>
1a0006a8:	2034      	movs	r0, #52	; 0x34
1a0006aa:	2100      	movs	r1, #0
1a0006ac:	f000 f9c2 	bl	1a000a34 <gpioConfig>
1a0006b0:	2035      	movs	r0, #53	; 0x35
1a0006b2:	2100      	movs	r1, #0
1a0006b4:	f000 f9be 	bl	1a000a34 <gpioConfig>
1a0006b8:	2036      	movs	r0, #54	; 0x36
1a0006ba:	2101      	movs	r1, #1
1a0006bc:	f000 f9ba 	bl	1a000a34 <gpioConfig>
1a0006c0:	2037      	movs	r0, #55	; 0x37
1a0006c2:	2101      	movs	r1, #1
1a0006c4:	f000 f9b6 	bl	1a000a34 <gpioConfig>
1a0006c8:	2038      	movs	r0, #56	; 0x38
1a0006ca:	2101      	movs	r1, #1
1a0006cc:	f000 f9b2 	bl	1a000a34 <gpioConfig>
1a0006d0:	2039      	movs	r0, #57	; 0x39
1a0006d2:	2101      	movs	r1, #1
1a0006d4:	f000 f9ae 	bl	1a000a34 <gpioConfig>
1a0006d8:	203a      	movs	r0, #58	; 0x3a
1a0006da:	2101      	movs	r1, #1
1a0006dc:	f000 f9aa 	bl	1a000a34 <gpioConfig>
1a0006e0:	203b      	movs	r0, #59	; 0x3b
1a0006e2:	2101      	movs	r1, #1
1a0006e4:	f000 f9a6 	bl	1a000a34 <gpioConfig>
1a0006e8:	203c      	movs	r0, #60	; 0x3c
1a0006ea:	2101      	movs	r1, #1
1a0006ec:	f000 f9a2 	bl	1a000a34 <gpioConfig>
1a0006f0:	203d      	movs	r0, #61	; 0x3d
1a0006f2:	2101      	movs	r1, #1
1a0006f4:	f000 f99e 	bl	1a000a34 <gpioConfig>
1a0006f8:	bd08      	pop	{r3, pc}
1a0006fa:	bf00      	nop

1a0006fc <int64ToString>:
1a0006fc:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
1a000700:	4615      	mov	r5, r2
1a000702:	4699      	mov	r9, r3
1a000704:	3b02      	subs	r3, #2
1a000706:	b2db      	uxtb	r3, r3
1a000708:	2b22      	cmp	r3, #34	; 0x22
1a00070a:	d903      	bls.n	1a000714 <int64ToString+0x18>
1a00070c:	2000      	movs	r0, #0
1a00070e:	7010      	strb	r0, [r2, #0]
1a000710:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
1a000714:	4606      	mov	r6, r0
1a000716:	460f      	mov	r7, r1
1a000718:	4690      	mov	r8, r2
1a00071a:	e002      	b.n	1a000722 <int64ToString+0x26>
1a00071c:	46f0      	mov	r8, lr
1a00071e:	4606      	mov	r6, r0
1a000720:	460f      	mov	r7, r1
1a000722:	4630      	mov	r0, r6
1a000724:	4639      	mov	r1, r7
1a000726:	464a      	mov	r2, r9
1a000728:	2300      	movs	r3, #0
1a00072a:	f002 f80b 	bl	1a002744 <__aeabi_ldivmod>
1a00072e:	f108 0e01 	add.w	lr, r8, #1
1a000732:	fba9 2300 	umull	r2, r3, r9, r0
1a000736:	1ab2      	subs	r2, r6, r2
1a000738:	4b12      	ldr	r3, [pc, #72]	; (1a000784 <int64ToString+0x88>)
1a00073a:	441a      	add	r2, r3
1a00073c:	7813      	ldrb	r3, [r2, #0]
1a00073e:	f888 3000 	strb.w	r3, [r8]
1a000742:	ea50 0301 	orrs.w	r3, r0, r1
1a000746:	d1e9      	bne.n	1a00071c <int64ToString+0x20>
1a000748:	2e00      	cmp	r6, #0
1a00074a:	f177 0300 	sbcs.w	r3, r7, #0
1a00074e:	da04      	bge.n	1a00075a <int64ToString+0x5e>
1a000750:	f108 0e02 	add.w	lr, r8, #2
1a000754:	232d      	movs	r3, #45	; 0x2d
1a000756:	f888 3001 	strb.w	r3, [r8, #1]
1a00075a:	f10e 33ff 	add.w	r3, lr, #4294967295	; 0xffffffff
1a00075e:	2200      	movs	r2, #0
1a000760:	f88e 2000 	strb.w	r2, [lr]
1a000764:	e009      	b.n	1a00077a <int64ToString+0x7e>
1a000766:	461a      	mov	r2, r3
1a000768:	f812 0901 	ldrb.w	r0, [r2], #-1
1a00076c:	4629      	mov	r1, r5
1a00076e:	f811 4b01 	ldrb.w	r4, [r1], #1
1a000772:	701c      	strb	r4, [r3, #0]
1a000774:	7028      	strb	r0, [r5, #0]
1a000776:	460d      	mov	r5, r1
1a000778:	4613      	mov	r3, r2
1a00077a:	429d      	cmp	r5, r3
1a00077c:	d3f3      	bcc.n	1a000766 <int64ToString+0x6a>
1a00077e:	2001      	movs	r0, #1
1a000780:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
1a000784:	1a002dcf 	.word	0x1a002dcf

1a000788 <uint64ToString>:
1a000788:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
1a00078c:	4690      	mov	r8, r2
1a00078e:	4699      	mov	r9, r3
1a000790:	3b02      	subs	r3, #2
1a000792:	b2db      	uxtb	r3, r3
1a000794:	2b22      	cmp	r3, #34	; 0x22
1a000796:	d903      	bls.n	1a0007a0 <uint64ToString+0x18>
1a000798:	2000      	movs	r0, #0
1a00079a:	7010      	strb	r0, [r2, #0]
1a00079c:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
1a0007a0:	4606      	mov	r6, r0
1a0007a2:	460f      	mov	r7, r1
1a0007a4:	4614      	mov	r4, r2
1a0007a6:	e000      	b.n	1a0007aa <uint64ToString+0x22>
1a0007a8:	4674      	mov	r4, lr
1a0007aa:	4630      	mov	r0, r6
1a0007ac:	4639      	mov	r1, r7
1a0007ae:	464a      	mov	r2, r9
1a0007b0:	2300      	movs	r3, #0
1a0007b2:	f001 ffe3 	bl	1a00277c <__aeabi_uldivmod>
1a0007b6:	f104 0e01 	add.w	lr, r4, #1
1a0007ba:	fba9 2300 	umull	r2, r3, r9, r0
1a0007be:	1ab2      	subs	r2, r6, r2
1a0007c0:	4e0d      	ldr	r6, [pc, #52]	; (1a0007f8 <uint64ToString+0x70>)
1a0007c2:	4432      	add	r2, r6
1a0007c4:	7813      	ldrb	r3, [r2, #0]
1a0007c6:	7023      	strb	r3, [r4, #0]
1a0007c8:	4606      	mov	r6, r0
1a0007ca:	460f      	mov	r7, r1
1a0007cc:	ea50 0301 	orrs.w	r3, r0, r1
1a0007d0:	d1ea      	bne.n	1a0007a8 <uint64ToString+0x20>
1a0007d2:	2300      	movs	r3, #0
1a0007d4:	7063      	strb	r3, [r4, #1]
1a0007d6:	e00a      	b.n	1a0007ee <uint64ToString+0x66>
1a0007d8:	4623      	mov	r3, r4
1a0007da:	f813 1901 	ldrb.w	r1, [r3], #-1
1a0007de:	4642      	mov	r2, r8
1a0007e0:	f812 0b01 	ldrb.w	r0, [r2], #1
1a0007e4:	7020      	strb	r0, [r4, #0]
1a0007e6:	f888 1000 	strb.w	r1, [r8]
1a0007ea:	4690      	mov	r8, r2
1a0007ec:	461c      	mov	r4, r3
1a0007ee:	45a0      	cmp	r8, r4
1a0007f0:	d3f2      	bcc.n	1a0007d8 <uint64ToString+0x50>
1a0007f2:	2001      	movs	r0, #1
1a0007f4:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
1a0007f8:	1a002dcf 	.word	0x1a002dcf

1a0007fc <uintToAsciiHex>:
1a0007fc:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
1a000800:	b086      	sub	sp, #24
1a000802:	4606      	mov	r6, r0
1a000804:	460f      	mov	r7, r1
1a000806:	4690      	mov	r8, r2
1a000808:	f10d 0e04 	add.w	lr, sp, #4
1a00080c:	f8df c08c 	ldr.w	ip, [pc, #140]	; 1a00089c <uintToAsciiHex+0xa0>
1a000810:	e8bc 000f 	ldmia.w	ip!, {r0, r1, r2, r3}
1a000814:	e8ae 000f 	stmia.w	lr!, {r0, r1, r2, r3}
1a000818:	f8dc 3000 	ldr.w	r3, [ip]
1a00081c:	f88e 3000 	strb.w	r3, [lr]
1a000820:	ea4f 0298 	mov.w	r2, r8, lsr #2
1a000824:	4694      	mov	ip, r2
1a000826:	2100      	movs	r1, #0
1a000828:	4b1b      	ldr	r3, [pc, #108]	; (1a000898 <uintToAsciiHex+0x9c>)
1a00082a:	5499      	strb	r1, [r3, r2]
1a00082c:	e02e      	b.n	1a00088c <uintToAsciiHex+0x90>
1a00082e:	ebc1 000c 	rsb	r0, r1, ip
1a000832:	3801      	subs	r0, #1
1a000834:	008b      	lsls	r3, r1, #2
1a000836:	f04f 0e0f 	mov.w	lr, #15
1a00083a:	f1a3 0920 	sub.w	r9, r3, #32
1a00083e:	f1c3 0820 	rsb	r8, r3, #32
1a000842:	fa0e f509 	lsl.w	r5, lr, r9
1a000846:	fa2e f808 	lsr.w	r8, lr, r8
1a00084a:	ea45 0508 	orr.w	r5, r5, r8
1a00084e:	fa0e f403 	lsl.w	r4, lr, r3
1a000852:	ea04 0806 	and.w	r8, r4, r6
1a000856:	ea05 0907 	and.w	r9, r5, r7
1a00085a:	f1c3 0a20 	rsb	sl, r3, #32
1a00085e:	f1a3 0e20 	sub.w	lr, r3, #32
1a000862:	fa28 f303 	lsr.w	r3, r8, r3
1a000866:	fa09 fa0a 	lsl.w	sl, r9, sl
1a00086a:	ea43 030a 	orr.w	r3, r3, sl
1a00086e:	fa29 fe0e 	lsr.w	lr, r9, lr
1a000872:	ea43 030e 	orr.w	r3, r3, lr
1a000876:	f10d 0e18 	add.w	lr, sp, #24
1a00087a:	fa5e f383 	uxtab	r3, lr, r3
1a00087e:	f813 ec14 	ldrb.w	lr, [r3, #-20]
1a000882:	4b05      	ldr	r3, [pc, #20]	; (1a000898 <uintToAsciiHex+0x9c>)
1a000884:	f803 e000 	strb.w	lr, [r3, r0]
1a000888:	3101      	adds	r1, #1
1a00088a:	b2c9      	uxtb	r1, r1
1a00088c:	4291      	cmp	r1, r2
1a00088e:	d3ce      	bcc.n	1a00082e <uintToAsciiHex+0x32>
1a000890:	4801      	ldr	r0, [pc, #4]	; (1a000898 <uintToAsciiHex+0x9c>)
1a000892:	b006      	add	sp, #24
1a000894:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
1a000898:	10000148 	.word	0x10000148
1a00089c:	1a002df4 	.word	0x1a002df4

1a0008a0 <sAPI_NullFuncPtr>:
1a0008a0:	2001      	movs	r0, #1
1a0008a2:	4770      	bx	lr

1a0008a4 <delayInaccurate>:
1a0008a4:	b430      	push	{r4, r5}
1a0008a6:	b084      	sub	sp, #16
1a0008a8:	0109      	lsls	r1, r1, #4
1a0008aa:	0104      	lsls	r4, r0, #4
1a0008ac:	ea41 7510 	orr.w	r5, r1, r0, lsr #28
1a0008b0:	00ab      	lsls	r3, r5, #2
1a0008b2:	ea43 7394 	orr.w	r3, r3, r4, lsr #30
1a0008b6:	00a2      	lsls	r2, r4, #2
1a0008b8:	1912      	adds	r2, r2, r4
1a0008ba:	416b      	adcs	r3, r5
1a0008bc:	0219      	lsls	r1, r3, #8
1a0008be:	ea41 6112 	orr.w	r1, r1, r2, lsr #24
1a0008c2:	0210      	lsls	r0, r2, #8
1a0008c4:	1a82      	subs	r2, r0, r2
1a0008c6:	eb61 0303 	sbc.w	r3, r1, r3
1a0008ca:	e9cd 2300 	strd	r2, r3, [sp]
1a0008ce:	e9dd 2300 	ldrd	r2, r3, [sp]
1a0008d2:	e9cd 2302 	strd	r2, r3, [sp, #8]
1a0008d6:	e007      	b.n	1a0008e8 <delayInaccurate+0x44>
1a0008d8:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
1a0008dc:	f112 32ff 	adds.w	r2, r2, #4294967295	; 0xffffffff
1a0008e0:	f143 33ff 	adc.w	r3, r3, #4294967295	; 0xffffffff
1a0008e4:	e9cd 2302 	strd	r2, r3, [sp, #8]
1a0008e8:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
1a0008ec:	4313      	orrs	r3, r2
1a0008ee:	d1f3      	bne.n	1a0008d8 <delayInaccurate+0x34>
1a0008f0:	b004      	add	sp, #16
1a0008f2:	bc30      	pop	{r4, r5}
1a0008f4:	4770      	bx	lr
1a0008f6:	bf00      	nop

1a0008f8 <delayInaccurateUs>:
1a0008f8:	b500      	push	{lr}
1a0008fa:	b085      	sub	sp, #20
1a0008fc:	1802      	adds	r2, r0, r0
1a0008fe:	eb41 0301 	adc.w	r3, r1, r1
1a000902:	1880      	adds	r0, r0, r2
1a000904:	4159      	adcs	r1, r3
1a000906:	010b      	lsls	r3, r1, #4
1a000908:	ea43 7310 	orr.w	r3, r3, r0, lsr #28
1a00090c:	0102      	lsls	r2, r0, #4
1a00090e:	1880      	adds	r0, r0, r2
1a000910:	4159      	adcs	r1, r3
1a000912:	008b      	lsls	r3, r1, #2
1a000914:	ea43 7390 	orr.w	r3, r3, r0, lsr #30
1a000918:	0082      	lsls	r2, r0, #2
1a00091a:	4610      	mov	r0, r2
1a00091c:	4619      	mov	r1, r3
1a00091e:	220a      	movs	r2, #10
1a000920:	2300      	movs	r3, #0
1a000922:	f001 ff2b 	bl	1a00277c <__aeabi_uldivmod>
1a000926:	e9cd 0100 	strd	r0, r1, [sp]
1a00092a:	e9dd 2300 	ldrd	r2, r3, [sp]
1a00092e:	e9cd 2302 	strd	r2, r3, [sp, #8]
1a000932:	e007      	b.n	1a000944 <delayInaccurateUs+0x4c>
1a000934:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
1a000938:	f112 32ff 	adds.w	r2, r2, #4294967295	; 0xffffffff
1a00093c:	f143 33ff 	adc.w	r3, r3, #4294967295	; 0xffffffff
1a000940:	e9cd 2302 	strd	r2, r3, [sp, #8]
1a000944:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
1a000948:	4313      	orrs	r3, r2
1a00094a:	d1f3      	bne.n	1a000934 <delayInaccurateUs+0x3c>
1a00094c:	b005      	add	sp, #20
1a00094e:	f85d fb04 	ldr.w	pc, [sp], #4
1a000952:	bf00      	nop

1a000954 <delay>:
1a000954:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
1a000958:	4680      	mov	r8, r0
1a00095a:	4689      	mov	r9, r1
1a00095c:	f000 fa22 	bl	1a000da4 <tickRead>
1a000960:	4606      	mov	r6, r0
1a000962:	460f      	mov	r7, r1
1a000964:	f000 fa1e 	bl	1a000da4 <tickRead>
1a000968:	1b84      	subs	r4, r0, r6
1a00096a:	eb61 0507 	sbc.w	r5, r1, r7
1a00096e:	4640      	mov	r0, r8
1a000970:	4649      	mov	r1, r9
1a000972:	4b05      	ldr	r3, [pc, #20]	; (1a000988 <delay+0x34>)
1a000974:	e9d3 2300 	ldrd	r2, r3, [r3]
1a000978:	f001 ff00 	bl	1a00277c <__aeabi_uldivmod>
1a00097c:	428d      	cmp	r5, r1
1a00097e:	bf08      	it	eq
1a000980:	4284      	cmpeq	r4, r0
1a000982:	d3ef      	bcc.n	1a000964 <delay+0x10>
1a000984:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
1a000988:	100001b8 	.word	0x100001b8

1a00098c <delayConfig>:
1a00098c:	b510      	push	{r4, lr}
1a00098e:	4604      	mov	r4, r0
1a000990:	4610      	mov	r0, r2
1a000992:	4619      	mov	r1, r3
1a000994:	4b04      	ldr	r3, [pc, #16]	; (1a0009a8 <delayConfig+0x1c>)
1a000996:	e9d3 2300 	ldrd	r2, r3, [r3]
1a00099a:	f001 feef 	bl	1a00277c <__aeabi_uldivmod>
1a00099e:	e9c4 0102 	strd	r0, r1, [r4, #8]
1a0009a2:	2300      	movs	r3, #0
1a0009a4:	7423      	strb	r3, [r4, #16]
1a0009a6:	bd10      	pop	{r4, pc}
1a0009a8:	100001b8 	.word	0x100001b8

1a0009ac <delayRead>:
1a0009ac:	b510      	push	{r4, lr}
1a0009ae:	4604      	mov	r4, r0
1a0009b0:	7c03      	ldrb	r3, [r0, #16]
1a0009b2:	b93b      	cbnz	r3, 1a0009c4 <delayRead+0x18>
1a0009b4:	f000 f9f6 	bl	1a000da4 <tickRead>
1a0009b8:	e9c4 0100 	strd	r0, r1, [r4]
1a0009bc:	2301      	movs	r3, #1
1a0009be:	7423      	strb	r3, [r4, #16]
1a0009c0:	2000      	movs	r0, #0
1a0009c2:	bd10      	pop	{r4, pc}
1a0009c4:	f000 f9ee 	bl	1a000da4 <tickRead>
1a0009c8:	e9d4 2300 	ldrd	r2, r3, [r4]
1a0009cc:	1a80      	subs	r0, r0, r2
1a0009ce:	eb61 0103 	sbc.w	r1, r1, r3
1a0009d2:	e9d4 2302 	ldrd	r2, r3, [r4, #8]
1a0009d6:	4299      	cmp	r1, r3
1a0009d8:	bf08      	it	eq
1a0009da:	4290      	cmpeq	r0, r2
1a0009dc:	d303      	bcc.n	1a0009e6 <delayRead+0x3a>
1a0009de:	2300      	movs	r3, #0
1a0009e0:	7423      	strb	r3, [r4, #16]
1a0009e2:	2001      	movs	r0, #1
1a0009e4:	bd10      	pop	{r4, pc}
1a0009e6:	2000      	movs	r0, #0
1a0009e8:	bd10      	pop	{r4, pc}
1a0009ea:	bf00      	nop

1a0009ec <delayWrite>:
1a0009ec:	b510      	push	{r4, lr}
1a0009ee:	4604      	mov	r4, r0
1a0009f0:	4610      	mov	r0, r2
1a0009f2:	4619      	mov	r1, r3
1a0009f4:	4b03      	ldr	r3, [pc, #12]	; (1a000a04 <delayWrite+0x18>)
1a0009f6:	e9d3 2300 	ldrd	r2, r3, [r3]
1a0009fa:	f001 febf 	bl	1a00277c <__aeabi_uldivmod>
1a0009fe:	e9c4 0102 	strd	r0, r1, [r4, #8]
1a000a02:	bd10      	pop	{r4, pc}
1a000a04:	100001b8 	.word	0x100001b8

1a000a08 <gpioObtainPinConfig>:
1a000a08:	b430      	push	{r4, r5}
1a000a0a:	4d09      	ldr	r5, [pc, #36]	; (1a000a30 <gpioObtainPinConfig+0x28>)
1a000a0c:	eb00 0080 	add.w	r0, r0, r0, lsl #2
1a000a10:	182c      	adds	r4, r5, r0
1a000a12:	5c28      	ldrb	r0, [r5, r0]
1a000a14:	7008      	strb	r0, [r1, #0]
1a000a16:	7861      	ldrb	r1, [r4, #1]
1a000a18:	7011      	strb	r1, [r2, #0]
1a000a1a:	78a2      	ldrb	r2, [r4, #2]
1a000a1c:	701a      	strb	r2, [r3, #0]
1a000a1e:	78e2      	ldrb	r2, [r4, #3]
1a000a20:	9b02      	ldr	r3, [sp, #8]
1a000a22:	701a      	strb	r2, [r3, #0]
1a000a24:	7922      	ldrb	r2, [r4, #4]
1a000a26:	9b03      	ldr	r3, [sp, #12]
1a000a28:	701a      	strb	r2, [r3, #0]
1a000a2a:	bc30      	pop	{r4, r5}
1a000a2c:	4770      	bx	lr
1a000a2e:	bf00      	nop
1a000a30:	1a002e08 	.word	0x1a002e08

1a000a34 <gpioConfig>:
1a000a34:	b570      	push	{r4, r5, r6, lr}
1a000a36:	b084      	sub	sp, #16
1a000a38:	460c      	mov	r4, r1
1a000a3a:	2300      	movs	r3, #0
1a000a3c:	f88d 300f 	strb.w	r3, [sp, #15]
1a000a40:	f88d 300e 	strb.w	r3, [sp, #14]
1a000a44:	f88d 300d 	strb.w	r3, [sp, #13]
1a000a48:	f88d 300c 	strb.w	r3, [sp, #12]
1a000a4c:	f88d 300b 	strb.w	r3, [sp, #11]
1a000a50:	ab03      	add	r3, sp, #12
1a000a52:	9300      	str	r3, [sp, #0]
1a000a54:	f10d 030b 	add.w	r3, sp, #11
1a000a58:	9301      	str	r3, [sp, #4]
1a000a5a:	f10d 010f 	add.w	r1, sp, #15
1a000a5e:	f10d 020e 	add.w	r2, sp, #14
1a000a62:	f10d 030d 	add.w	r3, sp, #13
1a000a66:	f7ff ffcf 	bl	1a000a08 <gpioObtainPinConfig>
1a000a6a:	2c05      	cmp	r4, #5
1a000a6c:	f200 80a8 	bhi.w	1a000bc0 <gpioConfig+0x18c>
1a000a70:	e8df f004 	tbb	[pc, r4]
1a000a74:	46278408 	.word	0x46278408
1a000a78:	0365      	.short	0x0365
1a000a7a:	4853      	ldr	r0, [pc, #332]	; (1a000bc8 <gpioConfig+0x194>)
1a000a7c:	f001 fa6e 	bl	1a001f5c <Chip_GPIO_Init>
1a000a80:	2001      	movs	r0, #1
1a000a82:	e09e      	b.n	1a000bc2 <gpioConfig+0x18e>
1a000a84:	f89d 100f 	ldrb.w	r1, [sp, #15]
1a000a88:	f89d 300e 	ldrb.w	r3, [sp, #14]
1a000a8c:	f89d 200d 	ldrb.w	r2, [sp, #13]
1a000a90:	f042 02d0 	orr.w	r2, r2, #208	; 0xd0
1a000a94:	eb03 1341 	add.w	r3, r3, r1, lsl #5
1a000a98:	494c      	ldr	r1, [pc, #304]	; (1a000bcc <gpioConfig+0x198>)
1a000a9a:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
1a000a9e:	f89d 300c 	ldrb.w	r3, [sp, #12]
1a000aa2:	f99d 200b 	ldrsb.w	r2, [sp, #11]
1a000aa6:	2001      	movs	r0, #1
1a000aa8:	fa00 f402 	lsl.w	r4, r0, r2
1a000aac:	f501 21dc 	add.w	r1, r1, #450560	; 0x6e000
1a000ab0:	f503 6300 	add.w	r3, r3, #2048	; 0x800
1a000ab4:	f851 2023 	ldr.w	r2, [r1, r3, lsl #2]
1a000ab8:	ea22 0204 	bic.w	r2, r2, r4
1a000abc:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
1a000ac0:	e07f      	b.n	1a000bc2 <gpioConfig+0x18e>
1a000ac2:	f89d 100f 	ldrb.w	r1, [sp, #15]
1a000ac6:	f89d 300e 	ldrb.w	r3, [sp, #14]
1a000aca:	f89d 200d 	ldrb.w	r2, [sp, #13]
1a000ace:	f042 02c0 	orr.w	r2, r2, #192	; 0xc0
1a000ad2:	eb03 1341 	add.w	r3, r3, r1, lsl #5
1a000ad6:	493d      	ldr	r1, [pc, #244]	; (1a000bcc <gpioConfig+0x198>)
1a000ad8:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
1a000adc:	f89d 300c 	ldrb.w	r3, [sp, #12]
1a000ae0:	f99d 200b 	ldrsb.w	r2, [sp, #11]
1a000ae4:	2001      	movs	r0, #1
1a000ae6:	fa00 f402 	lsl.w	r4, r0, r2
1a000aea:	f501 21dc 	add.w	r1, r1, #450560	; 0x6e000
1a000aee:	f503 6300 	add.w	r3, r3, #2048	; 0x800
1a000af2:	f851 2023 	ldr.w	r2, [r1, r3, lsl #2]
1a000af6:	ea22 0204 	bic.w	r2, r2, r4
1a000afa:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
1a000afe:	e060      	b.n	1a000bc2 <gpioConfig+0x18e>
1a000b00:	f89d 100f 	ldrb.w	r1, [sp, #15]
1a000b04:	f89d 300e 	ldrb.w	r3, [sp, #14]
1a000b08:	f89d 200d 	ldrb.w	r2, [sp, #13]
1a000b0c:	f042 02d8 	orr.w	r2, r2, #216	; 0xd8
1a000b10:	eb03 1341 	add.w	r3, r3, r1, lsl #5
1a000b14:	492d      	ldr	r1, [pc, #180]	; (1a000bcc <gpioConfig+0x198>)
1a000b16:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
1a000b1a:	f89d 300c 	ldrb.w	r3, [sp, #12]
1a000b1e:	f99d 200b 	ldrsb.w	r2, [sp, #11]
1a000b22:	2001      	movs	r0, #1
1a000b24:	fa00 f402 	lsl.w	r4, r0, r2
1a000b28:	f501 21dc 	add.w	r1, r1, #450560	; 0x6e000
1a000b2c:	f503 6300 	add.w	r3, r3, #2048	; 0x800
1a000b30:	f851 2023 	ldr.w	r2, [r1, r3, lsl #2]
1a000b34:	ea22 0204 	bic.w	r2, r2, r4
1a000b38:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
1a000b3c:	e041      	b.n	1a000bc2 <gpioConfig+0x18e>
1a000b3e:	f89d 100f 	ldrb.w	r1, [sp, #15]
1a000b42:	f89d 300e 	ldrb.w	r3, [sp, #14]
1a000b46:	f89d 200d 	ldrb.w	r2, [sp, #13]
1a000b4a:	f042 02c8 	orr.w	r2, r2, #200	; 0xc8
1a000b4e:	eb03 1341 	add.w	r3, r3, r1, lsl #5
1a000b52:	491e      	ldr	r1, [pc, #120]	; (1a000bcc <gpioConfig+0x198>)
1a000b54:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
1a000b58:	f89d 300c 	ldrb.w	r3, [sp, #12]
1a000b5c:	f99d 200b 	ldrsb.w	r2, [sp, #11]
1a000b60:	2001      	movs	r0, #1
1a000b62:	fa00 f402 	lsl.w	r4, r0, r2
1a000b66:	f501 21dc 	add.w	r1, r1, #450560	; 0x6e000
1a000b6a:	f503 6300 	add.w	r3, r3, #2048	; 0x800
1a000b6e:	f851 2023 	ldr.w	r2, [r1, r3, lsl #2]
1a000b72:	ea22 0204 	bic.w	r2, r2, r4
1a000b76:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
1a000b7a:	e022      	b.n	1a000bc2 <gpioConfig+0x18e>
1a000b7c:	f89d 100f 	ldrb.w	r1, [sp, #15]
1a000b80:	f89d 300e 	ldrb.w	r3, [sp, #14]
1a000b84:	f89d 200d 	ldrb.w	r2, [sp, #13]
1a000b88:	f042 02d0 	orr.w	r2, r2, #208	; 0xd0
1a000b8c:	eb03 1341 	add.w	r3, r3, r1, lsl #5
1a000b90:	490e      	ldr	r1, [pc, #56]	; (1a000bcc <gpioConfig+0x198>)
1a000b92:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
1a000b96:	f89d 400c 	ldrb.w	r4, [sp, #12]
1a000b9a:	f89d 300b 	ldrb.w	r3, [sp, #11]
1a000b9e:	b25a      	sxtb	r2, r3
1a000ba0:	2001      	movs	r0, #1
1a000ba2:	fa00 f602 	lsl.w	r6, r0, r2
1a000ba6:	4a08      	ldr	r2, [pc, #32]	; (1a000bc8 <gpioConfig+0x194>)
1a000ba8:	f504 6500 	add.w	r5, r4, #2048	; 0x800
1a000bac:	f852 1025 	ldr.w	r1, [r2, r5, lsl #2]
1a000bb0:	4331      	orrs	r1, r6
1a000bb2:	f842 1025 	str.w	r1, [r2, r5, lsl #2]
1a000bb6:	eb03 1344 	add.w	r3, r3, r4, lsl #5
1a000bba:	2100      	movs	r1, #0
1a000bbc:	54d1      	strb	r1, [r2, r3]
1a000bbe:	e000      	b.n	1a000bc2 <gpioConfig+0x18e>
1a000bc0:	2000      	movs	r0, #0
1a000bc2:	b004      	add	sp, #16
1a000bc4:	bd70      	pop	{r4, r5, r6, pc}
1a000bc6:	bf00      	nop
1a000bc8:	400f4000 	.word	0x400f4000
1a000bcc:	40086000 	.word	0x40086000

1a000bd0 <gpioWrite>:
1a000bd0:	b510      	push	{r4, lr}
1a000bd2:	b084      	sub	sp, #16
1a000bd4:	460c      	mov	r4, r1
1a000bd6:	2300      	movs	r3, #0
1a000bd8:	f88d 300f 	strb.w	r3, [sp, #15]
1a000bdc:	f88d 300e 	strb.w	r3, [sp, #14]
1a000be0:	f88d 300d 	strb.w	r3, [sp, #13]
1a000be4:	f88d 300c 	strb.w	r3, [sp, #12]
1a000be8:	f88d 300b 	strb.w	r3, [sp, #11]
1a000bec:	ab03      	add	r3, sp, #12
1a000bee:	9300      	str	r3, [sp, #0]
1a000bf0:	f10d 030b 	add.w	r3, sp, #11
1a000bf4:	9301      	str	r3, [sp, #4]
1a000bf6:	f10d 010f 	add.w	r1, sp, #15
1a000bfa:	f10d 020e 	add.w	r2, sp, #14
1a000bfe:	f10d 030d 	add.w	r3, sp, #13
1a000c02:	f7ff ff01 	bl	1a000a08 <gpioObtainPinConfig>
1a000c06:	f89d 200c 	ldrb.w	r2, [sp, #12]
1a000c0a:	f89d 300b 	ldrb.w	r3, [sp, #11]
1a000c0e:	3400      	adds	r4, #0
1a000c10:	bf18      	it	ne
1a000c12:	2401      	movne	r4, #1
1a000c14:	eb03 1342 	add.w	r3, r3, r2, lsl #5
1a000c18:	4a02      	ldr	r2, [pc, #8]	; (1a000c24 <gpioWrite+0x54>)
1a000c1a:	54d4      	strb	r4, [r2, r3]
1a000c1c:	2001      	movs	r0, #1
1a000c1e:	b004      	add	sp, #16
1a000c20:	bd10      	pop	{r4, pc}
1a000c22:	bf00      	nop
1a000c24:	400f4000 	.word	0x400f4000

1a000c28 <gpioRead>:
1a000c28:	b500      	push	{lr}
1a000c2a:	b085      	sub	sp, #20
1a000c2c:	2300      	movs	r3, #0
1a000c2e:	f88d 300f 	strb.w	r3, [sp, #15]
1a000c32:	f88d 300e 	strb.w	r3, [sp, #14]
1a000c36:	f88d 300d 	strb.w	r3, [sp, #13]
1a000c3a:	f88d 300c 	strb.w	r3, [sp, #12]
1a000c3e:	f88d 300b 	strb.w	r3, [sp, #11]
1a000c42:	ab03      	add	r3, sp, #12
1a000c44:	9300      	str	r3, [sp, #0]
1a000c46:	f10d 030b 	add.w	r3, sp, #11
1a000c4a:	9301      	str	r3, [sp, #4]
1a000c4c:	f10d 010f 	add.w	r1, sp, #15
1a000c50:	f10d 020e 	add.w	r2, sp, #14
1a000c54:	f10d 030d 	add.w	r3, sp, #13
1a000c58:	f7ff fed6 	bl	1a000a08 <gpioObtainPinConfig>
1a000c5c:	f99d 200c 	ldrsb.w	r2, [sp, #12]
1a000c60:	f89d 300b 	ldrb.w	r3, [sp, #11]
1a000c64:	eb03 1342 	add.w	r3, r3, r2, lsl #5
1a000c68:	4a04      	ldr	r2, [pc, #16]	; (1a000c7c <gpioRead+0x54>)
1a000c6a:	5cd3      	ldrb	r3, [r2, r3]
1a000c6c:	f013 0fff 	tst.w	r3, #255	; 0xff
1a000c70:	bf14      	ite	ne
1a000c72:	2001      	movne	r0, #1
1a000c74:	2000      	moveq	r0, #0
1a000c76:	b005      	add	sp, #20
1a000c78:	f85d fb04 	ldr.w	pc, [sp], #4
1a000c7c:	400f4000 	.word	0x400f4000

1a000c80 <gpioToggle>:
1a000c80:	b510      	push	{r4, lr}
1a000c82:	4604      	mov	r4, r0
1a000c84:	f7ff ffd0 	bl	1a000c28 <gpioRead>
1a000c88:	fab0 f180 	clz	r1, r0
1a000c8c:	0949      	lsrs	r1, r1, #5
1a000c8e:	4620      	mov	r0, r4
1a000c90:	f7ff ff9e 	bl	1a000bd0 <gpioWrite>
1a000c94:	bd10      	pop	{r4, pc}
1a000c96:	bf00      	nop

1a000c98 <printSetUart>:
1a000c98:	7001      	strb	r1, [r0, #0]
1a000c9a:	4770      	bx	lr

1a000c9c <printConfigUart>:
1a000c9c:	b508      	push	{r3, lr}
1a000c9e:	7001      	strb	r1, [r0, #0]
1a000ca0:	4608      	mov	r0, r1
1a000ca2:	4611      	mov	r1, r2
1a000ca4:	f000 fa10 	bl	1a0010c8 <uartConfig>
1a000ca8:	bd08      	pop	{r3, pc}
1a000caa:	bf00      	nop

1a000cac <printString>:
1a000cac:	b508      	push	{r3, lr}
1a000cae:	f000 fad7 	bl	1a001260 <uartWriteString>
1a000cb2:	bd08      	pop	{r3, pc}

1a000cb4 <printEnter>:
1a000cb4:	b508      	push	{r3, lr}
1a000cb6:	4902      	ldr	r1, [pc, #8]	; (1a000cc0 <printEnter+0xc>)
1a000cb8:	f000 fad2 	bl	1a001260 <uartWriteString>
1a000cbc:	bd08      	pop	{r3, pc}
1a000cbe:	bf00      	nop
1a000cc0:	1a002f40 	.word	0x1a002f40

1a000cc4 <printIntFormat>:
1a000cc4:	b510      	push	{r4, lr}
1a000cc6:	b092      	sub	sp, #72	; 0x48
1a000cc8:	4604      	mov	r4, r0
1a000cca:	4610      	mov	r0, r2
1a000ccc:	4619      	mov	r1, r3
1a000cce:	aa01      	add	r2, sp, #4
1a000cd0:	f89d 3050 	ldrb.w	r3, [sp, #80]	; 0x50
1a000cd4:	f7ff fd12 	bl	1a0006fc <int64ToString>
1a000cd8:	b118      	cbz	r0, 1a000ce2 <printIntFormat+0x1e>
1a000cda:	4620      	mov	r0, r4
1a000cdc:	a901      	add	r1, sp, #4
1a000cde:	f000 fabf 	bl	1a001260 <uartWriteString>
1a000ce2:	b012      	add	sp, #72	; 0x48
1a000ce4:	bd10      	pop	{r4, pc}
1a000ce6:	bf00      	nop

1a000ce8 <printUIntFormat>:
1a000ce8:	b510      	push	{r4, lr}
1a000cea:	b092      	sub	sp, #72	; 0x48
1a000cec:	4604      	mov	r4, r0
1a000cee:	4610      	mov	r0, r2
1a000cf0:	4619      	mov	r1, r3
1a000cf2:	aa01      	add	r2, sp, #4
1a000cf4:	f89d 3050 	ldrb.w	r3, [sp, #80]	; 0x50
1a000cf8:	f7ff fd46 	bl	1a000788 <uint64ToString>
1a000cfc:	b118      	cbz	r0, 1a000d06 <printUIntFormat+0x1e>
1a000cfe:	4620      	mov	r0, r4
1a000d00:	a901      	add	r1, sp, #4
1a000d02:	f000 faad 	bl	1a001260 <uartWriteString>
1a000d06:	b012      	add	sp, #72	; 0x48
1a000d08:	bd10      	pop	{r4, pc}
1a000d0a:	bf00      	nop

1a000d0c <printHex>:
1a000d0c:	b510      	push	{r4, lr}
1a000d0e:	4604      	mov	r4, r0
1a000d10:	4610      	mov	r0, r2
1a000d12:	4619      	mov	r1, r3
1a000d14:	f89d 2008 	ldrb.w	r2, [sp, #8]
1a000d18:	f7ff fd70 	bl	1a0007fc <uintToAsciiHex>
1a000d1c:	4601      	mov	r1, r0
1a000d1e:	4620      	mov	r0, r4
1a000d20:	f7ff ffc4 	bl	1a000cac <printString>
1a000d24:	bd10      	pop	{r4, pc}
1a000d26:	bf00      	nop

1a000d28 <sleepUntilNextInterrupt>:
1a000d28:	bf30      	wfi
1a000d2a:	4770      	bx	lr

1a000d2c <tickConfig>:
1a000d2c:	b508      	push	{r3, lr}
1a000d2e:	b112      	cbz	r2, 1a000d36 <tickConfig+0xa>
1a000d30:	4613      	mov	r3, r2
1a000d32:	4a17      	ldr	r2, [pc, #92]	; (1a000d90 <tickConfig+0x64>)
1a000d34:	6013      	str	r3, [r2, #0]
1a000d36:	f110 32ff 	adds.w	r2, r0, #4294967295	; 0xffffffff
1a000d3a:	f141 33ff 	adc.w	r3, r1, #4294967295	; 0xffffffff
1a000d3e:	2b00      	cmp	r3, #0
1a000d40:	bf08      	it	eq
1a000d42:	2a32      	cmpeq	r2, #50	; 0x32
1a000d44:	d220      	bcs.n	1a000d88 <tickConfig+0x5c>
1a000d46:	4602      	mov	r2, r0
1a000d48:	460b      	mov	r3, r1
1a000d4a:	4912      	ldr	r1, [pc, #72]	; (1a000d94 <tickConfig+0x68>)
1a000d4c:	e9c1 2300 	strd	r2, r3, [r1]
1a000d50:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
1a000d54:	2100      	movs	r1, #0
1a000d56:	f001 fd11 	bl	1a00277c <__aeabi_uldivmod>
1a000d5a:	4602      	mov	r2, r0
1a000d5c:	460b      	mov	r3, r1
1a000d5e:	490e      	ldr	r1, [pc, #56]	; (1a000d98 <tickConfig+0x6c>)
1a000d60:	6808      	ldr	r0, [r1, #0]
1a000d62:	2100      	movs	r1, #0
1a000d64:	f001 fd0a 	bl	1a00277c <__aeabi_uldivmod>
1a000d68:	3801      	subs	r0, #1
1a000d6a:	f1b0 7f80 	cmp.w	r0, #16777216	; 0x1000000
1a000d6e:	d20d      	bcs.n	1a000d8c <tickConfig+0x60>
1a000d70:	4b0a      	ldr	r3, [pc, #40]	; (1a000d9c <tickConfig+0x70>)
1a000d72:	6058      	str	r0, [r3, #4]
1a000d74:	21e0      	movs	r1, #224	; 0xe0
1a000d76:	4a0a      	ldr	r2, [pc, #40]	; (1a000da0 <tickConfig+0x74>)
1a000d78:	f882 1023 	strb.w	r1, [r2, #35]	; 0x23
1a000d7c:	2200      	movs	r2, #0
1a000d7e:	609a      	str	r2, [r3, #8]
1a000d80:	2207      	movs	r2, #7
1a000d82:	601a      	str	r2, [r3, #0]
1a000d84:	2001      	movs	r0, #1
1a000d86:	bd08      	pop	{r3, pc}
1a000d88:	2000      	movs	r0, #0
1a000d8a:	bd08      	pop	{r3, pc}
1a000d8c:	2001      	movs	r0, #1
1a000d8e:	bd08      	pop	{r3, pc}
1a000d90:	100000f8 	.word	0x100000f8
1a000d94:	100001b8 	.word	0x100001b8
1a000d98:	100001c0 	.word	0x100001c0
1a000d9c:	e000e010 	.word	0xe000e010
1a000da0:	e000ed00 	.word	0xe000ed00

1a000da4 <tickRead>:
1a000da4:	4b01      	ldr	r3, [pc, #4]	; (1a000dac <tickRead+0x8>)
1a000da6:	e9d3 0100 	ldrd	r0, r1, [r3]
1a000daa:	4770      	bx	lr
1a000dac:	100001b0 	.word	0x100001b0

1a000db0 <tickWrite>:
1a000db0:	4b01      	ldr	r3, [pc, #4]	; (1a000db8 <tickWrite+0x8>)
1a000db2:	e9c3 0100 	strd	r0, r1, [r3]
1a000db6:	4770      	bx	lr
1a000db8:	100001b0 	.word	0x100001b0

1a000dbc <SysTick_Handler>:
1a000dbc:	b508      	push	{r3, lr}
1a000dbe:	4906      	ldr	r1, [pc, #24]	; (1a000dd8 <SysTick_Handler+0x1c>)
1a000dc0:	e9d1 2300 	ldrd	r2, r3, [r1]
1a000dc4:	3201      	adds	r2, #1
1a000dc6:	f143 0300 	adc.w	r3, r3, #0
1a000dca:	e9c1 2300 	strd	r2, r3, [r1]
1a000dce:	4b03      	ldr	r3, [pc, #12]	; (1a000ddc <SysTick_Handler+0x20>)
1a000dd0:	681b      	ldr	r3, [r3, #0]
1a000dd2:	2000      	movs	r0, #0
1a000dd4:	4798      	blx	r3
1a000dd6:	bd08      	pop	{r3, pc}
1a000dd8:	100001b0 	.word	0x100001b0
1a000ddc:	100000f8 	.word	0x100000f8

1a000de0 <errorOcurred>:
1a000de0:	e7fe      	b.n	1a000de0 <errorOcurred>
1a000de2:	bf00      	nop

1a000de4 <doNothing>:
1a000de4:	4770      	bx	lr
1a000de6:	bf00      	nop

1a000de8 <Timer_Init>:
1a000de8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
1a000dec:	b909      	cbnz	r1, 1a000df2 <Timer_Init+0xa>
1a000dee:	f7ff fff7 	bl	1a000de0 <errorOcurred>
1a000df2:	4605      	mov	r5, r0
1a000df4:	4617      	mov	r7, r2
1a000df6:	460e      	mov	r6, r1
1a000df8:	4604      	mov	r4, r0
1a000dfa:	4a39      	ldr	r2, [pc, #228]	; (1a000ee0 <Timer_Init+0xf8>)
1a000dfc:	0043      	lsls	r3, r0, #1
1a000dfe:	4403      	add	r3, r0
1a000e00:	009b      	lsls	r3, r3, #2
1a000e02:	eb02 0803 	add.w	r8, r2, r3
1a000e06:	58d0      	ldr	r0, [r2, r3]
1a000e08:	f001 fa44 	bl	1a002294 <Chip_TIMER_Init>
1a000e0c:	f898 3004 	ldrb.w	r3, [r8, #4]
1a000e10:	095a      	lsrs	r2, r3, #5
1a000e12:	f003 031f 	and.w	r3, r3, #31
1a000e16:	2101      	movs	r1, #1
1a000e18:	4099      	lsls	r1, r3
1a000e1a:	f102 0340 	add.w	r3, r2, #64	; 0x40
1a000e1e:	4a31      	ldr	r2, [pc, #196]	; (1a000ee4 <Timer_Init+0xfc>)
1a000e20:	f842 1023 	str.w	r1, [r2, r3, lsl #2]
1a000e24:	eb04 0344 	add.w	r3, r4, r4, lsl #1
1a000e28:	009b      	lsls	r3, r3, #2
1a000e2a:	4a2d      	ldr	r2, [pc, #180]	; (1a000ee0 <Timer_Init+0xf8>)
1a000e2c:	4413      	add	r3, r2
1a000e2e:	791b      	ldrb	r3, [r3, #4]
1a000e30:	095a      	lsrs	r2, r3, #5
1a000e32:	3254      	adds	r2, #84	; 0x54
1a000e34:	492b      	ldr	r1, [pc, #172]	; (1a000ee4 <Timer_Init+0xfc>)
1a000e36:	f851 1022 	ldr.w	r1, [r1, r2, lsl #2]
1a000e3a:	f003 031f 	and.w	r3, r3, #31
1a000e3e:	2201      	movs	r2, #1
1a000e40:	fa02 f303 	lsl.w	r3, r2, r3
1a000e44:	4219      	tst	r1, r3
1a000e46:	d0ed      	beq.n	1a000e24 <Timer_Init+0x3c>
1a000e48:	4a25      	ldr	r2, [pc, #148]	; (1a000ee0 <Timer_Init+0xf8>)
1a000e4a:	006b      	lsls	r3, r5, #1
1a000e4c:	442b      	add	r3, r5
1a000e4e:	009b      	lsls	r3, r3, #2
1a000e50:	eb02 0803 	add.w	r8, r2, r3
1a000e54:	58d4      	ldr	r4, [r2, r3]
1a000e56:	4620      	mov	r0, r4
1a000e58:	f001 fa28 	bl	1a0022ac <Chip_TIMER_Reset>
1a000e5c:	012b      	lsls	r3, r5, #4
1a000e5e:	4a22      	ldr	r2, [pc, #136]	; (1a000ee8 <Timer_Init+0x100>)
1a000e60:	50d7      	str	r7, [r2, r3]
1a000e62:	6963      	ldr	r3, [r4, #20]
1a000e64:	f043 0301 	orr.w	r3, r3, #1
1a000e68:	6163      	str	r3, [r4, #20]
1a000e6a:	61a6      	str	r6, [r4, #24]
1a000e6c:	6963      	ldr	r3, [r4, #20]
1a000e6e:	f043 0302 	orr.w	r3, r3, #2
1a000e72:	6163      	str	r3, [r4, #20]
1a000e74:	6863      	ldr	r3, [r4, #4]
1a000e76:	f043 0301 	orr.w	r3, r3, #1
1a000e7a:	6063      	str	r3, [r4, #4]
1a000e7c:	f8d8 2008 	ldr.w	r2, [r8, #8]
1a000e80:	b2d3      	uxtb	r3, r2
1a000e82:	f013 0f80 	tst.w	r3, #128	; 0x80
1a000e86:	d006      	beq.n	1a000e96 <Timer_Init+0xae>
1a000e88:	f002 020f 	and.w	r2, r2, #15
1a000e8c:	4b17      	ldr	r3, [pc, #92]	; (1a000eec <Timer_Init+0x104>)
1a000e8e:	4413      	add	r3, r2
1a000e90:	22c0      	movs	r2, #192	; 0xc0
1a000e92:	761a      	strb	r2, [r3, #24]
1a000e94:	e005      	b.n	1a000ea2 <Timer_Init+0xba>
1a000e96:	4a16      	ldr	r2, [pc, #88]	; (1a000ef0 <Timer_Init+0x108>)
1a000e98:	fa42 f383 	sxtab	r3, r2, r3
1a000e9c:	22c0      	movs	r2, #192	; 0xc0
1a000e9e:	f883 2300 	strb.w	r2, [r3, #768]	; 0x300
1a000ea2:	4c0f      	ldr	r4, [pc, #60]	; (1a000ee0 <Timer_Init+0xf8>)
1a000ea4:	006e      	lsls	r6, r5, #1
1a000ea6:	1973      	adds	r3, r6, r5
1a000ea8:	009b      	lsls	r3, r3, #2
1a000eaa:	4423      	add	r3, r4
1a000eac:	689b      	ldr	r3, [r3, #8]
1a000eae:	b259      	sxtb	r1, r3
1a000eb0:	0949      	lsrs	r1, r1, #5
1a000eb2:	f003 031f 	and.w	r3, r3, #31
1a000eb6:	2201      	movs	r2, #1
1a000eb8:	fa02 f303 	lsl.w	r3, r2, r3
1a000ebc:	480c      	ldr	r0, [pc, #48]	; (1a000ef0 <Timer_Init+0x108>)
1a000ebe:	f840 3021 	str.w	r3, [r0, r1, lsl #2]
1a000ec2:	4435      	add	r5, r6
1a000ec4:	00ad      	lsls	r5, r5, #2
1a000ec6:	4425      	add	r5, r4
1a000ec8:	68a9      	ldr	r1, [r5, #8]
1a000eca:	b24b      	sxtb	r3, r1
1a000ecc:	095b      	lsrs	r3, r3, #5
1a000ece:	f001 011f 	and.w	r1, r1, #31
1a000ed2:	408a      	lsls	r2, r1
1a000ed4:	3360      	adds	r3, #96	; 0x60
1a000ed6:	f840 2023 	str.w	r2, [r0, r3, lsl #2]
1a000eda:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
1a000ede:	bf00      	nop
1a000ee0:	1a002f44 	.word	0x1a002f44
1a000ee4:	40053000 	.word	0x40053000
1a000ee8:	100000fc 	.word	0x100000fc
1a000eec:	e000ecfc 	.word	0xe000ecfc
1a000ef0:	e000e100 	.word	0xe000e100

1a000ef4 <Timer_DeInit>:
1a000ef4:	b538      	push	{r3, r4, r5, lr}
1a000ef6:	4c0d      	ldr	r4, [pc, #52]	; (1a000f2c <Timer_DeInit+0x38>)
1a000ef8:	0045      	lsls	r5, r0, #1
1a000efa:	182b      	adds	r3, r5, r0
1a000efc:	009b      	lsls	r3, r3, #2
1a000efe:	4423      	add	r3, r4
1a000f00:	689a      	ldr	r2, [r3, #8]
1a000f02:	b253      	sxtb	r3, r2
1a000f04:	095b      	lsrs	r3, r3, #5
1a000f06:	f002 021f 	and.w	r2, r2, #31
1a000f0a:	2101      	movs	r1, #1
1a000f0c:	fa01 f202 	lsl.w	r2, r1, r2
1a000f10:	3320      	adds	r3, #32
1a000f12:	4907      	ldr	r1, [pc, #28]	; (1a000f30 <Timer_DeInit+0x3c>)
1a000f14:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
1a000f18:	4428      	add	r0, r5
1a000f1a:	0080      	lsls	r0, r0, #2
1a000f1c:	5820      	ldr	r0, [r4, r0]
1a000f1e:	6843      	ldr	r3, [r0, #4]
1a000f20:	f023 0301 	bic.w	r3, r3, #1
1a000f24:	6043      	str	r3, [r0, #4]
1a000f26:	f001 f9bb 	bl	1a0022a0 <Chip_TIMER_DeInit>
1a000f2a:	bd38      	pop	{r3, r4, r5, pc}
1a000f2c:	1a002f44 	.word	0x1a002f44
1a000f30:	e000e100 	.word	0xe000e100

1a000f34 <Timer_microsecondsToTicks>:
1a000f34:	23cc      	movs	r3, #204	; 0xcc
1a000f36:	fb03 f000 	mul.w	r0, r3, r0
1a000f3a:	4770      	bx	lr

1a000f3c <Timer_EnableCompareMatch>:
1a000f3c:	b430      	push	{r4, r5}
1a000f3e:	eb01 0580 	add.w	r5, r1, r0, lsl #2
1a000f42:	4c0a      	ldr	r4, [pc, #40]	; (1a000f6c <Timer_EnableCompareMatch+0x30>)
1a000f44:	f844 3025 	str.w	r3, [r4, r5, lsl #2]
1a000f48:	eb00 0040 	add.w	r0, r0, r0, lsl #1
1a000f4c:	0080      	lsls	r0, r0, #2
1a000f4e:	4b08      	ldr	r3, [pc, #32]	; (1a000f70 <Timer_EnableCompareMatch+0x34>)
1a000f50:	5818      	ldr	r0, [r3, r0]
1a000f52:	6944      	ldr	r4, [r0, #20]
1a000f54:	b249      	sxtb	r1, r1
1a000f56:	eb01 0541 	add.w	r5, r1, r1, lsl #1
1a000f5a:	2301      	movs	r3, #1
1a000f5c:	40ab      	lsls	r3, r5
1a000f5e:	4323      	orrs	r3, r4
1a000f60:	6143      	str	r3, [r0, #20]
1a000f62:	3106      	adds	r1, #6
1a000f64:	f840 2021 	str.w	r2, [r0, r1, lsl #2]
1a000f68:	bc30      	pop	{r4, r5}
1a000f6a:	4770      	bx	lr
1a000f6c:	100000fc 	.word	0x100000fc
1a000f70:	1a002f44 	.word	0x1a002f44

1a000f74 <Timer_DisableCompareMatch>:
1a000f74:	b410      	push	{r4}
1a000f76:	eb01 0280 	add.w	r2, r1, r0, lsl #2
1a000f7a:	4c0c      	ldr	r4, [pc, #48]	; (1a000fac <Timer_DisableCompareMatch+0x38>)
1a000f7c:	4b0c      	ldr	r3, [pc, #48]	; (1a000fb0 <Timer_DisableCompareMatch+0x3c>)
1a000f7e:	f843 4022 	str.w	r4, [r3, r2, lsl #2]
1a000f82:	eb00 0040 	add.w	r0, r0, r0, lsl #1
1a000f86:	0080      	lsls	r0, r0, #2
1a000f88:	4b0a      	ldr	r3, [pc, #40]	; (1a000fb4 <Timer_DisableCompareMatch+0x40>)
1a000f8a:	581a      	ldr	r2, [r3, r0]
1a000f8c:	b249      	sxtb	r1, r1
1a000f8e:	2301      	movs	r3, #1
1a000f90:	fa03 f001 	lsl.w	r0, r3, r1
1a000f94:	6010      	str	r0, [r2, #0]
1a000f96:	6950      	ldr	r0, [r2, #20]
1a000f98:	eb01 0141 	add.w	r1, r1, r1, lsl #1
1a000f9c:	408b      	lsls	r3, r1
1a000f9e:	ea20 0303 	bic.w	r3, r0, r3
1a000fa2:	6153      	str	r3, [r2, #20]
1a000fa4:	f85d 4b04 	ldr.w	r4, [sp], #4
1a000fa8:	4770      	bx	lr
1a000faa:	bf00      	nop
1a000fac:	1a000de1 	.word	0x1a000de1
1a000fb0:	100000fc 	.word	0x100000fc
1a000fb4:	1a002f44 	.word	0x1a002f44

1a000fb8 <Timer_SetCompareMatch>:
1a000fb8:	eb00 0040 	add.w	r0, r0, r0, lsl #1
1a000fbc:	0080      	lsls	r0, r0, #2
1a000fbe:	4b03      	ldr	r3, [pc, #12]	; (1a000fcc <Timer_SetCompareMatch+0x14>)
1a000fc0:	581b      	ldr	r3, [r3, r0]
1a000fc2:	b249      	sxtb	r1, r1
1a000fc4:	3106      	adds	r1, #6
1a000fc6:	f843 2021 	str.w	r2, [r3, r1, lsl #2]
1a000fca:	4770      	bx	lr
1a000fcc:	1a002f44 	.word	0x1a002f44

1a000fd0 <TIMER0_IRQHandler>:
1a000fd0:	b510      	push	{r4, lr}
1a000fd2:	2400      	movs	r4, #0
1a000fd4:	e012      	b.n	1a000ffc <TIMER0_IRQHandler+0x2c>
1a000fd6:	4b0b      	ldr	r3, [pc, #44]	; (1a001004 <TIMER0_IRQHandler+0x34>)
1a000fd8:	681a      	ldr	r2, [r3, #0]
1a000fda:	f004 010f 	and.w	r1, r4, #15
1a000fde:	2301      	movs	r3, #1
1a000fe0:	408b      	lsls	r3, r1
1a000fe2:	421a      	tst	r2, r3
1a000fe4:	d008      	beq.n	1a000ff8 <TIMER0_IRQHandler+0x28>
1a000fe6:	4b08      	ldr	r3, [pc, #32]	; (1a001008 <TIMER0_IRQHandler+0x38>)
1a000fe8:	f853 3024 	ldr.w	r3, [r3, r4, lsl #2]
1a000fec:	4798      	blx	r3
1a000fee:	b262      	sxtb	r2, r4
1a000ff0:	2301      	movs	r3, #1
1a000ff2:	4093      	lsls	r3, r2
1a000ff4:	4a03      	ldr	r2, [pc, #12]	; (1a001004 <TIMER0_IRQHandler+0x34>)
1a000ff6:	6013      	str	r3, [r2, #0]
1a000ff8:	3401      	adds	r4, #1
1a000ffa:	b2e4      	uxtb	r4, r4
1a000ffc:	2c03      	cmp	r4, #3
1a000ffe:	d9ea      	bls.n	1a000fd6 <TIMER0_IRQHandler+0x6>
1a001000:	bd10      	pop	{r4, pc}
1a001002:	bf00      	nop
1a001004:	40084000 	.word	0x40084000
1a001008:	100000fc 	.word	0x100000fc

1a00100c <TIMER1_IRQHandler>:
1a00100c:	b510      	push	{r4, lr}
1a00100e:	2400      	movs	r4, #0
1a001010:	e013      	b.n	1a00103a <TIMER1_IRQHandler+0x2e>
1a001012:	4b0b      	ldr	r3, [pc, #44]	; (1a001040 <TIMER1_IRQHandler+0x34>)
1a001014:	681a      	ldr	r2, [r3, #0]
1a001016:	f004 010f 	and.w	r1, r4, #15
1a00101a:	2301      	movs	r3, #1
1a00101c:	408b      	lsls	r3, r1
1a00101e:	421a      	tst	r2, r3
1a001020:	d009      	beq.n	1a001036 <TIMER1_IRQHandler+0x2a>
1a001022:	1d23      	adds	r3, r4, #4
1a001024:	4a07      	ldr	r2, [pc, #28]	; (1a001044 <TIMER1_IRQHandler+0x38>)
1a001026:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
1a00102a:	4798      	blx	r3
1a00102c:	b262      	sxtb	r2, r4
1a00102e:	2301      	movs	r3, #1
1a001030:	4093      	lsls	r3, r2
1a001032:	4a03      	ldr	r2, [pc, #12]	; (1a001040 <TIMER1_IRQHandler+0x34>)
1a001034:	6013      	str	r3, [r2, #0]
1a001036:	3401      	adds	r4, #1
1a001038:	b2e4      	uxtb	r4, r4
1a00103a:	2c03      	cmp	r4, #3
1a00103c:	d9e9      	bls.n	1a001012 <TIMER1_IRQHandler+0x6>
1a00103e:	bd10      	pop	{r4, pc}
1a001040:	40085000 	.word	0x40085000
1a001044:	100000fc 	.word	0x100000fc

1a001048 <TIMER2_IRQHandler>:
1a001048:	b510      	push	{r4, lr}
1a00104a:	2400      	movs	r4, #0
1a00104c:	e014      	b.n	1a001078 <TIMER2_IRQHandler+0x30>
1a00104e:	4b0c      	ldr	r3, [pc, #48]	; (1a001080 <TIMER2_IRQHandler+0x38>)
1a001050:	681a      	ldr	r2, [r3, #0]
1a001052:	f004 010f 	and.w	r1, r4, #15
1a001056:	2301      	movs	r3, #1
1a001058:	408b      	lsls	r3, r1
1a00105a:	421a      	tst	r2, r3
1a00105c:	d00a      	beq.n	1a001074 <TIMER2_IRQHandler+0x2c>
1a00105e:	f104 0308 	add.w	r3, r4, #8
1a001062:	4a08      	ldr	r2, [pc, #32]	; (1a001084 <TIMER2_IRQHandler+0x3c>)
1a001064:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
1a001068:	4798      	blx	r3
1a00106a:	b262      	sxtb	r2, r4
1a00106c:	2301      	movs	r3, #1
1a00106e:	4093      	lsls	r3, r2
1a001070:	4a03      	ldr	r2, [pc, #12]	; (1a001080 <TIMER2_IRQHandler+0x38>)
1a001072:	6013      	str	r3, [r2, #0]
1a001074:	3401      	adds	r4, #1
1a001076:	b2e4      	uxtb	r4, r4
1a001078:	2c03      	cmp	r4, #3
1a00107a:	d9e8      	bls.n	1a00104e <TIMER2_IRQHandler+0x6>
1a00107c:	bd10      	pop	{r4, pc}
1a00107e:	bf00      	nop
1a001080:	400c3000 	.word	0x400c3000
1a001084:	100000fc 	.word	0x100000fc

1a001088 <TIMER3_IRQHandler>:
1a001088:	b510      	push	{r4, lr}
1a00108a:	2400      	movs	r4, #0
1a00108c:	e014      	b.n	1a0010b8 <TIMER3_IRQHandler+0x30>
1a00108e:	4b0c      	ldr	r3, [pc, #48]	; (1a0010c0 <TIMER3_IRQHandler+0x38>)
1a001090:	681a      	ldr	r2, [r3, #0]
1a001092:	f004 010f 	and.w	r1, r4, #15
1a001096:	2301      	movs	r3, #1
1a001098:	408b      	lsls	r3, r1
1a00109a:	421a      	tst	r2, r3
1a00109c:	d00a      	beq.n	1a0010b4 <TIMER3_IRQHandler+0x2c>
1a00109e:	f104 030c 	add.w	r3, r4, #12
1a0010a2:	4a08      	ldr	r2, [pc, #32]	; (1a0010c4 <TIMER3_IRQHandler+0x3c>)
1a0010a4:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
1a0010a8:	4798      	blx	r3
1a0010aa:	b262      	sxtb	r2, r4
1a0010ac:	2301      	movs	r3, #1
1a0010ae:	4093      	lsls	r3, r2
1a0010b0:	4a03      	ldr	r2, [pc, #12]	; (1a0010c0 <TIMER3_IRQHandler+0x38>)
1a0010b2:	6013      	str	r3, [r2, #0]
1a0010b4:	3401      	adds	r4, #1
1a0010b6:	b2e4      	uxtb	r4, r4
1a0010b8:	2c03      	cmp	r4, #3
1a0010ba:	d9e8      	bls.n	1a00108e <TIMER3_IRQHandler+0x6>
1a0010bc:	bd10      	pop	{r4, pc}
1a0010be:	bf00      	nop
1a0010c0:	400c4000 	.word	0x400c4000
1a0010c4:	100000fc 	.word	0x100000fc

1a0010c8 <uartConfig>:
1a0010c8:	b538      	push	{r3, r4, r5, lr}
1a0010ca:	460c      	mov	r4, r1
1a0010cc:	b110      	cbz	r0, 1a0010d4 <uartConfig+0xc>
1a0010ce:	2801      	cmp	r0, #1
1a0010d0:	d013      	beq.n	1a0010fa <uartConfig+0x32>
1a0010d2:	bd38      	pop	{r3, r4, r5, pc}
1a0010d4:	4d12      	ldr	r5, [pc, #72]	; (1a001120 <uartConfig+0x58>)
1a0010d6:	4628      	mov	r0, r5
1a0010d8:	f001 f942 	bl	1a002360 <Chip_UART_Init>
1a0010dc:	4628      	mov	r0, r5
1a0010de:	4621      	mov	r1, r4
1a0010e0:	f001 f9c4 	bl	1a00246c <Chip_UART_SetBaud>
1a0010e4:	2301      	movs	r3, #1
1a0010e6:	60ab      	str	r3, [r5, #8]
1a0010e8:	65eb      	str	r3, [r5, #92]	; 0x5c
1a0010ea:	4b0e      	ldr	r3, [pc, #56]	; (1a001124 <uartConfig+0x5c>)
1a0010ec:	221e      	movs	r2, #30
1a0010ee:	f8c3 2384 	str.w	r2, [r3, #900]	; 0x384
1a0010f2:	22d6      	movs	r2, #214	; 0xd6
1a0010f4:	f8c3 2388 	str.w	r2, [r3, #904]	; 0x388
1a0010f8:	bd38      	pop	{r3, r4, r5, pc}
1a0010fa:	4d0b      	ldr	r5, [pc, #44]	; (1a001128 <uartConfig+0x60>)
1a0010fc:	4628      	mov	r0, r5
1a0010fe:	f001 f92f 	bl	1a002360 <Chip_UART_Init>
1a001102:	4628      	mov	r0, r5
1a001104:	4621      	mov	r1, r4
1a001106:	f001 f9b1 	bl	1a00246c <Chip_UART_SetBaud>
1a00110a:	2301      	movs	r3, #1
1a00110c:	60ab      	str	r3, [r5, #8]
1a00110e:	65eb      	str	r3, [r5, #92]	; 0x5c
1a001110:	4b04      	ldr	r3, [pc, #16]	; (1a001124 <uartConfig+0x5c>)
1a001112:	221a      	movs	r2, #26
1a001114:	f8c3 210c 	str.w	r2, [r3, #268]	; 0x10c
1a001118:	22d2      	movs	r2, #210	; 0xd2
1a00111a:	f8c3 2110 	str.w	r2, [r3, #272]	; 0x110
1a00111e:	bd38      	pop	{r3, r4, r5, pc}
1a001120:	400c1000 	.word	0x400c1000
1a001124:	40086000 	.word	0x40086000
1a001128:	400c2000 	.word	0x400c2000

1a00112c <uartReadByte>:
1a00112c:	b110      	cbz	r0, 1a001134 <uartReadByte+0x8>
1a00112e:	2801      	cmp	r0, #1
1a001130:	d00a      	beq.n	1a001148 <uartReadByte+0x1c>
1a001132:	e013      	b.n	1a00115c <uartReadByte+0x30>
1a001134:	4b0c      	ldr	r3, [pc, #48]	; (1a001168 <uartReadByte+0x3c>)
1a001136:	695b      	ldr	r3, [r3, #20]
1a001138:	f013 0f01 	tst.w	r3, #1
1a00113c:	d010      	beq.n	1a001160 <uartReadByte+0x34>
1a00113e:	4b0a      	ldr	r3, [pc, #40]	; (1a001168 <uartReadByte+0x3c>)
1a001140:	681b      	ldr	r3, [r3, #0]
1a001142:	700b      	strb	r3, [r1, #0]
1a001144:	2001      	movs	r0, #1
1a001146:	4770      	bx	lr
1a001148:	4b08      	ldr	r3, [pc, #32]	; (1a00116c <uartReadByte+0x40>)
1a00114a:	695b      	ldr	r3, [r3, #20]
1a00114c:	f013 0f01 	tst.w	r3, #1
1a001150:	d008      	beq.n	1a001164 <uartReadByte+0x38>
1a001152:	4b06      	ldr	r3, [pc, #24]	; (1a00116c <uartReadByte+0x40>)
1a001154:	681b      	ldr	r3, [r3, #0]
1a001156:	700b      	strb	r3, [r1, #0]
1a001158:	2001      	movs	r0, #1
1a00115a:	4770      	bx	lr
1a00115c:	2001      	movs	r0, #1
1a00115e:	4770      	bx	lr
1a001160:	2000      	movs	r0, #0
1a001162:	4770      	bx	lr
1a001164:	2000      	movs	r0, #0
1a001166:	4770      	bx	lr
1a001168:	400c1000 	.word	0x400c1000
1a00116c:	400c2000 	.word	0x400c2000

1a001170 <uartWriteByte>:
1a001170:	b110      	cbz	r0, 1a001178 <uartWriteByte+0x8>
1a001172:	2801      	cmp	r0, #1
1a001174:	d008      	beq.n	1a001188 <uartWriteByte+0x18>
1a001176:	4770      	bx	lr
1a001178:	4b07      	ldr	r3, [pc, #28]	; (1a001198 <uartWriteByte+0x28>)
1a00117a:	695b      	ldr	r3, [r3, #20]
1a00117c:	f013 0f20 	tst.w	r3, #32
1a001180:	d0fa      	beq.n	1a001178 <uartWriteByte+0x8>
1a001182:	4b05      	ldr	r3, [pc, #20]	; (1a001198 <uartWriteByte+0x28>)
1a001184:	6019      	str	r1, [r3, #0]
1a001186:	4770      	bx	lr
1a001188:	4b04      	ldr	r3, [pc, #16]	; (1a00119c <uartWriteByte+0x2c>)
1a00118a:	695b      	ldr	r3, [r3, #20]
1a00118c:	f013 0f20 	tst.w	r3, #32
1a001190:	d0fa      	beq.n	1a001188 <uartWriteByte+0x18>
1a001192:	4b02      	ldr	r3, [pc, #8]	; (1a00119c <uartWriteByte+0x2c>)
1a001194:	6019      	str	r1, [r3, #0]
1a001196:	4770      	bx	lr
1a001198:	400c1000 	.word	0x400c1000
1a00119c:	400c2000 	.word	0x400c2000

1a0011a0 <waitForReceiveStringOrTimeout>:
1a0011a0:	b510      	push	{r4, lr}
1a0011a2:	b082      	sub	sp, #8
1a0011a4:	460c      	mov	r4, r1
1a0011a6:	780b      	ldrb	r3, [r1, #0]
1a0011a8:	2b03      	cmp	r3, #3
1a0011aa:	d836      	bhi.n	1a00121a <waitForReceiveStringOrTimeout+0x7a>
1a0011ac:	e8df f003 	tbb	[pc, r3]
1a0011b0:	322f0d02 	.word	0x322f0d02
1a0011b4:	f101 0018 	add.w	r0, r1, #24
1a0011b8:	e9d1 2304 	ldrd	r2, r3, [r1, #16]
1a0011bc:	f7ff fbe6 	bl	1a00098c <delayConfig>
1a0011c0:	2300      	movs	r3, #0
1a0011c2:	8163      	strh	r3, [r4, #10]
1a0011c4:	2301      	movs	r3, #1
1a0011c6:	7023      	strb	r3, [r4, #0]
1a0011c8:	e029      	b.n	1a00121e <waitForReceiveStringOrTimeout+0x7e>
1a0011ca:	f10d 0107 	add.w	r1, sp, #7
1a0011ce:	f7ff ffad 	bl	1a00112c <uartReadByte>
1a0011d2:	b1a0      	cbz	r0, 1a0011fe <waitForReceiveStringOrTimeout+0x5e>
1a0011d4:	2000      	movs	r0, #0
1a0011d6:	f89d 1007 	ldrb.w	r1, [sp, #7]
1a0011da:	f7ff ffc9 	bl	1a001170 <uartWriteByte>
1a0011de:	6862      	ldr	r2, [r4, #4]
1a0011e0:	8963      	ldrh	r3, [r4, #10]
1a0011e2:	5cd1      	ldrb	r1, [r2, r3]
1a0011e4:	f89d 2007 	ldrb.w	r2, [sp, #7]
1a0011e8:	4291      	cmp	r1, r2
1a0011ea:	d108      	bne.n	1a0011fe <waitForReceiveStringOrTimeout+0x5e>
1a0011ec:	3301      	adds	r3, #1
1a0011ee:	b29b      	uxth	r3, r3
1a0011f0:	8163      	strh	r3, [r4, #10]
1a0011f2:	8922      	ldrh	r2, [r4, #8]
1a0011f4:	3a01      	subs	r2, #1
1a0011f6:	4293      	cmp	r3, r2
1a0011f8:	d101      	bne.n	1a0011fe <waitForReceiveStringOrTimeout+0x5e>
1a0011fa:	2302      	movs	r3, #2
1a0011fc:	7023      	strb	r3, [r4, #0]
1a0011fe:	f104 0018 	add.w	r0, r4, #24
1a001202:	f7ff fbd3 	bl	1a0009ac <delayRead>
1a001206:	b150      	cbz	r0, 1a00121e <waitForReceiveStringOrTimeout+0x7e>
1a001208:	2303      	movs	r3, #3
1a00120a:	7023      	strb	r3, [r4, #0]
1a00120c:	e007      	b.n	1a00121e <waitForReceiveStringOrTimeout+0x7e>
1a00120e:	2300      	movs	r3, #0
1a001210:	700b      	strb	r3, [r1, #0]
1a001212:	e004      	b.n	1a00121e <waitForReceiveStringOrTimeout+0x7e>
1a001214:	2300      	movs	r3, #0
1a001216:	700b      	strb	r3, [r1, #0]
1a001218:	e001      	b.n	1a00121e <waitForReceiveStringOrTimeout+0x7e>
1a00121a:	2300      	movs	r3, #0
1a00121c:	700b      	strb	r3, [r1, #0]
1a00121e:	7820      	ldrb	r0, [r4, #0]
1a001220:	b002      	add	sp, #8
1a001222:	bd10      	pop	{r4, pc}

1a001224 <waitForReceiveStringOrTimeoutBlocking>:
1a001224:	b510      	push	{r4, lr}
1a001226:	b08c      	sub	sp, #48	; 0x30
1a001228:	4604      	mov	r4, r0
1a00122a:	2000      	movs	r0, #0
1a00122c:	f88d 0000 	strb.w	r0, [sp]
1a001230:	9101      	str	r1, [sp, #4]
1a001232:	f8ad 2008 	strh.w	r2, [sp, #8]
1a001236:	e9dd 230e 	ldrd	r2, r3, [sp, #56]	; 0x38
1a00123a:	e9cd 2304 	strd	r2, r3, [sp, #16]
1a00123e:	e003      	b.n	1a001248 <waitForReceiveStringOrTimeoutBlocking+0x24>
1a001240:	4620      	mov	r0, r4
1a001242:	4669      	mov	r1, sp
1a001244:	f7ff ffac 	bl	1a0011a0 <waitForReceiveStringOrTimeout>
1a001248:	1e83      	subs	r3, r0, #2
1a00124a:	b2db      	uxtb	r3, r3
1a00124c:	2b01      	cmp	r3, #1
1a00124e:	d8f7      	bhi.n	1a001240 <waitForReceiveStringOrTimeoutBlocking+0x1c>
1a001250:	2803      	cmp	r0, #3
1a001252:	d001      	beq.n	1a001258 <waitForReceiveStringOrTimeoutBlocking+0x34>
1a001254:	2001      	movs	r0, #1
1a001256:	e000      	b.n	1a00125a <waitForReceiveStringOrTimeoutBlocking+0x36>
1a001258:	2000      	movs	r0, #0
1a00125a:	b00c      	add	sp, #48	; 0x30
1a00125c:	bd10      	pop	{r4, pc}
1a00125e:	bf00      	nop

1a001260 <uartWriteString>:
1a001260:	b538      	push	{r3, r4, r5, lr}
1a001262:	4605      	mov	r5, r0
1a001264:	460c      	mov	r4, r1
1a001266:	e003      	b.n	1a001270 <uartWriteString+0x10>
1a001268:	4628      	mov	r0, r5
1a00126a:	f7ff ff81 	bl	1a001170 <uartWriteByte>
1a00126e:	3401      	adds	r4, #1
1a001270:	7821      	ldrb	r1, [r4, #0]
1a001272:	2900      	cmp	r1, #0
1a001274:	d1f8      	bne.n	1a001268 <uartWriteString+0x8>
1a001276:	bd38      	pop	{r3, r4, r5, pc}

1a001278 <UART2_IRQHandler>:
1a001278:	4770      	bx	lr
1a00127a:	bf00      	nop

1a00127c <UART3_IRQHandler>:
1a00127c:	4770      	bx	lr
1a00127e:	bf00      	nop

1a001280 <Board_LED_Init>:
1a001280:	b470      	push	{r4, r5, r6}
1a001282:	2200      	movs	r2, #0
1a001284:	e014      	b.n	1a0012b0 <Board_LED_Init+0x30>
1a001286:	4b0c      	ldr	r3, [pc, #48]	; (1a0012b8 <Board_LED_Init+0x38>)
1a001288:	f813 4012 	ldrb.w	r4, [r3, r2, lsl #1]
1a00128c:	eb03 0342 	add.w	r3, r3, r2, lsl #1
1a001290:	7859      	ldrb	r1, [r3, #1]
1a001292:	480a      	ldr	r0, [pc, #40]	; (1a0012bc <Board_LED_Init+0x3c>)
1a001294:	f504 6500 	add.w	r5, r4, #2048	; 0x800
1a001298:	f850 6025 	ldr.w	r6, [r0, r5, lsl #2]
1a00129c:	2301      	movs	r3, #1
1a00129e:	408b      	lsls	r3, r1
1a0012a0:	4333      	orrs	r3, r6
1a0012a2:	f840 3025 	str.w	r3, [r0, r5, lsl #2]
1a0012a6:	eb01 1144 	add.w	r1, r1, r4, lsl #5
1a0012aa:	2300      	movs	r3, #0
1a0012ac:	5443      	strb	r3, [r0, r1]
1a0012ae:	3201      	adds	r2, #1
1a0012b0:	2a05      	cmp	r2, #5
1a0012b2:	d9e8      	bls.n	1a001286 <Board_LED_Init+0x6>
1a0012b4:	bc70      	pop	{r4, r5, r6}
1a0012b6:	4770      	bx	lr
1a0012b8:	1a002f74 	.word	0x1a002f74
1a0012bc:	400f4000 	.word	0x400f4000

1a0012c0 <Board_UART_Init>:
1a0012c0:	4b03      	ldr	r3, [pc, #12]	; (1a0012d0 <Board_UART_Init+0x10>)
1a0012c2:	2212      	movs	r2, #18
1a0012c4:	f8c3 2310 	str.w	r2, [r3, #784]	; 0x310
1a0012c8:	22d1      	movs	r2, #209	; 0xd1
1a0012ca:	f8c3 2104 	str.w	r2, [r3, #260]	; 0x104
1a0012ce:	4770      	bx	lr
1a0012d0:	40086000 	.word	0x40086000

1a0012d4 <Board_Debug_Init>:
1a0012d4:	b510      	push	{r4, lr}
1a0012d6:	4c08      	ldr	r4, [pc, #32]	; (1a0012f8 <Board_Debug_Init+0x24>)
1a0012d8:	4620      	mov	r0, r4
1a0012da:	f7ff fff1 	bl	1a0012c0 <Board_UART_Init>
1a0012de:	4620      	mov	r0, r4
1a0012e0:	f001 f83e 	bl	1a002360 <Chip_UART_Init>
1a0012e4:	4620      	mov	r0, r4
1a0012e6:	f44f 31e1 	mov.w	r1, #115200	; 0x1c200
1a0012ea:	f001 f957 	bl	1a00259c <Chip_UART_SetBaudFDR>
1a0012ee:	2303      	movs	r3, #3
1a0012f0:	60e3      	str	r3, [r4, #12]
1a0012f2:	2301      	movs	r3, #1
1a0012f4:	65e3      	str	r3, [r4, #92]	; 0x5c
1a0012f6:	bd10      	pop	{r4, pc}
1a0012f8:	400c1000 	.word	0x400c1000

1a0012fc <Board_UARTPutChar>:
1a0012fc:	4b03      	ldr	r3, [pc, #12]	; (1a00130c <Board_UARTPutChar+0x10>)
1a0012fe:	695b      	ldr	r3, [r3, #20]
1a001300:	f013 0f20 	tst.w	r3, #32
1a001304:	d0fa      	beq.n	1a0012fc <Board_UARTPutChar>
1a001306:	4b01      	ldr	r3, [pc, #4]	; (1a00130c <Board_UARTPutChar+0x10>)
1a001308:	6018      	str	r0, [r3, #0]
1a00130a:	4770      	bx	lr
1a00130c:	400c1000 	.word	0x400c1000

1a001310 <Board_UARTGetChar>:
1a001310:	4b05      	ldr	r3, [pc, #20]	; (1a001328 <Board_UARTGetChar+0x18>)
1a001312:	695b      	ldr	r3, [r3, #20]
1a001314:	f013 0f01 	tst.w	r3, #1
1a001318:	d003      	beq.n	1a001322 <Board_UARTGetChar+0x12>
1a00131a:	4b03      	ldr	r3, [pc, #12]	; (1a001328 <Board_UARTGetChar+0x18>)
1a00131c:	6818      	ldr	r0, [r3, #0]
1a00131e:	b2c0      	uxtb	r0, r0
1a001320:	4770      	bx	lr
1a001322:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
1a001326:	4770      	bx	lr
1a001328:	400c1000 	.word	0x400c1000

1a00132c <Board_UARTPutSTR>:
1a00132c:	b510      	push	{r4, lr}
1a00132e:	4604      	mov	r4, r0
1a001330:	e002      	b.n	1a001338 <Board_UARTPutSTR+0xc>
1a001332:	3401      	adds	r4, #1
1a001334:	f7ff ffe2 	bl	1a0012fc <Board_UARTPutChar>
1a001338:	7820      	ldrb	r0, [r4, #0]
1a00133a:	2800      	cmp	r0, #0
1a00133c:	d1f9      	bne.n	1a001332 <Board_UARTPutSTR+0x6>
1a00133e:	bd10      	pop	{r4, pc}

1a001340 <Board_LED_Set>:
1a001340:	2805      	cmp	r0, #5
1a001342:	d80b      	bhi.n	1a00135c <Board_LED_Set+0x1c>
1a001344:	4b06      	ldr	r3, [pc, #24]	; (1a001360 <Board_LED_Set+0x20>)
1a001346:	f813 2010 	ldrb.w	r2, [r3, r0, lsl #1]
1a00134a:	eb03 0040 	add.w	r0, r3, r0, lsl #1
1a00134e:	7843      	ldrb	r3, [r0, #1]
1a001350:	f081 0101 	eor.w	r1, r1, #1
1a001354:	eb03 1342 	add.w	r3, r3, r2, lsl #5
1a001358:	4a02      	ldr	r2, [pc, #8]	; (1a001364 <Board_LED_Set+0x24>)
1a00135a:	54d1      	strb	r1, [r2, r3]
1a00135c:	4770      	bx	lr
1a00135e:	bf00      	nop
1a001360:	1a002f74 	.word	0x1a002f74
1a001364:	400f4000 	.word	0x400f4000

1a001368 <Board_LED_Test>:
1a001368:	2805      	cmp	r0, #5
1a00136a:	d80f      	bhi.n	1a00138c <Board_LED_Test+0x24>
1a00136c:	4b08      	ldr	r3, [pc, #32]	; (1a001390 <Board_LED_Test+0x28>)
1a00136e:	f813 2010 	ldrb.w	r2, [r3, r0, lsl #1]
1a001372:	eb03 0040 	add.w	r0, r3, r0, lsl #1
1a001376:	7843      	ldrb	r3, [r0, #1]
1a001378:	eb03 1342 	add.w	r3, r3, r2, lsl #5
1a00137c:	4a05      	ldr	r2, [pc, #20]	; (1a001394 <Board_LED_Test+0x2c>)
1a00137e:	5cd3      	ldrb	r3, [r2, r3]
1a001380:	f013 0fff 	tst.w	r3, #255	; 0xff
1a001384:	bf0c      	ite	eq
1a001386:	2001      	moveq	r0, #1
1a001388:	2000      	movne	r0, #0
1a00138a:	4770      	bx	lr
1a00138c:	2000      	movs	r0, #0
1a00138e:	4770      	bx	lr
1a001390:	1a002f74 	.word	0x1a002f74
1a001394:	400f4000 	.word	0x400f4000

1a001398 <Board_LED_Toggle>:
1a001398:	b510      	push	{r4, lr}
1a00139a:	4604      	mov	r4, r0
1a00139c:	f7ff ffe4 	bl	1a001368 <Board_LED_Test>
1a0013a0:	f080 0101 	eor.w	r1, r0, #1
1a0013a4:	4620      	mov	r0, r4
1a0013a6:	b2c9      	uxtb	r1, r1
1a0013a8:	f7ff ffca 	bl	1a001340 <Board_LED_Set>
1a0013ac:	bd10      	pop	{r4, pc}
1a0013ae:	bf00      	nop

1a0013b0 <Board_ENET_GetMacADDR>:
1a0013b0:	b082      	sub	sp, #8
1a0013b2:	4602      	mov	r2, r0
1a0013b4:	4b06      	ldr	r3, [pc, #24]	; (1a0013d0 <Board_ENET_GetMacADDR+0x20>)
1a0013b6:	f853 0f0c 	ldr.w	r0, [r3, #12]!
1a0013ba:	9000      	str	r0, [sp, #0]
1a0013bc:	889b      	ldrh	r3, [r3, #4]
1a0013be:	f8ad 3004 	strh.w	r3, [sp, #4]
1a0013c2:	9800      	ldr	r0, [sp, #0]
1a0013c4:	6010      	str	r0, [r2, #0]
1a0013c6:	f8bd 3004 	ldrh.w	r3, [sp, #4]
1a0013ca:	8093      	strh	r3, [r2, #4]
1a0013cc:	b002      	add	sp, #8
1a0013ce:	4770      	bx	lr
1a0013d0:	1a002f74 	.word	0x1a002f74

1a0013d4 <Board_Init>:
1a0013d4:	b508      	push	{r3, lr}
1a0013d6:	f7ff ff7d 	bl	1a0012d4 <Board_Debug_Init>
1a0013da:	4806      	ldr	r0, [pc, #24]	; (1a0013f4 <Board_Init+0x20>)
1a0013dc:	f000 fdbe 	bl	1a001f5c <Chip_GPIO_Init>
1a0013e0:	f7ff ff4e 	bl	1a001280 <Board_LED_Init>
1a0013e4:	4a04      	ldr	r2, [pc, #16]	; (1a0013f8 <Board_Init+0x24>)
1a0013e6:	f8d2 312c 	ldr.w	r3, [r2, #300]	; 0x12c
1a0013ea:	f043 0304 	orr.w	r3, r3, #4
1a0013ee:	f8c2 312c 	str.w	r3, [r2, #300]	; 0x12c
1a0013f2:	bd08      	pop	{r3, pc}
1a0013f4:	400f4000 	.word	0x400f4000
1a0013f8:	40043000 	.word	0x40043000

1a0013fc <Board_I2C_Init>:
1a0013fc:	2801      	cmp	r0, #1
1a0013fe:	d106      	bne.n	1a00140e <Board_I2C_Init+0x12>
1a001400:	4b06      	ldr	r3, [pc, #24]	; (1a00141c <Board_I2C_Init+0x20>)
1a001402:	22c1      	movs	r2, #193	; 0xc1
1a001404:	f8c3 210c 	str.w	r2, [r3, #268]	; 0x10c
1a001408:	f8c3 2110 	str.w	r2, [r3, #272]	; 0x110
1a00140c:	4770      	bx	lr
1a00140e:	f640 0208 	movw	r2, #2056	; 0x808
1a001412:	4b02      	ldr	r3, [pc, #8]	; (1a00141c <Board_I2C_Init+0x20>)
1a001414:	f8c3 2c84 	str.w	r2, [r3, #3204]	; 0xc84
1a001418:	4770      	bx	lr
1a00141a:	bf00      	nop
1a00141c:	40086000 	.word	0x40086000

1a001420 <Board_SDMMC_Init>:
1a001420:	4b09      	ldr	r3, [pc, #36]	; (1a001448 <Board_SDMMC_Init+0x28>)
1a001422:	22e7      	movs	r2, #231	; 0xe7
1a001424:	f8c3 20a4 	str.w	r2, [r3, #164]	; 0xa4
1a001428:	f8c3 20a8 	str.w	r2, [r3, #168]	; 0xa8
1a00142c:	f8c3 20ac 	str.w	r2, [r3, #172]	; 0xac
1a001430:	f8c3 20b0 	str.w	r2, [r3, #176]	; 0xb0
1a001434:	2154      	movs	r1, #84	; 0x54
1a001436:	f8c3 1c08 	str.w	r1, [r3, #3080]	; 0xc08
1a00143a:	f8c3 2098 	str.w	r2, [r3, #152]	; 0x98
1a00143e:	2247      	movs	r2, #71	; 0x47
1a001440:	f8c3 20b4 	str.w	r2, [r3, #180]	; 0xb4
1a001444:	4770      	bx	lr
1a001446:	bf00      	nop
1a001448:	40086000 	.word	0x40086000

1a00144c <Board_SSP_Init>:
1a00144c:	4b08      	ldr	r3, [pc, #32]	; (1a001470 <Board_SSP_Init+0x24>)
1a00144e:	4298      	cmp	r0, r3
1a001450:	d10c      	bne.n	1a00146c <Board_SSP_Init+0x20>
1a001452:	f5a3 337c 	sub.w	r3, r3, #258048	; 0x3f000
1a001456:	22f5      	movs	r2, #245	; 0xf5
1a001458:	f8c3 2094 	str.w	r2, [r3, #148]	; 0x94
1a00145c:	22f0      	movs	r2, #240	; 0xf0
1a00145e:	f8c3 2790 	str.w	r2, [r3, #1936]	; 0x790
1a001462:	22d5      	movs	r2, #213	; 0xd5
1a001464:	f8c3 2090 	str.w	r2, [r3, #144]	; 0x90
1a001468:	f8c3 208c 	str.w	r2, [r3, #140]	; 0x8c
1a00146c:	4770      	bx	lr
1a00146e:	bf00      	nop
1a001470:	400c5000 	.word	0x400c5000

1a001474 <Board_DAC_Init>:
1a001474:	4a03      	ldr	r2, [pc, #12]	; (1a001484 <Board_DAC_Init+0x10>)
1a001476:	f8d2 3c90 	ldr.w	r3, [r2, #3216]	; 0xc90
1a00147a:	f043 0301 	orr.w	r3, r3, #1
1a00147e:	f8c2 3c90 	str.w	r3, [r2, #3216]	; 0xc90
1a001482:	4770      	bx	lr
1a001484:	40086000 	.word	0x40086000

1a001488 <Board_SetupMuxing>:
1a001488:	b410      	push	{r4}
1a00148a:	2300      	movs	r3, #0
1a00148c:	e00c      	b.n	1a0014a8 <Board_SetupMuxing+0x20>
1a00148e:	4a09      	ldr	r2, [pc, #36]	; (1a0014b4 <Board_SetupMuxing+0x2c>)
1a001490:	eb02 0183 	add.w	r1, r2, r3, lsl #2
1a001494:	f812 4023 	ldrb.w	r4, [r2, r3, lsl #2]
1a001498:	784a      	ldrb	r2, [r1, #1]
1a00149a:	8848      	ldrh	r0, [r1, #2]
1a00149c:	eb02 1244 	add.w	r2, r2, r4, lsl #5
1a0014a0:	4905      	ldr	r1, [pc, #20]	; (1a0014b8 <Board_SetupMuxing+0x30>)
1a0014a2:	f841 0022 	str.w	r0, [r1, r2, lsl #2]
1a0014a6:	3301      	adds	r3, #1
1a0014a8:	2b17      	cmp	r3, #23
1a0014aa:	d9f0      	bls.n	1a00148e <Board_SetupMuxing+0x6>
1a0014ac:	f85d 4b04 	ldr.w	r4, [sp], #4
1a0014b0:	4770      	bx	lr
1a0014b2:	bf00      	nop
1a0014b4:	1a002f90 	.word	0x1a002f90
1a0014b8:	40086000 	.word	0x40086000

1a0014bc <Board_SetupClocking>:
1a0014bc:	b510      	push	{r4, lr}
1a0014be:	4a19      	ldr	r2, [pc, #100]	; (1a001524 <Board_SetupClocking+0x68>)
1a0014c0:	f8d2 3120 	ldr.w	r3, [r2, #288]	; 0x120
1a0014c4:	f423 4370 	bic.w	r3, r3, #61440	; 0xf000
1a0014c8:	f443 4310 	orr.w	r3, r3, #36864	; 0x9000
1a0014cc:	f8c2 3120 	str.w	r3, [r2, #288]	; 0x120
1a0014d0:	f8d2 3124 	ldr.w	r3, [r2, #292]	; 0x124
1a0014d4:	f423 4370 	bic.w	r3, r3, #61440	; 0xf000
1a0014d8:	f443 4310 	orr.w	r3, r3, #36864	; 0x9000
1a0014dc:	f8c2 3124 	str.w	r3, [r2, #292]	; 0x124
1a0014e0:	2006      	movs	r0, #6
1a0014e2:	4911      	ldr	r1, [pc, #68]	; (1a001528 <Board_SetupClocking+0x6c>)
1a0014e4:	2201      	movs	r2, #1
1a0014e6:	f000 fdff 	bl	1a0020e8 <Chip_SetupCoreClock>
1a0014ea:	2400      	movs	r4, #0
1a0014ec:	e00d      	b.n	1a00150a <Board_SetupClocking+0x4e>
1a0014ee:	4b0f      	ldr	r3, [pc, #60]	; (1a00152c <Board_SetupClocking+0x70>)
1a0014f0:	eb03 0384 	add.w	r3, r3, r4, lsl #2
1a0014f4:	f893 0060 	ldrb.w	r0, [r3, #96]	; 0x60
1a0014f8:	f893 1061 	ldrb.w	r1, [r3, #97]	; 0x61
1a0014fc:	f893 2062 	ldrb.w	r2, [r3, #98]	; 0x62
1a001500:	f893 3063 	ldrb.w	r3, [r3, #99]	; 0x63
1a001504:	f000 fb98 	bl	1a001c38 <Chip_Clock_SetBaseClock>
1a001508:	3401      	adds	r4, #1
1a00150a:	2c02      	cmp	r4, #2
1a00150c:	d9ef      	bls.n	1a0014ee <Board_SetupClocking+0x32>
1a00150e:	4b05      	ldr	r3, [pc, #20]	; (1a001524 <Board_SetupClocking+0x68>)
1a001510:	685a      	ldr	r2, [r3, #4]
1a001512:	f022 020c 	bic.w	r2, r2, #12
1a001516:	605a      	str	r2, [r3, #4]
1a001518:	685a      	ldr	r2, [r3, #4]
1a00151a:	f042 0203 	orr.w	r2, r2, #3
1a00151e:	605a      	str	r2, [r3, #4]
1a001520:	bd10      	pop	{r4, pc}
1a001522:	bf00      	nop
1a001524:	40043000 	.word	0x40043000
1a001528:	0c28cb00 	.word	0x0c28cb00
1a00152c:	1a002f90 	.word	0x1a002f90

1a001530 <Board_SystemInit>:
1a001530:	b508      	push	{r3, lr}
1a001532:	f7ff ffa9 	bl	1a001488 <Board_SetupMuxing>
1a001536:	f7ff ffc1 	bl	1a0014bc <Board_SetupClocking>
1a00153a:	bd08      	pop	{r3, pc}

1a00153c <SystemInit>:
1a00153c:	b508      	push	{r3, lr}
1a00153e:	4b04      	ldr	r3, [pc, #16]	; (1a001550 <SystemInit+0x14>)
1a001540:	4a04      	ldr	r2, [pc, #16]	; (1a001554 <SystemInit+0x18>)
1a001542:	601a      	str	r2, [r3, #0]
1a001544:	f000 fcde 	bl	1a001f04 <fpuInit>
1a001548:	f7ff fff2 	bl	1a001530 <Board_SystemInit>
1a00154c:	bd08      	pop	{r3, pc}
1a00154e:	bf00      	nop
1a001550:	e000ed08 	.word	0xe000ed08
1a001554:	1a000000 	.word	0x1a000000

1a001558 <Chip_USB_PllSetup>:
1a001558:	b508      	push	{r3, lr}
1a00155a:	2007      	movs	r0, #7
1a00155c:	f000 f9de 	bl	1a00191c <Chip_Clock_GetClockInputHz>
1a001560:	4b08      	ldr	r3, [pc, #32]	; (1a001584 <Chip_USB_PllSetup+0x2c>)
1a001562:	4298      	cmp	r0, r3
1a001564:	d00d      	beq.n	1a001582 <Chip_USB_PllSetup+0x2a>
1a001566:	2006      	movs	r0, #6
1a001568:	2100      	movs	r1, #0
1a00156a:	4a07      	ldr	r2, [pc, #28]	; (1a001588 <Chip_USB_PllSetup+0x30>)
1a00156c:	f000 fc90 	bl	1a001e90 <Chip_Clock_SetupPLL>
1a001570:	2000      	movs	r0, #0
1a001572:	f000 fcad 	bl	1a001ed0 <Chip_Clock_EnablePLL>
1a001576:	2000      	movs	r0, #0
1a001578:	f000 fcbe 	bl	1a001ef8 <Chip_Clock_GetPLLStatus>
1a00157c:	f010 0f01 	tst.w	r0, #1
1a001580:	d0f9      	beq.n	1a001576 <Chip_USB_PllSetup+0x1e>
1a001582:	bd08      	pop	{r3, pc}
1a001584:	1c9c3800 	.word	0x1c9c3800
1a001588:	1a002ffc 	.word	0x1a002ffc

1a00158c <Chip_USB0_Init>:
1a00158c:	b508      	push	{r3, lr}
1a00158e:	f7ff ffe3 	bl	1a001558 <Chip_USB_PllSetup>
1a001592:	2001      	movs	r0, #1
1a001594:	2107      	movs	r1, #7
1a001596:	4602      	mov	r2, r0
1a001598:	4603      	mov	r3, r0
1a00159a:	f000 fb4d 	bl	1a001c38 <Chip_Clock_SetBaseClock>
1a00159e:	2001      	movs	r0, #1
1a0015a0:	f000 fb86 	bl	1a001cb0 <Chip_Clock_EnableBaseClock>
1a0015a4:	2065      	movs	r0, #101	; 0x65
1a0015a6:	2101      	movs	r1, #1
1a0015a8:	460a      	mov	r2, r1
1a0015aa:	460b      	mov	r3, r1
1a0015ac:	f000 fbc0 	bl	1a001d30 <Chip_Clock_EnableOpts>
1a0015b0:	4a02      	ldr	r2, [pc, #8]	; (1a0015bc <Chip_USB0_Init+0x30>)
1a0015b2:	6853      	ldr	r3, [r2, #4]
1a0015b4:	f023 0320 	bic.w	r3, r3, #32
1a0015b8:	6053      	str	r3, [r2, #4]
1a0015ba:	bd08      	pop	{r3, pc}
1a0015bc:	40043000 	.word	0x40043000

1a0015c0 <Chip_USB1_Init>:
1a0015c0:	b508      	push	{r3, lr}
1a0015c2:	f7ff ffc9 	bl	1a001558 <Chip_USB_PllSetup>
1a0015c6:	2000      	movs	r0, #0
1a0015c8:	2107      	movs	r1, #7
1a0015ca:	2204      	movs	r2, #4
1a0015cc:	f000 f960 	bl	1a001890 <Chip_Clock_SetDivider>
1a0015d0:	2003      	movs	r0, #3
1a0015d2:	210c      	movs	r1, #12
1a0015d4:	2202      	movs	r2, #2
1a0015d6:	f000 f95b 	bl	1a001890 <Chip_Clock_SetDivider>
1a0015da:	2003      	movs	r0, #3
1a0015dc:	210f      	movs	r1, #15
1a0015de:	2201      	movs	r2, #1
1a0015e0:	4613      	mov	r3, r2
1a0015e2:	f000 fb29 	bl	1a001c38 <Chip_Clock_SetBaseClock>
1a0015e6:	2003      	movs	r0, #3
1a0015e8:	f000 fb62 	bl	1a001cb0 <Chip_Clock_EnableBaseClock>
1a0015ec:	206e      	movs	r0, #110	; 0x6e
1a0015ee:	2101      	movs	r1, #1
1a0015f0:	460a      	mov	r2, r1
1a0015f2:	460b      	mov	r3, r1
1a0015f4:	f000 fb9c 	bl	1a001d30 <Chip_Clock_EnableOpts>
1a0015f8:	2212      	movs	r2, #18
1a0015fa:	4b02      	ldr	r3, [pc, #8]	; (1a001604 <Chip_USB1_Init+0x44>)
1a0015fc:	f8c3 2c80 	str.w	r2, [r3, #3200]	; 0xc80
1a001600:	bd08      	pop	{r3, pc}
1a001602:	bf00      	nop
1a001604:	40086000 	.word	0x40086000

1a001608 <SystemCoreClockUpdate>:
1a001608:	b508      	push	{r3, lr}
1a00160a:	2069      	movs	r0, #105	; 0x69
1a00160c:	f000 fc02 	bl	1a001e14 <Chip_Clock_GetRate>
1a001610:	4b01      	ldr	r3, [pc, #4]	; (1a001618 <SystemCoreClockUpdate+0x10>)
1a001612:	6018      	str	r0, [r3, #0]
1a001614:	bd08      	pop	{r3, pc}
1a001616:	bf00      	nop
1a001618:	100001c0 	.word	0x100001c0

1a00161c <pll_calc_divs>:
1a00161c:	b5f0      	push	{r4, r5, r6, r7, lr}
1a00161e:	680b      	ldr	r3, [r1, #0]
1a001620:	f013 0f80 	tst.w	r3, #128	; 0x80
1a001624:	d002      	beq.n	1a00162c <pll_calc_divs+0x10>
1a001626:	f023 0340 	bic.w	r3, r3, #64	; 0x40
1a00162a:	600b      	str	r3, [r1, #0]
1a00162c:	4686      	mov	lr, r0
1a00162e:	2601      	movs	r6, #1
1a001630:	e041      	b.n	1a0016b6 <pll_calc_divs+0x9a>
1a001632:	680d      	ldr	r5, [r1, #0]
1a001634:	f015 0f40 	tst.w	r5, #64	; 0x40
1a001638:	d008      	beq.n	1a00164c <pll_calc_divs+0x30>
1a00163a:	1c7b      	adds	r3, r7, #1
1a00163c:	fa04 f203 	lsl.w	r2, r4, r3
1a001640:	694b      	ldr	r3, [r1, #20]
1a001642:	fb03 f302 	mul.w	r3, r3, r2
1a001646:	fbb3 f3f6 	udiv	r3, r3, r6
1a00164a:	e004      	b.n	1a001656 <pll_calc_divs+0x3a>
1a00164c:	694b      	ldr	r3, [r1, #20]
1a00164e:	fb04 f303 	mul.w	r3, r4, r3
1a001652:	fbb3 f3f6 	udiv	r3, r3, r6
1a001656:	4a19      	ldr	r2, [pc, #100]	; (1a0016bc <pll_calc_divs+0xa0>)
1a001658:	4293      	cmp	r3, r2
1a00165a:	d920      	bls.n	1a00169e <pll_calc_divs+0x82>
1a00165c:	4a18      	ldr	r2, [pc, #96]	; (1a0016c0 <pll_calc_divs+0xa4>)
1a00165e:	4293      	cmp	r3, r2
1a001660:	d823      	bhi.n	1a0016aa <pll_calc_divs+0x8e>
1a001662:	f015 0f80 	tst.w	r5, #128	; 0x80
1a001666:	d103      	bne.n	1a001670 <pll_calc_divs+0x54>
1a001668:	1c7a      	adds	r2, r7, #1
1a00166a:	fa23 f202 	lsr.w	r2, r3, r2
1a00166e:	e000      	b.n	1a001672 <pll_calc_divs+0x56>
1a001670:	461a      	mov	r2, r3
1a001672:	1a85      	subs	r5, r0, r2
1a001674:	d502      	bpl.n	1a00167c <pll_calc_divs+0x60>
1a001676:	f1c5 0c00 	rsb	ip, r5, #0
1a00167a:	e000      	b.n	1a00167e <pll_calc_divs+0x62>
1a00167c:	46ac      	mov	ip, r5
1a00167e:	45e6      	cmp	lr, ip
1a001680:	d90d      	bls.n	1a00169e <pll_calc_divs+0x82>
1a001682:	608e      	str	r6, [r1, #8]
1a001684:	f107 0e01 	add.w	lr, r7, #1
1a001688:	f8c1 e00c 	str.w	lr, [r1, #12]
1a00168c:	610c      	str	r4, [r1, #16]
1a00168e:	618a      	str	r2, [r1, #24]
1a001690:	61cb      	str	r3, [r1, #28]
1a001692:	2d00      	cmp	r5, #0
1a001694:	da02      	bge.n	1a00169c <pll_calc_divs+0x80>
1a001696:	f1c5 0e00 	rsb	lr, r5, #0
1a00169a:	e000      	b.n	1a00169e <pll_calc_divs+0x82>
1a00169c:	46ae      	mov	lr, r5
1a00169e:	3401      	adds	r4, #1
1a0016a0:	e000      	b.n	1a0016a4 <pll_calc_divs+0x88>
1a0016a2:	2401      	movs	r4, #1
1a0016a4:	f5b4 7f80 	cmp.w	r4, #256	; 0x100
1a0016a8:	ddc3      	ble.n	1a001632 <pll_calc_divs+0x16>
1a0016aa:	3701      	adds	r7, #1
1a0016ac:	e000      	b.n	1a0016b0 <pll_calc_divs+0x94>
1a0016ae:	2700      	movs	r7, #0
1a0016b0:	2f03      	cmp	r7, #3
1a0016b2:	ddf6      	ble.n	1a0016a2 <pll_calc_divs+0x86>
1a0016b4:	3601      	adds	r6, #1
1a0016b6:	2e04      	cmp	r6, #4
1a0016b8:	ddf9      	ble.n	1a0016ae <pll_calc_divs+0x92>
1a0016ba:	bdf0      	pop	{r4, r5, r6, r7, pc}
1a0016bc:	094c5eff 	.word	0x094c5eff
1a0016c0:	1312d000 	.word	0x1312d000

1a0016c4 <pll_get_frac>:
1a0016c4:	b5f0      	push	{r4, r5, r6, r7, lr}
1a0016c6:	b099      	sub	sp, #100	; 0x64
1a0016c8:	4605      	mov	r5, r0
1a0016ca:	460c      	mov	r4, r1
1a0016cc:	4668      	mov	r0, sp
1a0016ce:	2100      	movs	r1, #0
1a0016d0:	2260      	movs	r2, #96	; 0x60
1a0016d2:	f001 fb2c 	bl	1a002d2e <memset>
1a0016d6:	2380      	movs	r3, #128	; 0x80
1a0016d8:	9300      	str	r3, [sp, #0]
1a0016da:	6963      	ldr	r3, [r4, #20]
1a0016dc:	9305      	str	r3, [sp, #20]
1a0016de:	7923      	ldrb	r3, [r4, #4]
1a0016e0:	f88d 3004 	strb.w	r3, [sp, #4]
1a0016e4:	4628      	mov	r0, r5
1a0016e6:	4669      	mov	r1, sp
1a0016e8:	f7ff ff98 	bl	1a00161c <pll_calc_divs>
1a0016ec:	9b06      	ldr	r3, [sp, #24]
1a0016ee:	42ab      	cmp	r3, r5
1a0016f0:	d107      	bne.n	1a001702 <pll_get_frac+0x3e>
1a0016f2:	466d      	mov	r5, sp
1a0016f4:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
1a0016f6:	c40f      	stmia	r4!, {r0, r1, r2, r3}
1a0016f8:	e895 000f 	ldmia.w	r5, {r0, r1, r2, r3}
1a0016fc:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
1a001700:	e05e      	b.n	1a0017c0 <pll_get_frac+0xfc>
1a001702:	1aeb      	subs	r3, r5, r3
1a001704:	d500      	bpl.n	1a001708 <pll_get_frac+0x44>
1a001706:	425b      	negs	r3, r3
1a001708:	461e      	mov	r6, r3
1a00170a:	9b10      	ldr	r3, [sp, #64]	; 0x40
1a00170c:	f023 0340 	bic.w	r3, r3, #64	; 0x40
1a001710:	9310      	str	r3, [sp, #64]	; 0x40
1a001712:	6963      	ldr	r3, [r4, #20]
1a001714:	9315      	str	r3, [sp, #84]	; 0x54
1a001716:	7923      	ldrb	r3, [r4, #4]
1a001718:	f88d 3044 	strb.w	r3, [sp, #68]	; 0x44
1a00171c:	4628      	mov	r0, r5
1a00171e:	a910      	add	r1, sp, #64	; 0x40
1a001720:	f7ff ff7c 	bl	1a00161c <pll_calc_divs>
1a001724:	9b16      	ldr	r3, [sp, #88]	; 0x58
1a001726:	42ab      	cmp	r3, r5
1a001728:	d107      	bne.n	1a00173a <pll_get_frac+0x76>
1a00172a:	ad10      	add	r5, sp, #64	; 0x40
1a00172c:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
1a00172e:	c40f      	stmia	r4!, {r0, r1, r2, r3}
1a001730:	e895 000f 	ldmia.w	r5, {r0, r1, r2, r3}
1a001734:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
1a001738:	e042      	b.n	1a0017c0 <pll_get_frac+0xfc>
1a00173a:	1aeb      	subs	r3, r5, r3
1a00173c:	d500      	bpl.n	1a001740 <pll_get_frac+0x7c>
1a00173e:	425b      	negs	r3, r3
1a001740:	461f      	mov	r7, r3
1a001742:	4b20      	ldr	r3, [pc, #128]	; (1a0017c4 <pll_get_frac+0x100>)
1a001744:	429d      	cmp	r5, r3
1a001746:	d812      	bhi.n	1a00176e <pll_get_frac+0xaa>
1a001748:	2340      	movs	r3, #64	; 0x40
1a00174a:	9308      	str	r3, [sp, #32]
1a00174c:	6963      	ldr	r3, [r4, #20]
1a00174e:	930d      	str	r3, [sp, #52]	; 0x34
1a001750:	4628      	mov	r0, r5
1a001752:	a908      	add	r1, sp, #32
1a001754:	f7ff ff62 	bl	1a00161c <pll_calc_divs>
1a001758:	9b0e      	ldr	r3, [sp, #56]	; 0x38
1a00175a:	42ab      	cmp	r3, r5
1a00175c:	d107      	bne.n	1a00176e <pll_get_frac+0xaa>
1a00175e:	ad08      	add	r5, sp, #32
1a001760:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
1a001762:	c40f      	stmia	r4!, {r0, r1, r2, r3}
1a001764:	e895 000f 	ldmia.w	r5, {r0, r1, r2, r3}
1a001768:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
1a00176c:	e028      	b.n	1a0017c0 <pll_get_frac+0xfc>
1a00176e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
1a001770:	1aed      	subs	r5, r5, r3
1a001772:	d500      	bpl.n	1a001776 <pll_get_frac+0xb2>
1a001774:	426d      	negs	r5, r5
1a001776:	42ae      	cmp	r6, r5
1a001778:	dc11      	bgt.n	1a00179e <pll_get_frac+0xda>
1a00177a:	42be      	cmp	r6, r7
1a00177c:	dc07      	bgt.n	1a00178e <pll_get_frac+0xca>
1a00177e:	466d      	mov	r5, sp
1a001780:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
1a001782:	c40f      	stmia	r4!, {r0, r1, r2, r3}
1a001784:	e895 000f 	ldmia.w	r5, {r0, r1, r2, r3}
1a001788:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
1a00178c:	e018      	b.n	1a0017c0 <pll_get_frac+0xfc>
1a00178e:	ad10      	add	r5, sp, #64	; 0x40
1a001790:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
1a001792:	c40f      	stmia	r4!, {r0, r1, r2, r3}
1a001794:	e895 000f 	ldmia.w	r5, {r0, r1, r2, r3}
1a001798:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
1a00179c:	e010      	b.n	1a0017c0 <pll_get_frac+0xfc>
1a00179e:	42af      	cmp	r7, r5
1a0017a0:	db07      	blt.n	1a0017b2 <pll_get_frac+0xee>
1a0017a2:	ad08      	add	r5, sp, #32
1a0017a4:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
1a0017a6:	c40f      	stmia	r4!, {r0, r1, r2, r3}
1a0017a8:	e895 000f 	ldmia.w	r5, {r0, r1, r2, r3}
1a0017ac:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
1a0017b0:	e006      	b.n	1a0017c0 <pll_get_frac+0xfc>
1a0017b2:	ad10      	add	r5, sp, #64	; 0x40
1a0017b4:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
1a0017b6:	c40f      	stmia	r4!, {r0, r1, r2, r3}
1a0017b8:	e895 000f 	ldmia.w	r5, {r0, r1, r2, r3}
1a0017bc:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
1a0017c0:	b019      	add	sp, #100	; 0x64
1a0017c2:	bdf0      	pop	{r4, r5, r6, r7, pc}
1a0017c4:	068e7780 	.word	0x068e7780

1a0017c8 <Chip_Clock_TestMainPLLMultiplier>:
1a0017c8:	fb00 f001 	mul.w	r0, r0, r1
1a0017cc:	4290      	cmp	r0, r2
1a0017ce:	d305      	bcc.n	1a0017dc <Chip_Clock_TestMainPLLMultiplier+0x14>
1a0017d0:	4a05      	ldr	r2, [pc, #20]	; (1a0017e8 <Chip_Clock_TestMainPLLMultiplier+0x20>)
1a0017d2:	4290      	cmp	r0, r2
1a0017d4:	d804      	bhi.n	1a0017e0 <Chip_Clock_TestMainPLLMultiplier+0x18>
1a0017d6:	4298      	cmp	r0, r3
1a0017d8:	d804      	bhi.n	1a0017e4 <Chip_Clock_TestMainPLLMultiplier+0x1c>
1a0017da:	4770      	bx	lr
1a0017dc:	2000      	movs	r0, #0
1a0017de:	4770      	bx	lr
1a0017e0:	2000      	movs	r0, #0
1a0017e2:	4770      	bx	lr
1a0017e4:	2000      	movs	r0, #0
1a0017e6:	4770      	bx	lr
1a0017e8:	0c28cb00 	.word	0x0c28cb00

1a0017ec <Chip_Clock_FindBaseClock>:
1a0017ec:	b430      	push	{r4, r5}
1a0017ee:	2300      	movs	r3, #0
1a0017f0:	211c      	movs	r1, #28
1a0017f2:	e010      	b.n	1a001816 <Chip_Clock_FindBaseClock+0x2a>
1a0017f4:	eb03 0243 	add.w	r2, r3, r3, lsl #1
1a0017f8:	0052      	lsls	r2, r2, #1
1a0017fa:	4d0d      	ldr	r5, [pc, #52]	; (1a001830 <Chip_Clock_FindBaseClock+0x44>)
1a0017fc:	5aaa      	ldrh	r2, [r5, r2]
1a0017fe:	4282      	cmp	r2, r0
1a001800:	d806      	bhi.n	1a001810 <Chip_Clock_FindBaseClock+0x24>
1a001802:	eb03 0243 	add.w	r2, r3, r3, lsl #1
1a001806:	0052      	lsls	r2, r2, #1
1a001808:	442a      	add	r2, r5
1a00180a:	8852      	ldrh	r2, [r2, #2]
1a00180c:	4282      	cmp	r2, r0
1a00180e:	d201      	bcs.n	1a001814 <Chip_Clock_FindBaseClock+0x28>
1a001810:	3301      	adds	r3, #1
1a001812:	e000      	b.n	1a001816 <Chip_Clock_FindBaseClock+0x2a>
1a001814:	4621      	mov	r1, r4
1a001816:	291c      	cmp	r1, #28
1a001818:	d107      	bne.n	1a00182a <Chip_Clock_FindBaseClock+0x3e>
1a00181a:	eb03 0243 	add.w	r2, r3, r3, lsl #1
1a00181e:	0052      	lsls	r2, r2, #1
1a001820:	4c03      	ldr	r4, [pc, #12]	; (1a001830 <Chip_Clock_FindBaseClock+0x44>)
1a001822:	4422      	add	r2, r4
1a001824:	7914      	ldrb	r4, [r2, #4]
1a001826:	428c      	cmp	r4, r1
1a001828:	d1e4      	bne.n	1a0017f4 <Chip_Clock_FindBaseClock+0x8>
1a00182a:	4608      	mov	r0, r1
1a00182c:	bc30      	pop	{r4, r5}
1a00182e:	4770      	bx	lr
1a001830:	1a003010 	.word	0x1a003010

1a001834 <Chip_Clock_EnableCrystal>:
1a001834:	b082      	sub	sp, #8
1a001836:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
1a00183a:	9301      	str	r3, [sp, #4]
1a00183c:	4a0d      	ldr	r2, [pc, #52]	; (1a001874 <Chip_Clock_EnableCrystal+0x40>)
1a00183e:	6993      	ldr	r3, [r2, #24]
1a001840:	f023 0102 	bic.w	r1, r3, #2
1a001844:	6992      	ldr	r2, [r2, #24]
1a001846:	428a      	cmp	r2, r1
1a001848:	d001      	beq.n	1a00184e <Chip_Clock_EnableCrystal+0x1a>
1a00184a:	4a0a      	ldr	r2, [pc, #40]	; (1a001874 <Chip_Clock_EnableCrystal+0x40>)
1a00184c:	6191      	str	r1, [r2, #24]
1a00184e:	f023 0303 	bic.w	r3, r3, #3
1a001852:	4a09      	ldr	r2, [pc, #36]	; (1a001878 <Chip_Clock_EnableCrystal+0x44>)
1a001854:	6811      	ldr	r1, [r2, #0]
1a001856:	4a09      	ldr	r2, [pc, #36]	; (1a00187c <Chip_Clock_EnableCrystal+0x48>)
1a001858:	4291      	cmp	r1, r2
1a00185a:	d901      	bls.n	1a001860 <Chip_Clock_EnableCrystal+0x2c>
1a00185c:	f043 0304 	orr.w	r3, r3, #4
1a001860:	4a04      	ldr	r2, [pc, #16]	; (1a001874 <Chip_Clock_EnableCrystal+0x40>)
1a001862:	6193      	str	r3, [r2, #24]
1a001864:	9b01      	ldr	r3, [sp, #4]
1a001866:	1e5a      	subs	r2, r3, #1
1a001868:	9201      	str	r2, [sp, #4]
1a00186a:	2b00      	cmp	r3, #0
1a00186c:	d1fa      	bne.n	1a001864 <Chip_Clock_EnableCrystal+0x30>
1a00186e:	b002      	add	sp, #8
1a001870:	4770      	bx	lr
1a001872:	bf00      	nop
1a001874:	40050000 	.word	0x40050000
1a001878:	1a002f88 	.word	0x1a002f88
1a00187c:	01312cff 	.word	0x01312cff

1a001880 <Chip_Clock_DisableCrystal>:
1a001880:	4a02      	ldr	r2, [pc, #8]	; (1a00188c <Chip_Clock_DisableCrystal+0xc>)
1a001882:	6993      	ldr	r3, [r2, #24]
1a001884:	f043 0301 	orr.w	r3, r3, #1
1a001888:	6193      	str	r3, [r2, #24]
1a00188a:	4770      	bx	lr
1a00188c:	40050000 	.word	0x40050000

1a001890 <Chip_Clock_SetDivider>:
1a001890:	b410      	push	{r4}
1a001892:	f100 0412 	add.w	r4, r0, #18
1a001896:	4b11      	ldr	r3, [pc, #68]	; (1a0018dc <Chip_Clock_SetDivider+0x4c>)
1a001898:	f853 3024 	ldr.w	r3, [r3, r4, lsl #2]
1a00189c:	3a01      	subs	r2, #1
1a00189e:	2911      	cmp	r1, #17
1a0018a0:	d013      	beq.n	1a0018ca <Chip_Clock_SetDivider+0x3a>
1a0018a2:	4c0f      	ldr	r4, [pc, #60]	; (1a0018e0 <Chip_Clock_SetDivider+0x50>)
1a0018a4:	5c24      	ldrb	r4, [r4, r0]
1a0018a6:	00a4      	lsls	r4, r4, #2
1a0018a8:	f044 54f8 	orr.w	r4, r4, #520093696	; 0x1f000000
1a0018ac:	f044 0401 	orr.w	r4, r4, #1
1a0018b0:	ea23 0304 	bic.w	r3, r3, r4
1a0018b4:	ea43 6101 	orr.w	r1, r3, r1, lsl #24
1a0018b8:	ea41 0282 	orr.w	r2, r1, r2, lsl #2
1a0018bc:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
1a0018c0:	3012      	adds	r0, #18
1a0018c2:	4b06      	ldr	r3, [pc, #24]	; (1a0018dc <Chip_Clock_SetDivider+0x4c>)
1a0018c4:	f843 2020 	str.w	r2, [r3, r0, lsl #2]
1a0018c8:	e005      	b.n	1a0018d6 <Chip_Clock_SetDivider+0x46>
1a0018ca:	f043 0301 	orr.w	r3, r3, #1
1a0018ce:	3012      	adds	r0, #18
1a0018d0:	4a02      	ldr	r2, [pc, #8]	; (1a0018dc <Chip_Clock_SetDivider+0x4c>)
1a0018d2:	f842 3020 	str.w	r3, [r2, r0, lsl #2]
1a0018d6:	f85d 4b04 	ldr.w	r4, [sp], #4
1a0018da:	4770      	bx	lr
1a0018dc:	40050000 	.word	0x40050000
1a0018e0:	1a003080 	.word	0x1a003080

1a0018e4 <Chip_Clock_GetDividerSource>:
1a0018e4:	3012      	adds	r0, #18
1a0018e6:	4b05      	ldr	r3, [pc, #20]	; (1a0018fc <Chip_Clock_GetDividerSource+0x18>)
1a0018e8:	f853 0020 	ldr.w	r0, [r3, r0, lsl #2]
1a0018ec:	f010 0f01 	tst.w	r0, #1
1a0018f0:	d102      	bne.n	1a0018f8 <Chip_Clock_GetDividerSource+0x14>
1a0018f2:	f3c0 6004 	ubfx	r0, r0, #24, #5
1a0018f6:	4770      	bx	lr
1a0018f8:	2011      	movs	r0, #17
1a0018fa:	4770      	bx	lr
1a0018fc:	40050000 	.word	0x40050000

1a001900 <Chip_Clock_GetDividerDivisor>:
1a001900:	f100 0212 	add.w	r2, r0, #18
1a001904:	4b03      	ldr	r3, [pc, #12]	; (1a001914 <Chip_Clock_GetDividerDivisor+0x14>)
1a001906:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
1a00190a:	4b03      	ldr	r3, [pc, #12]	; (1a001918 <Chip_Clock_GetDividerDivisor+0x18>)
1a00190c:	5c18      	ldrb	r0, [r3, r0]
1a00190e:	ea00 0092 	and.w	r0, r0, r2, lsr #2
1a001912:	4770      	bx	lr
1a001914:	40050000 	.word	0x40050000
1a001918:	1a003080 	.word	0x1a003080

1a00191c <Chip_Clock_GetClockInputHz>:
1a00191c:	b508      	push	{r3, lr}
1a00191e:	2810      	cmp	r0, #16
1a001920:	d80a      	bhi.n	1a001938 <Chip_Clock_GetClockInputHz+0x1c>
1a001922:	e8df f000 	tbb	[pc, r0]
1a001926:	0b42      	.short	0x0b42
1a001928:	091f160d 	.word	0x091f160d
1a00192c:	2b282522 	.word	0x2b282522
1a001930:	322e0909 	.word	0x322e0909
1a001934:	3a36      	.short	0x3a36
1a001936:	3e          	.byte	0x3e
1a001937:	00          	.byte	0x00
1a001938:	2000      	movs	r0, #0
1a00193a:	bd08      	pop	{r3, pc}
1a00193c:	481e      	ldr	r0, [pc, #120]	; (1a0019b8 <Chip_Clock_GetClockInputHz+0x9c>)
1a00193e:	bd08      	pop	{r3, pc}
1a001940:	4b1e      	ldr	r3, [pc, #120]	; (1a0019bc <Chip_Clock_GetClockInputHz+0xa0>)
1a001942:	f8d3 312c 	ldr.w	r3, [r3, #300]	; 0x12c
1a001946:	f003 0307 	and.w	r3, r3, #7
1a00194a:	2b04      	cmp	r3, #4
1a00194c:	d130      	bne.n	1a0019b0 <Chip_Clock_GetClockInputHz+0x94>
1a00194e:	2000      	movs	r0, #0
1a001950:	bd08      	pop	{r3, pc}
1a001952:	4b1a      	ldr	r3, [pc, #104]	; (1a0019bc <Chip_Clock_GetClockInputHz+0xa0>)
1a001954:	f8d3 312c 	ldr.w	r3, [r3, #300]	; 0x12c
1a001958:	f003 0307 	and.w	r3, r3, #7
1a00195c:	2b04      	cmp	r3, #4
1a00195e:	d029      	beq.n	1a0019b4 <Chip_Clock_GetClockInputHz+0x98>
1a001960:	4817      	ldr	r0, [pc, #92]	; (1a0019c0 <Chip_Clock_GetClockInputHz+0xa4>)
1a001962:	bd08      	pop	{r3, pc}
1a001964:	4b17      	ldr	r3, [pc, #92]	; (1a0019c4 <Chip_Clock_GetClockInputHz+0xa8>)
1a001966:	6818      	ldr	r0, [r3, #0]
1a001968:	bd08      	pop	{r3, pc}
1a00196a:	4b17      	ldr	r3, [pc, #92]	; (1a0019c8 <Chip_Clock_GetClockInputHz+0xac>)
1a00196c:	6818      	ldr	r0, [r3, #0]
1a00196e:	bd08      	pop	{r3, pc}
1a001970:	4b16      	ldr	r3, [pc, #88]	; (1a0019cc <Chip_Clock_GetClockInputHz+0xb0>)
1a001972:	6818      	ldr	r0, [r3, #0]
1a001974:	bd08      	pop	{r3, pc}
1a001976:	4b15      	ldr	r3, [pc, #84]	; (1a0019cc <Chip_Clock_GetClockInputHz+0xb0>)
1a001978:	6858      	ldr	r0, [r3, #4]
1a00197a:	bd08      	pop	{r3, pc}
1a00197c:	f000 f916 	bl	1a001bac <Chip_Clock_GetMainPLLHz>
1a001980:	bd08      	pop	{r3, pc}
1a001982:	2100      	movs	r1, #0
1a001984:	f000 f946 	bl	1a001c14 <Chip_Clock_GetDivRate>
1a001988:	bd08      	pop	{r3, pc}
1a00198a:	2101      	movs	r1, #1
1a00198c:	f000 f942 	bl	1a001c14 <Chip_Clock_GetDivRate>
1a001990:	bd08      	pop	{r3, pc}
1a001992:	2102      	movs	r1, #2
1a001994:	f000 f93e 	bl	1a001c14 <Chip_Clock_GetDivRate>
1a001998:	bd08      	pop	{r3, pc}
1a00199a:	2103      	movs	r1, #3
1a00199c:	f000 f93a 	bl	1a001c14 <Chip_Clock_GetDivRate>
1a0019a0:	bd08      	pop	{r3, pc}
1a0019a2:	2104      	movs	r1, #4
1a0019a4:	f000 f936 	bl	1a001c14 <Chip_Clock_GetDivRate>
1a0019a8:	bd08      	pop	{r3, pc}
1a0019aa:	f44f 4000 	mov.w	r0, #32768	; 0x8000
1a0019ae:	bd08      	pop	{r3, pc}
1a0019b0:	4803      	ldr	r0, [pc, #12]	; (1a0019c0 <Chip_Clock_GetClockInputHz+0xa4>)
1a0019b2:	bd08      	pop	{r3, pc}
1a0019b4:	4806      	ldr	r0, [pc, #24]	; (1a0019d0 <Chip_Clock_GetClockInputHz+0xb4>)
1a0019b6:	bd08      	pop	{r3, pc}
1a0019b8:	00b71b00 	.word	0x00b71b00
1a0019bc:	40043000 	.word	0x40043000
1a0019c0:	017d7840 	.word	0x017d7840
1a0019c4:	1a002f8c 	.word	0x1a002f8c
1a0019c8:	1a002f88 	.word	0x1a002f88
1a0019cc:	1000015c 	.word	0x1000015c
1a0019d0:	02faf080 	.word	0x02faf080

1a0019d4 <Chip_Clock_CalcMainPLLValue>:
1a0019d4:	b538      	push	{r3, r4, r5, lr}
1a0019d6:	4605      	mov	r5, r0
1a0019d8:	460c      	mov	r4, r1
1a0019da:	7908      	ldrb	r0, [r1, #4]
1a0019dc:	f7ff ff9e 	bl	1a00191c <Chip_Clock_GetClockInputHz>
1a0019e0:	6160      	str	r0, [r4, #20]
1a0019e2:	4b19      	ldr	r3, [pc, #100]	; (1a001a48 <Chip_Clock_CalcMainPLLValue+0x74>)
1a0019e4:	442b      	add	r3, r5
1a0019e6:	4a19      	ldr	r2, [pc, #100]	; (1a001a4c <Chip_Clock_CalcMainPLLValue+0x78>)
1a0019e8:	4293      	cmp	r3, r2
1a0019ea:	d821      	bhi.n	1a001a30 <Chip_Clock_CalcMainPLLValue+0x5c>
1a0019ec:	b318      	cbz	r0, 1a001a36 <Chip_Clock_CalcMainPLLValue+0x62>
1a0019ee:	2380      	movs	r3, #128	; 0x80
1a0019f0:	6023      	str	r3, [r4, #0]
1a0019f2:	2300      	movs	r3, #0
1a0019f4:	60a3      	str	r3, [r4, #8]
1a0019f6:	60e3      	str	r3, [r4, #12]
1a0019f8:	fbb5 f3f0 	udiv	r3, r5, r0
1a0019fc:	6123      	str	r3, [r4, #16]
1a0019fe:	4a14      	ldr	r2, [pc, #80]	; (1a001a50 <Chip_Clock_CalcMainPLLValue+0x7c>)
1a001a00:	4295      	cmp	r5, r2
1a001a02:	d903      	bls.n	1a001a0c <Chip_Clock_CalcMainPLLValue+0x38>
1a001a04:	fb03 f000 	mul.w	r0, r3, r0
1a001a08:	42a8      	cmp	r0, r5
1a001a0a:	d007      	beq.n	1a001a1c <Chip_Clock_CalcMainPLLValue+0x48>
1a001a0c:	4628      	mov	r0, r5
1a001a0e:	4621      	mov	r1, r4
1a001a10:	f7ff fe58 	bl	1a0016c4 <pll_get_frac>
1a001a14:	68a3      	ldr	r3, [r4, #8]
1a001a16:	b18b      	cbz	r3, 1a001a3c <Chip_Clock_CalcMainPLLValue+0x68>
1a001a18:	3b01      	subs	r3, #1
1a001a1a:	60a3      	str	r3, [r4, #8]
1a001a1c:	6923      	ldr	r3, [r4, #16]
1a001a1e:	b183      	cbz	r3, 1a001a42 <Chip_Clock_CalcMainPLLValue+0x6e>
1a001a20:	68e2      	ldr	r2, [r4, #12]
1a001a22:	b10a      	cbz	r2, 1a001a28 <Chip_Clock_CalcMainPLLValue+0x54>
1a001a24:	3a01      	subs	r2, #1
1a001a26:	60e2      	str	r2, [r4, #12]
1a001a28:	3b01      	subs	r3, #1
1a001a2a:	6123      	str	r3, [r4, #16]
1a001a2c:	2000      	movs	r0, #0
1a001a2e:	bd38      	pop	{r3, r4, r5, pc}
1a001a30:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
1a001a34:	bd38      	pop	{r3, r4, r5, pc}
1a001a36:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
1a001a3a:	bd38      	pop	{r3, r4, r5, pc}
1a001a3c:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
1a001a40:	bd38      	pop	{r3, r4, r5, pc}
1a001a42:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
1a001a46:	bd38      	pop	{r3, r4, r5, pc}
1a001a48:	ff6b3a10 	.word	0xff6b3a10
1a001a4c:	0b940510 	.word	0x0b940510
1a001a50:	094c5eff 	.word	0x094c5eff

1a001a54 <Chip_Clock_SetupMainPLLMult>:
1a001a54:	b570      	push	{r4, r5, r6, lr}
1a001a56:	b082      	sub	sp, #8
1a001a58:	4605      	mov	r5, r0
1a001a5a:	460c      	mov	r4, r1
1a001a5c:	23fa      	movs	r3, #250	; 0xfa
1a001a5e:	9301      	str	r3, [sp, #4]
1a001a60:	f7ff ff5c 	bl	1a00191c <Chip_Clock_GetClockInputHz>
1a001a64:	4b1e      	ldr	r3, [pc, #120]	; (1a001ae0 <Chip_Clock_SetupMainPLLMult+0x8c>)
1a001a66:	6c5a      	ldr	r2, [r3, #68]	; 0x44
1a001a68:	fb04 f000 	mul.w	r0, r4, r0
1a001a6c:	1e61      	subs	r1, r4, #1
1a001a6e:	f022 52f8 	bic.w	r2, r2, #520093696	; 0x1f000000
1a001a72:	ea42 6205 	orr.w	r2, r2, r5, lsl #24
1a001a76:	4b1b      	ldr	r3, [pc, #108]	; (1a001ae4 <Chip_Clock_SetupMainPLLMult+0x90>)
1a001a78:	4013      	ands	r3, r2
1a001a7a:	f443 6600 	orr.w	r6, r3, #2048	; 0x800
1a001a7e:	4b1a      	ldr	r3, [pc, #104]	; (1a001ae8 <Chip_Clock_SetupMainPLLMult+0x94>)
1a001a80:	4298      	cmp	r0, r3
1a001a82:	d903      	bls.n	1a001a8c <Chip_Clock_SetupMainPLLMult+0x38>
1a001a84:	e012      	b.n	1a001aac <Chip_Clock_SetupMainPLLMult+0x58>
1a001a86:	3401      	adds	r4, #1
1a001a88:	0052      	lsls	r2, r2, #1
1a001a8a:	e001      	b.n	1a001a90 <Chip_Clock_SetupMainPLLMult+0x3c>
1a001a8c:	2201      	movs	r2, #1
1a001a8e:	2400      	movs	r4, #0
1a001a90:	fb00 f302 	mul.w	r3, r0, r2
1a001a94:	4d14      	ldr	r5, [pc, #80]	; (1a001ae8 <Chip_Clock_SetupMainPLLMult+0x94>)
1a001a96:	ebb5 0f43 	cmp.w	r5, r3, lsl #1
1a001a9a:	d2f4      	bcs.n	1a001a86 <Chip_Clock_SetupMainPLLMult+0x32>
1a001a9c:	0224      	lsls	r4, r4, #8
1a001a9e:	ea44 4401 	orr.w	r4, r4, r1, lsl #16
1a001aa2:	ea44 0306 	orr.w	r3, r4, r6
1a001aa6:	f043 0340 	orr.w	r3, r3, #64	; 0x40
1a001aaa:	e00e      	b.n	1a001aca <Chip_Clock_SetupMainPLLMult+0x76>
1a001aac:	4b0f      	ldr	r3, [pc, #60]	; (1a001aec <Chip_Clock_SetupMainPLLMult+0x98>)
1a001aae:	4298      	cmp	r0, r3
1a001ab0:	d804      	bhi.n	1a001abc <Chip_Clock_SetupMainPLLMult+0x68>
1a001ab2:	ea46 4301 	orr.w	r3, r6, r1, lsl #16
1a001ab6:	f043 03c0 	orr.w	r3, r3, #192	; 0xc0
1a001aba:	e006      	b.n	1a001aca <Chip_Clock_SetupMainPLLMult+0x76>
1a001abc:	4a08      	ldr	r2, [pc, #32]	; (1a001ae0 <Chip_Clock_SetupMainPLLMult+0x8c>)
1a001abe:	6c53      	ldr	r3, [r2, #68]	; 0x44
1a001ac0:	f043 0301 	orr.w	r3, r3, #1
1a001ac4:	6453      	str	r3, [r2, #68]	; 0x44
1a001ac6:	2000      	movs	r0, #0
1a001ac8:	e008      	b.n	1a001adc <Chip_Clock_SetupMainPLLMult+0x88>
1a001aca:	f023 0301 	bic.w	r3, r3, #1
1a001ace:	4a04      	ldr	r2, [pc, #16]	; (1a001ae0 <Chip_Clock_SetupMainPLLMult+0x8c>)
1a001ad0:	6453      	str	r3, [r2, #68]	; 0x44
1a001ad2:	9b01      	ldr	r3, [sp, #4]
1a001ad4:	1e5a      	subs	r2, r3, #1
1a001ad6:	9201      	str	r2, [sp, #4]
1a001ad8:	2b00      	cmp	r3, #0
1a001ada:	d1fa      	bne.n	1a001ad2 <Chip_Clock_SetupMainPLLMult+0x7e>
1a001adc:	b002      	add	sp, #8
1a001ade:	bd70      	pop	{r4, r5, r6, pc}
1a001ae0:	40050000 	.word	0x40050000
1a001ae4:	ff00cc3d 	.word	0xff00cc3d
1a001ae8:	094c5eff 	.word	0x094c5eff
1a001aec:	1312cfff 	.word	0x1312cfff

1a001af0 <Chip_Clock_SetupMainPLLHz>:
1a001af0:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
1a001af4:	4682      	mov	sl, r0
1a001af6:	460f      	mov	r7, r1
1a001af8:	4690      	mov	r8, r2
1a001afa:	461e      	mov	r6, r3
1a001afc:	f7ff ff0e 	bl	1a00191c <Chip_Clock_GetClockInputHz>
1a001b00:	4605      	mov	r5, r0
1a001b02:	f1b8 3fff 	cmp.w	r8, #4294967295	; 0xffffffff
1a001b06:	d033      	beq.n	1a001b70 <Chip_Clock_SetupMainPLLHz+0x80>
1a001b08:	fbb8 f9f0 	udiv	r9, r8, r0
1a001b0c:	4649      	mov	r1, r9
1a001b0e:	463a      	mov	r2, r7
1a001b10:	4633      	mov	r3, r6
1a001b12:	f7ff fe59 	bl	1a0017c8 <Chip_Clock_TestMainPLLMultiplier>
1a001b16:	4604      	mov	r4, r0
1a001b18:	f109 0b01 	add.w	fp, r9, #1
1a001b1c:	4628      	mov	r0, r5
1a001b1e:	4659      	mov	r1, fp
1a001b20:	463a      	mov	r2, r7
1a001b22:	4633      	mov	r3, r6
1a001b24:	f7ff fe50 	bl	1a0017c8 <Chip_Clock_TestMainPLLMultiplier>
1a001b28:	b134      	cbz	r4, 1a001b38 <Chip_Clock_SetupMainPLLHz+0x48>
1a001b2a:	b928      	cbnz	r0, 1a001b38 <Chip_Clock_SetupMainPLLHz+0x48>
1a001b2c:	4650      	mov	r0, sl
1a001b2e:	4649      	mov	r1, r9
1a001b30:	f7ff ff90 	bl	1a001a54 <Chip_Clock_SetupMainPLLMult>
1a001b34:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
1a001b38:	b934      	cbnz	r4, 1a001b48 <Chip_Clock_SetupMainPLLHz+0x58>
1a001b3a:	b128      	cbz	r0, 1a001b48 <Chip_Clock_SetupMainPLLHz+0x58>
1a001b3c:	4650      	mov	r0, sl
1a001b3e:	4659      	mov	r1, fp
1a001b40:	f7ff ff88 	bl	1a001a54 <Chip_Clock_SetupMainPLLMult>
1a001b44:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
1a001b48:	b194      	cbz	r4, 1a001b70 <Chip_Clock_SetupMainPLLHz+0x80>
1a001b4a:	b188      	cbz	r0, 1a001b70 <Chip_Clock_SetupMainPLLHz+0x80>
1a001b4c:	ebc4 0408 	rsb	r4, r4, r8
1a001b50:	ebc8 0000 	rsb	r0, r8, r0
1a001b54:	4284      	cmp	r4, r0
1a001b56:	d905      	bls.n	1a001b64 <Chip_Clock_SetupMainPLLHz+0x74>
1a001b58:	4650      	mov	r0, sl
1a001b5a:	4649      	mov	r1, r9
1a001b5c:	f7ff ff7a 	bl	1a001a54 <Chip_Clock_SetupMainPLLMult>
1a001b60:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
1a001b64:	4650      	mov	r0, sl
1a001b66:	4659      	mov	r1, fp
1a001b68:	f7ff ff74 	bl	1a001a54 <Chip_Clock_SetupMainPLLMult>
1a001b6c:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
1a001b70:	fbb7 f4f5 	udiv	r4, r7, r5
1a001b74:	fbb6 f8f5 	udiv	r8, r6, r5
1a001b78:	f04f 0900 	mov.w	r9, #0
1a001b7c:	4628      	mov	r0, r5
1a001b7e:	4621      	mov	r1, r4
1a001b80:	463a      	mov	r2, r7
1a001b82:	4633      	mov	r3, r6
1a001b84:	f7ff fe20 	bl	1a0017c8 <Chip_Clock_TestMainPLLMultiplier>
1a001b88:	b100      	cbz	r0, 1a001b8c <Chip_Clock_SetupMainPLLHz+0x9c>
1a001b8a:	46a1      	mov	r9, r4
1a001b8c:	4544      	cmp	r4, r8
1a001b8e:	d201      	bcs.n	1a001b94 <Chip_Clock_SetupMainPLLHz+0xa4>
1a001b90:	3401      	adds	r4, #1
1a001b92:	e7f3      	b.n	1a001b7c <Chip_Clock_SetupMainPLLHz+0x8c>
1a001b94:	f1b9 0f00 	cmp.w	r9, #0
1a001b98:	d005      	beq.n	1a001ba6 <Chip_Clock_SetupMainPLLHz+0xb6>
1a001b9a:	4650      	mov	r0, sl
1a001b9c:	4649      	mov	r1, r9
1a001b9e:	f7ff ff59 	bl	1a001a54 <Chip_Clock_SetupMainPLLMult>
1a001ba2:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
1a001ba6:	2000      	movs	r0, #0
1a001ba8:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}

1a001bac <Chip_Clock_GetMainPLLHz>:
1a001bac:	b570      	push	{r4, r5, r6, lr}
1a001bae:	b082      	sub	sp, #8
1a001bb0:	4d16      	ldr	r5, [pc, #88]	; (1a001c0c <Chip_Clock_GetMainPLLHz+0x60>)
1a001bb2:	6c6c      	ldr	r4, [r5, #68]	; 0x44
1a001bb4:	f3c4 6003 	ubfx	r0, r4, #24, #4
1a001bb8:	f7ff feb0 	bl	1a00191c <Chip_Clock_GetClockInputHz>
1a001bbc:	4606      	mov	r6, r0
1a001bbe:	4b14      	ldr	r3, [pc, #80]	; (1a001c10 <Chip_Clock_GetMainPLLHz+0x64>)
1a001bc0:	6818      	ldr	r0, [r3, #0]
1a001bc2:	9001      	str	r0, [sp, #4]
1a001bc4:	6c28      	ldr	r0, [r5, #64]	; 0x40
1a001bc6:	f010 0001 	ands.w	r0, r0, #1
1a001bca:	d01d      	beq.n	1a001c08 <Chip_Clock_GetMainPLLHz+0x5c>
1a001bcc:	f3c4 4007 	ubfx	r0, r4, #16, #8
1a001bd0:	f3c4 3201 	ubfx	r2, r4, #12, #2
1a001bd4:	f3c4 2101 	ubfx	r1, r4, #8, #2
1a001bd8:	f3c4 1580 	ubfx	r5, r4, #6, #1
1a001bdc:	1c43      	adds	r3, r0, #1
1a001bde:	3201      	adds	r2, #1
1a001be0:	a802      	add	r0, sp, #8
1a001be2:	4401      	add	r1, r0
1a001be4:	f811 0c04 	ldrb.w	r0, [r1, #-4]
1a001be8:	f014 0f80 	tst.w	r4, #128	; 0x80
1a001bec:	d100      	bne.n	1a001bf0 <Chip_Clock_GetMainPLLHz+0x44>
1a001bee:	b125      	cbz	r5, 1a001bfa <Chip_Clock_GetMainPLLHz+0x4e>
1a001bf0:	fbb6 f0f2 	udiv	r0, r6, r2
1a001bf4:	fb03 f000 	mul.w	r0, r3, r0
1a001bf8:	e006      	b.n	1a001c08 <Chip_Clock_GetMainPLLHz+0x5c>
1a001bfa:	0040      	lsls	r0, r0, #1
1a001bfc:	fbb3 f3f0 	udiv	r3, r3, r0
1a001c00:	fbb6 f0f2 	udiv	r0, r6, r2
1a001c04:	fb00 f003 	mul.w	r0, r0, r3
1a001c08:	b002      	add	sp, #8
1a001c0a:	bd70      	pop	{r4, r5, r6, pc}
1a001c0c:	40050000 	.word	0x40050000
1a001c10:	1a00307c 	.word	0x1a00307c

1a001c14 <Chip_Clock_GetDivRate>:
1a001c14:	b538      	push	{r3, r4, r5, lr}
1a001c16:	460c      	mov	r4, r1
1a001c18:	4608      	mov	r0, r1
1a001c1a:	f7ff fe63 	bl	1a0018e4 <Chip_Clock_GetDividerSource>
1a001c1e:	4605      	mov	r5, r0
1a001c20:	4620      	mov	r0, r4
1a001c22:	f7ff fe6d 	bl	1a001900 <Chip_Clock_GetDividerDivisor>
1a001c26:	4604      	mov	r4, r0
1a001c28:	4628      	mov	r0, r5
1a001c2a:	f7ff fe77 	bl	1a00191c <Chip_Clock_GetClockInputHz>
1a001c2e:	3401      	adds	r4, #1
1a001c30:	fbb0 f0f4 	udiv	r0, r0, r4
1a001c34:	bd38      	pop	{r3, r4, r5, pc}
1a001c36:	bf00      	nop

1a001c38 <Chip_Clock_SetBaseClock>:
1a001c38:	b430      	push	{r4, r5}
1a001c3a:	0085      	lsls	r5, r0, #2
1a001c3c:	4c0d      	ldr	r4, [pc, #52]	; (1a001c74 <Chip_Clock_SetBaseClock+0x3c>)
1a001c3e:	5965      	ldr	r5, [r4, r5]
1a001c40:	281b      	cmp	r0, #27
1a001c42:	d80f      	bhi.n	1a001c64 <Chip_Clock_SetBaseClock+0x2c>
1a001c44:	2911      	cmp	r1, #17
1a001c46:	d012      	beq.n	1a001c6e <Chip_Clock_SetBaseClock+0x36>
1a001c48:	4c0b      	ldr	r4, [pc, #44]	; (1a001c78 <Chip_Clock_SetBaseClock+0x40>)
1a001c4a:	402c      	ands	r4, r5
1a001c4c:	b10a      	cbz	r2, 1a001c52 <Chip_Clock_SetBaseClock+0x1a>
1a001c4e:	f444 6400 	orr.w	r4, r4, #2048	; 0x800
1a001c52:	b10b      	cbz	r3, 1a001c58 <Chip_Clock_SetBaseClock+0x20>
1a001c54:	f044 0401 	orr.w	r4, r4, #1
1a001c58:	ea44 6401 	orr.w	r4, r4, r1, lsl #24
1a001c5c:	0080      	lsls	r0, r0, #2
1a001c5e:	4b05      	ldr	r3, [pc, #20]	; (1a001c74 <Chip_Clock_SetBaseClock+0x3c>)
1a001c60:	501c      	str	r4, [r3, r0]
1a001c62:	e004      	b.n	1a001c6e <Chip_Clock_SetBaseClock+0x36>
1a001c64:	f045 0501 	orr.w	r5, r5, #1
1a001c68:	0080      	lsls	r0, r0, #2
1a001c6a:	4b02      	ldr	r3, [pc, #8]	; (1a001c74 <Chip_Clock_SetBaseClock+0x3c>)
1a001c6c:	501d      	str	r5, [r3, r0]
1a001c6e:	bc30      	pop	{r4, r5}
1a001c70:	4770      	bx	lr
1a001c72:	bf00      	nop
1a001c74:	4005005c 	.word	0x4005005c
1a001c78:	e0fff7fe 	.word	0xe0fff7fe

1a001c7c <Chip_Clock_GetBaseClockOpts>:
1a001c7c:	b430      	push	{r4, r5}
1a001c7e:	0085      	lsls	r5, r0, #2
1a001c80:	4c0a      	ldr	r4, [pc, #40]	; (1a001cac <Chip_Clock_GetBaseClockOpts+0x30>)
1a001c82:	5964      	ldr	r4, [r4, r5]
1a001c84:	f3c4 6504 	ubfx	r5, r4, #24, #5
1a001c88:	281b      	cmp	r0, #27
1a001c8a:	d807      	bhi.n	1a001c9c <Chip_Clock_GetBaseClockOpts+0x20>
1a001c8c:	700d      	strb	r5, [r1, #0]
1a001c8e:	f3c4 21c0 	ubfx	r1, r4, #11, #1
1a001c92:	7011      	strb	r1, [r2, #0]
1a001c94:	f004 0401 	and.w	r4, r4, #1
1a001c98:	701c      	strb	r4, [r3, #0]
1a001c9a:	e004      	b.n	1a001ca6 <Chip_Clock_GetBaseClockOpts+0x2a>
1a001c9c:	2011      	movs	r0, #17
1a001c9e:	7008      	strb	r0, [r1, #0]
1a001ca0:	2101      	movs	r1, #1
1a001ca2:	7019      	strb	r1, [r3, #0]
1a001ca4:	7011      	strb	r1, [r2, #0]
1a001ca6:	bc30      	pop	{r4, r5}
1a001ca8:	4770      	bx	lr
1a001caa:	bf00      	nop
1a001cac:	4005005c 	.word	0x4005005c

1a001cb0 <Chip_Clock_EnableBaseClock>:
1a001cb0:	281b      	cmp	r0, #27
1a001cb2:	d805      	bhi.n	1a001cc0 <Chip_Clock_EnableBaseClock+0x10>
1a001cb4:	0080      	lsls	r0, r0, #2
1a001cb6:	4b03      	ldr	r3, [pc, #12]	; (1a001cc4 <Chip_Clock_EnableBaseClock+0x14>)
1a001cb8:	581a      	ldr	r2, [r3, r0]
1a001cba:	f022 0201 	bic.w	r2, r2, #1
1a001cbe:	501a      	str	r2, [r3, r0]
1a001cc0:	4770      	bx	lr
1a001cc2:	bf00      	nop
1a001cc4:	4005005c 	.word	0x4005005c

1a001cc8 <Chip_Clock_DisableBaseClock>:
1a001cc8:	281b      	cmp	r0, #27
1a001cca:	d805      	bhi.n	1a001cd8 <Chip_Clock_DisableBaseClock+0x10>
1a001ccc:	0080      	lsls	r0, r0, #2
1a001cce:	4b03      	ldr	r3, [pc, #12]	; (1a001cdc <Chip_Clock_DisableBaseClock+0x14>)
1a001cd0:	581a      	ldr	r2, [r3, r0]
1a001cd2:	f042 0201 	orr.w	r2, r2, #1
1a001cd6:	501a      	str	r2, [r3, r0]
1a001cd8:	4770      	bx	lr
1a001cda:	bf00      	nop
1a001cdc:	4005005c 	.word	0x4005005c

1a001ce0 <Chip_Clock_IsBaseClockEnabled>:
1a001ce0:	281b      	cmp	r0, #27
1a001ce2:	d808      	bhi.n	1a001cf6 <Chip_Clock_IsBaseClockEnabled+0x16>
1a001ce4:	0080      	lsls	r0, r0, #2
1a001ce6:	4b05      	ldr	r3, [pc, #20]	; (1a001cfc <Chip_Clock_IsBaseClockEnabled+0x1c>)
1a001ce8:	581b      	ldr	r3, [r3, r0]
1a001cea:	f013 0f01 	tst.w	r3, #1
1a001cee:	bf0c      	ite	eq
1a001cf0:	2001      	moveq	r0, #1
1a001cf2:	2000      	movne	r0, #0
1a001cf4:	4770      	bx	lr
1a001cf6:	2000      	movs	r0, #0
1a001cf8:	4770      	bx	lr
1a001cfa:	bf00      	nop
1a001cfc:	4005005c 	.word	0x4005005c

1a001d00 <Chip_Clock_GetBaseClock>:
1a001d00:	281b      	cmp	r0, #27
1a001d02:	d808      	bhi.n	1a001d16 <Chip_Clock_GetBaseClock+0x16>
1a001d04:	0080      	lsls	r0, r0, #2
1a001d06:	4b06      	ldr	r3, [pc, #24]	; (1a001d20 <Chip_Clock_GetBaseClock+0x20>)
1a001d08:	5818      	ldr	r0, [r3, r0]
1a001d0a:	f010 0f01 	tst.w	r0, #1
1a001d0e:	d104      	bne.n	1a001d1a <Chip_Clock_GetBaseClock+0x1a>
1a001d10:	f3c0 6004 	ubfx	r0, r0, #24, #5
1a001d14:	4770      	bx	lr
1a001d16:	2011      	movs	r0, #17
1a001d18:	4770      	bx	lr
1a001d1a:	2011      	movs	r0, #17
1a001d1c:	4770      	bx	lr
1a001d1e:	bf00      	nop
1a001d20:	4005005c 	.word	0x4005005c

1a001d24 <Chip_Clock_GetBaseClocktHz>:
1a001d24:	b508      	push	{r3, lr}
1a001d26:	f7ff ffeb 	bl	1a001d00 <Chip_Clock_GetBaseClock>
1a001d2a:	f7ff fdf7 	bl	1a00191c <Chip_Clock_GetClockInputHz>
1a001d2e:	bd08      	pop	{r3, pc}

1a001d30 <Chip_Clock_EnableOpts>:
1a001d30:	b909      	cbnz	r1, 1a001d36 <Chip_Clock_EnableOpts+0x6>
1a001d32:	2101      	movs	r1, #1
1a001d34:	e000      	b.n	1a001d38 <Chip_Clock_EnableOpts+0x8>
1a001d36:	2103      	movs	r1, #3
1a001d38:	b10a      	cbz	r2, 1a001d3e <Chip_Clock_EnableOpts+0xe>
1a001d3a:	f041 0104 	orr.w	r1, r1, #4
1a001d3e:	2b02      	cmp	r3, #2
1a001d40:	d101      	bne.n	1a001d46 <Chip_Clock_EnableOpts+0x16>
1a001d42:	f041 0120 	orr.w	r1, r1, #32
1a001d46:	f5b0 7fa1 	cmp.w	r0, #322	; 0x142
1a001d4a:	d305      	bcc.n	1a001d58 <Chip_Clock_EnableOpts+0x28>
1a001d4c:	f5a0 7091 	sub.w	r0, r0, #290	; 0x122
1a001d50:	4b04      	ldr	r3, [pc, #16]	; (1a001d64 <Chip_Clock_EnableOpts+0x34>)
1a001d52:	f843 1030 	str.w	r1, [r3, r0, lsl #3]
1a001d56:	4770      	bx	lr
1a001d58:	3020      	adds	r0, #32
1a001d5a:	4b03      	ldr	r3, [pc, #12]	; (1a001d68 <Chip_Clock_EnableOpts+0x38>)
1a001d5c:	f843 1030 	str.w	r1, [r3, r0, lsl #3]
1a001d60:	4770      	bx	lr
1a001d62:	bf00      	nop
1a001d64:	40052000 	.word	0x40052000
1a001d68:	40051000 	.word	0x40051000

1a001d6c <Chip_Clock_Enable>:
1a001d6c:	f5b0 7fa1 	cmp.w	r0, #322	; 0x142
1a001d70:	d309      	bcc.n	1a001d86 <Chip_Clock_Enable+0x1a>
1a001d72:	4a09      	ldr	r2, [pc, #36]	; (1a001d98 <Chip_Clock_Enable+0x2c>)
1a001d74:	f5a0 7091 	sub.w	r0, r0, #290	; 0x122
1a001d78:	f852 3030 	ldr.w	r3, [r2, r0, lsl #3]
1a001d7c:	f043 0301 	orr.w	r3, r3, #1
1a001d80:	f842 3030 	str.w	r3, [r2, r0, lsl #3]
1a001d84:	4770      	bx	lr
1a001d86:	4a05      	ldr	r2, [pc, #20]	; (1a001d9c <Chip_Clock_Enable+0x30>)
1a001d88:	3020      	adds	r0, #32
1a001d8a:	f852 3030 	ldr.w	r3, [r2, r0, lsl #3]
1a001d8e:	f043 0301 	orr.w	r3, r3, #1
1a001d92:	f842 3030 	str.w	r3, [r2, r0, lsl #3]
1a001d96:	4770      	bx	lr
1a001d98:	40052000 	.word	0x40052000
1a001d9c:	40051000 	.word	0x40051000

1a001da0 <Chip_Clock_RTCEnable>:
1a001da0:	4b04      	ldr	r3, [pc, #16]	; (1a001db4 <Chip_Clock_RTCEnable+0x14>)
1a001da2:	685a      	ldr	r2, [r3, #4]
1a001da4:	f022 020c 	bic.w	r2, r2, #12
1a001da8:	605a      	str	r2, [r3, #4]
1a001daa:	685a      	ldr	r2, [r3, #4]
1a001dac:	f042 0203 	orr.w	r2, r2, #3
1a001db0:	605a      	str	r2, [r3, #4]
1a001db2:	4770      	bx	lr
1a001db4:	40043000 	.word	0x40043000

1a001db8 <Chip_Clock_Disable>:
1a001db8:	f5b0 7fa1 	cmp.w	r0, #322	; 0x142
1a001dbc:	d309      	bcc.n	1a001dd2 <Chip_Clock_Disable+0x1a>
1a001dbe:	4a09      	ldr	r2, [pc, #36]	; (1a001de4 <Chip_Clock_Disable+0x2c>)
1a001dc0:	f5a0 7091 	sub.w	r0, r0, #290	; 0x122
1a001dc4:	f852 3030 	ldr.w	r3, [r2, r0, lsl #3]
1a001dc8:	f023 0301 	bic.w	r3, r3, #1
1a001dcc:	f842 3030 	str.w	r3, [r2, r0, lsl #3]
1a001dd0:	4770      	bx	lr
1a001dd2:	4a05      	ldr	r2, [pc, #20]	; (1a001de8 <Chip_Clock_Disable+0x30>)
1a001dd4:	3020      	adds	r0, #32
1a001dd6:	f852 3030 	ldr.w	r3, [r2, r0, lsl #3]
1a001dda:	f023 0301 	bic.w	r3, r3, #1
1a001dde:	f842 3030 	str.w	r3, [r2, r0, lsl #3]
1a001de2:	4770      	bx	lr
1a001de4:	40052000 	.word	0x40052000
1a001de8:	40051000 	.word	0x40051000

1a001dec <Chip_Clock_StartPowerDown>:
1a001dec:	2301      	movs	r3, #1
1a001dee:	4a03      	ldr	r2, [pc, #12]	; (1a001dfc <Chip_Clock_StartPowerDown+0x10>)
1a001df0:	6013      	str	r3, [r2, #0]
1a001df2:	f502 5280 	add.w	r2, r2, #4096	; 0x1000
1a001df6:	6013      	str	r3, [r2, #0]
1a001df8:	4770      	bx	lr
1a001dfa:	bf00      	nop
1a001dfc:	40051000 	.word	0x40051000

1a001e00 <Chip_Clock_ClearPowerDown>:
1a001e00:	2300      	movs	r3, #0
1a001e02:	4a03      	ldr	r2, [pc, #12]	; (1a001e10 <Chip_Clock_ClearPowerDown+0x10>)
1a001e04:	6013      	str	r3, [r2, #0]
1a001e06:	f502 5280 	add.w	r2, r2, #4096	; 0x1000
1a001e0a:	6013      	str	r3, [r2, #0]
1a001e0c:	4770      	bx	lr
1a001e0e:	bf00      	nop
1a001e10:	40051000 	.word	0x40051000

1a001e14 <Chip_Clock_GetRate>:
1a001e14:	b510      	push	{r4, lr}
1a001e16:	f5b0 7fa1 	cmp.w	r0, #322	; 0x142
1a001e1a:	d305      	bcc.n	1a001e28 <Chip_Clock_GetRate+0x14>
1a001e1c:	f5a0 7391 	sub.w	r3, r0, #290	; 0x122
1a001e20:	4a0d      	ldr	r2, [pc, #52]	; (1a001e58 <Chip_Clock_GetRate+0x44>)
1a001e22:	f852 4033 	ldr.w	r4, [r2, r3, lsl #3]
1a001e26:	e004      	b.n	1a001e32 <Chip_Clock_GetRate+0x1e>
1a001e28:	f100 0320 	add.w	r3, r0, #32
1a001e2c:	4a0b      	ldr	r2, [pc, #44]	; (1a001e5c <Chip_Clock_GetRate+0x48>)
1a001e2e:	f852 4033 	ldr.w	r4, [r2, r3, lsl #3]
1a001e32:	f014 0f01 	tst.w	r4, #1
1a001e36:	d00c      	beq.n	1a001e52 <Chip_Clock_GetRate+0x3e>
1a001e38:	f7ff fcd8 	bl	1a0017ec <Chip_Clock_FindBaseClock>
1a001e3c:	f7ff ff72 	bl	1a001d24 <Chip_Clock_GetBaseClocktHz>
1a001e40:	f014 0fe0 	tst.w	r4, #224	; 0xe0
1a001e44:	d101      	bne.n	1a001e4a <Chip_Clock_GetRate+0x36>
1a001e46:	2301      	movs	r3, #1
1a001e48:	e000      	b.n	1a001e4c <Chip_Clock_GetRate+0x38>
1a001e4a:	2302      	movs	r3, #2
1a001e4c:	fbb0 f0f3 	udiv	r0, r0, r3
1a001e50:	bd10      	pop	{r4, pc}
1a001e52:	2000      	movs	r0, #0
1a001e54:	bd10      	pop	{r4, pc}
1a001e56:	bf00      	nop
1a001e58:	40052000 	.word	0x40052000
1a001e5c:	40051000 	.word	0x40051000

1a001e60 <Chip_Clock_GetEMCRate>:
1a001e60:	b508      	push	{r3, lr}
1a001e62:	2066      	movs	r0, #102	; 0x66
1a001e64:	f7ff ffd6 	bl	1a001e14 <Chip_Clock_GetRate>
1a001e68:	4b07      	ldr	r3, [pc, #28]	; (1a001e88 <Chip_Clock_GetEMCRate+0x28>)
1a001e6a:	f8d3 3478 	ldr.w	r3, [r3, #1144]	; 0x478
1a001e6e:	f3c3 63c2 	ubfx	r3, r3, #27, #3
1a001e72:	2b01      	cmp	r3, #1
1a001e74:	d106      	bne.n	1a001e84 <Chip_Clock_GetEMCRate+0x24>
1a001e76:	4b05      	ldr	r3, [pc, #20]	; (1a001e8c <Chip_Clock_GetEMCRate+0x2c>)
1a001e78:	f8d3 312c 	ldr.w	r3, [r3, #300]	; 0x12c
1a001e7c:	f413 3f80 	tst.w	r3, #65536	; 0x10000
1a001e80:	d000      	beq.n	1a001e84 <Chip_Clock_GetEMCRate+0x24>
1a001e82:	0840      	lsrs	r0, r0, #1
1a001e84:	bd08      	pop	{r3, pc}
1a001e86:	bf00      	nop
1a001e88:	40051000 	.word	0x40051000
1a001e8c:	40043000 	.word	0x40043000

1a001e90 <Chip_Clock_SetupPLL>:
1a001e90:	b410      	push	{r4}
1a001e92:	6813      	ldr	r3, [r2, #0]
1a001e94:	ea43 6000 	orr.w	r0, r3, r0, lsl #24
1a001e98:	4b0b      	ldr	r3, [pc, #44]	; (1a001ec8 <Chip_Clock_SetupPLL+0x38>)
1a001e9a:	eb03 1401 	add.w	r4, r3, r1, lsl #4
1a001e9e:	6220      	str	r0, [r4, #32]
1a001ea0:	6850      	ldr	r0, [r2, #4]
1a001ea2:	1c8c      	adds	r4, r1, #2
1a001ea4:	eb03 1304 	add.w	r3, r3, r4, lsl #4
1a001ea8:	6058      	str	r0, [r3, #4]
1a001eaa:	6890      	ldr	r0, [r2, #8]
1a001eac:	6098      	str	r0, [r3, #8]
1a001eae:	2901      	cmp	r1, #1
1a001eb0:	d102      	bne.n	1a001eb8 <Chip_Clock_SetupPLL+0x28>
1a001eb2:	68d0      	ldr	r0, [r2, #12]
1a001eb4:	4b04      	ldr	r3, [pc, #16]	; (1a001ec8 <Chip_Clock_SetupPLL+0x38>)
1a001eb6:	63d8      	str	r0, [r3, #60]	; 0x3c
1a001eb8:	6912      	ldr	r2, [r2, #16]
1a001eba:	4b04      	ldr	r3, [pc, #16]	; (1a001ecc <Chip_Clock_SetupPLL+0x3c>)
1a001ebc:	f843 2021 	str.w	r2, [r3, r1, lsl #2]
1a001ec0:	f85d 4b04 	ldr.w	r4, [sp], #4
1a001ec4:	4770      	bx	lr
1a001ec6:	bf00      	nop
1a001ec8:	40050000 	.word	0x40050000
1a001ecc:	1000015c 	.word	0x1000015c

1a001ed0 <Chip_Clock_EnablePLL>:
1a001ed0:	0100      	lsls	r0, r0, #4
1a001ed2:	4b03      	ldr	r3, [pc, #12]	; (1a001ee0 <Chip_Clock_EnablePLL+0x10>)
1a001ed4:	581a      	ldr	r2, [r3, r0]
1a001ed6:	f022 0201 	bic.w	r2, r2, #1
1a001eda:	501a      	str	r2, [r3, r0]
1a001edc:	4770      	bx	lr
1a001ede:	bf00      	nop
1a001ee0:	40050020 	.word	0x40050020

1a001ee4 <Chip_Clock_DisablePLL>:
1a001ee4:	0100      	lsls	r0, r0, #4
1a001ee6:	4b03      	ldr	r3, [pc, #12]	; (1a001ef4 <Chip_Clock_DisablePLL+0x10>)
1a001ee8:	581a      	ldr	r2, [r3, r0]
1a001eea:	f042 0201 	orr.w	r2, r2, #1
1a001eee:	501a      	str	r2, [r3, r0]
1a001ef0:	4770      	bx	lr
1a001ef2:	bf00      	nop
1a001ef4:	40050020 	.word	0x40050020

1a001ef8 <Chip_Clock_GetPLLStatus>:
1a001ef8:	0100      	lsls	r0, r0, #4
1a001efa:	4b01      	ldr	r3, [pc, #4]	; (1a001f00 <Chip_Clock_GetPLLStatus+0x8>)
1a001efc:	5818      	ldr	r0, [r3, r0]
1a001efe:	4770      	bx	lr
1a001f00:	4005001c 	.word	0x4005001c

1a001f04 <fpuInit>:
1a001f04:	b084      	sub	sp, #16
1a001f06:	4b10      	ldr	r3, [pc, #64]	; (1a001f48 <fpuInit+0x44>)
1a001f08:	681b      	ldr	r3, [r3, #0]
1a001f0a:	9302      	str	r3, [sp, #8]
1a001f0c:	4b0f      	ldr	r3, [pc, #60]	; (1a001f4c <fpuInit+0x48>)
1a001f0e:	681b      	ldr	r3, [r3, #0]
1a001f10:	9301      	str	r3, [sp, #4]
1a001f12:	9a02      	ldr	r2, [sp, #8]
1a001f14:	4b0e      	ldr	r3, [pc, #56]	; (1a001f50 <fpuInit+0x4c>)
1a001f16:	429a      	cmp	r2, r3
1a001f18:	d105      	bne.n	1a001f26 <fpuInit+0x22>
1a001f1a:	9a01      	ldr	r2, [sp, #4]
1a001f1c:	4b0d      	ldr	r3, [pc, #52]	; (1a001f54 <fpuInit+0x50>)
1a001f1e:	429a      	cmp	r2, r3
1a001f20:	d003      	beq.n	1a001f2a <fpuInit+0x26>
1a001f22:	2300      	movs	r3, #0
1a001f24:	e002      	b.n	1a001f2c <fpuInit+0x28>
1a001f26:	2300      	movs	r3, #0
1a001f28:	e000      	b.n	1a001f2c <fpuInit+0x28>
1a001f2a:	2301      	movs	r3, #1
1a001f2c:	f013 0fff 	tst.w	r3, #255	; 0xff
1a001f30:	d008      	beq.n	1a001f44 <fpuInit+0x40>
1a001f32:	4a09      	ldr	r2, [pc, #36]	; (1a001f58 <fpuInit+0x54>)
1a001f34:	6813      	ldr	r3, [r2, #0]
1a001f36:	9303      	str	r3, [sp, #12]
1a001f38:	9b03      	ldr	r3, [sp, #12]
1a001f3a:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
1a001f3e:	9303      	str	r3, [sp, #12]
1a001f40:	9b03      	ldr	r3, [sp, #12]
1a001f42:	6013      	str	r3, [r2, #0]
1a001f44:	b004      	add	sp, #16
1a001f46:	4770      	bx	lr
1a001f48:	e000ef40 	.word	0xe000ef40
1a001f4c:	e000ef44 	.word	0xe000ef44
1a001f50:	10110021 	.word	0x10110021
1a001f54:	11000011 	.word	0x11000011
1a001f58:	e000ed88 	.word	0xe000ed88

1a001f5c <Chip_GPIO_Init>:
1a001f5c:	4770      	bx	lr
1a001f5e:	bf00      	nop

1a001f60 <Chip_GPIO_DeInit>:
1a001f60:	4770      	bx	lr
1a001f62:	bf00      	nop

1a001f64 <RingBuffer_Init>:
1a001f64:	6001      	str	r1, [r0, #0]
1a001f66:	6043      	str	r3, [r0, #4]
1a001f68:	6082      	str	r2, [r0, #8]
1a001f6a:	2300      	movs	r3, #0
1a001f6c:	6103      	str	r3, [r0, #16]
1a001f6e:	60c3      	str	r3, [r0, #12]
1a001f70:	2001      	movs	r0, #1
1a001f72:	4770      	bx	lr

1a001f74 <RingBuffer_Insert>:
1a001f74:	b538      	push	{r3, r4, r5, lr}
1a001f76:	6805      	ldr	r5, [r0, #0]
1a001f78:	68c3      	ldr	r3, [r0, #12]
1a001f7a:	6902      	ldr	r2, [r0, #16]
1a001f7c:	1a9b      	subs	r3, r3, r2
1a001f7e:	6842      	ldr	r2, [r0, #4]
1a001f80:	4293      	cmp	r3, r2
1a001f82:	da0d      	bge.n	1a001fa0 <RingBuffer_Insert+0x2c>
1a001f84:	4604      	mov	r4, r0
1a001f86:	68c0      	ldr	r0, [r0, #12]
1a001f88:	3a01      	subs	r2, #1
1a001f8a:	4010      	ands	r0, r2
1a001f8c:	68a2      	ldr	r2, [r4, #8]
1a001f8e:	fb02 5000 	mla	r0, r2, r0, r5
1a001f92:	f000 fec1 	bl	1a002d18 <memcpy>
1a001f96:	68e3      	ldr	r3, [r4, #12]
1a001f98:	3301      	adds	r3, #1
1a001f9a:	60e3      	str	r3, [r4, #12]
1a001f9c:	2001      	movs	r0, #1
1a001f9e:	bd38      	pop	{r3, r4, r5, pc}
1a001fa0:	2000      	movs	r0, #0
1a001fa2:	bd38      	pop	{r3, r4, r5, pc}

1a001fa4 <RingBuffer_InsertMult>:
1a001fa4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
1a001fa8:	f8d0 e000 	ldr.w	lr, [r0]
1a001fac:	68c3      	ldr	r3, [r0, #12]
1a001fae:	6904      	ldr	r4, [r0, #16]
1a001fb0:	1b1c      	subs	r4, r3, r4
1a001fb2:	6843      	ldr	r3, [r0, #4]
1a001fb4:	429c      	cmp	r4, r3
1a001fb6:	da3a      	bge.n	1a00202e <RingBuffer_InsertMult+0x8a>
1a001fb8:	68c6      	ldr	r6, [r0, #12]
1a001fba:	6905      	ldr	r5, [r0, #16]
1a001fbc:	1b76      	subs	r6, r6, r5
1a001fbe:	1b9e      	subs	r6, r3, r6
1a001fc0:	68c4      	ldr	r4, [r0, #12]
1a001fc2:	f103 3cff 	add.w	ip, r3, #4294967295	; 0xffffffff
1a001fc6:	ea04 0c0c 	and.w	ip, r4, ip
1a001fca:	eb0c 0406 	add.w	r4, ip, r6
1a001fce:	429c      	cmp	r4, r3
1a001fd0:	d302      	bcc.n	1a001fd8 <RingBuffer_InsertMult+0x34>
1a001fd2:	ebcc 0303 	rsb	r3, ip, r3
1a001fd6:	e000      	b.n	1a001fda <RingBuffer_InsertMult+0x36>
1a001fd8:	4633      	mov	r3, r6
1a001fda:	460f      	mov	r7, r1
1a001fdc:	4604      	mov	r4, r0
1a001fde:	1af6      	subs	r6, r6, r3
1a001fe0:	4293      	cmp	r3, r2
1a001fe2:	bfa8      	it	ge
1a001fe4:	4613      	movge	r3, r2
1a001fe6:	4698      	mov	r8, r3
1a001fe8:	1ad5      	subs	r5, r2, r3
1a001fea:	42b5      	cmp	r5, r6
1a001fec:	bfa8      	it	ge
1a001fee:	4635      	movge	r5, r6
1a001ff0:	6882      	ldr	r2, [r0, #8]
1a001ff2:	fb02 e00c 	mla	r0, r2, ip, lr
1a001ff6:	fb02 f203 	mul.w	r2, r2, r3
1a001ffa:	f000 fe8d 	bl	1a002d18 <memcpy>
1a001ffe:	68e3      	ldr	r3, [r4, #12]
1a002000:	eb08 0203 	add.w	r2, r8, r3
1a002004:	60e2      	str	r2, [r4, #12]
1a002006:	6820      	ldr	r0, [r4, #0]
1a002008:	6863      	ldr	r3, [r4, #4]
1a00200a:	3b01      	subs	r3, #1
1a00200c:	4013      	ands	r3, r2
1a00200e:	68a2      	ldr	r2, [r4, #8]
1a002010:	fb02 0003 	mla	r0, r2, r3, r0
1a002014:	fb02 7108 	mla	r1, r2, r8, r7
1a002018:	fb02 f205 	mul.w	r2, r2, r5
1a00201c:	f000 fe7c 	bl	1a002d18 <memcpy>
1a002020:	68e3      	ldr	r3, [r4, #12]
1a002022:	442b      	add	r3, r5
1a002024:	60e3      	str	r3, [r4, #12]
1a002026:	eb08 0005 	add.w	r0, r8, r5
1a00202a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
1a00202e:	2000      	movs	r0, #0
1a002030:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

1a002034 <RingBuffer_Pop>:
1a002034:	b538      	push	{r3, r4, r5, lr}
1a002036:	6805      	ldr	r5, [r0, #0]
1a002038:	68c2      	ldr	r2, [r0, #12]
1a00203a:	6903      	ldr	r3, [r0, #16]
1a00203c:	429a      	cmp	r2, r3
1a00203e:	d00f      	beq.n	1a002060 <RingBuffer_Pop+0x2c>
1a002040:	4604      	mov	r4, r0
1a002042:	6902      	ldr	r2, [r0, #16]
1a002044:	6843      	ldr	r3, [r0, #4]
1a002046:	3b01      	subs	r3, #1
1a002048:	4013      	ands	r3, r2
1a00204a:	6882      	ldr	r2, [r0, #8]
1a00204c:	4608      	mov	r0, r1
1a00204e:	fb02 5103 	mla	r1, r2, r3, r5
1a002052:	f000 fe61 	bl	1a002d18 <memcpy>
1a002056:	6923      	ldr	r3, [r4, #16]
1a002058:	3301      	adds	r3, #1
1a00205a:	6123      	str	r3, [r4, #16]
1a00205c:	2001      	movs	r0, #1
1a00205e:	bd38      	pop	{r3, r4, r5, pc}
1a002060:	2000      	movs	r0, #0
1a002062:	bd38      	pop	{r3, r4, r5, pc}

1a002064 <RingBuffer_PopMult>:
1a002064:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
1a002066:	f8d0 e000 	ldr.w	lr, [r0]
1a00206a:	68c4      	ldr	r4, [r0, #12]
1a00206c:	6903      	ldr	r3, [r0, #16]
1a00206e:	429c      	cmp	r4, r3
1a002070:	d037      	beq.n	1a0020e2 <RingBuffer_PopMult+0x7e>
1a002072:	68c3      	ldr	r3, [r0, #12]
1a002074:	6904      	ldr	r4, [r0, #16]
1a002076:	1b1b      	subs	r3, r3, r4
1a002078:	6904      	ldr	r4, [r0, #16]
1a00207a:	6846      	ldr	r6, [r0, #4]
1a00207c:	f106 3cff 	add.w	ip, r6, #4294967295	; 0xffffffff
1a002080:	ea04 0c0c 	and.w	ip, r4, ip
1a002084:	eb0c 0403 	add.w	r4, ip, r3
1a002088:	42b4      	cmp	r4, r6
1a00208a:	d302      	bcc.n	1a002092 <RingBuffer_PopMult+0x2e>
1a00208c:	ebcc 0606 	rsb	r6, ip, r6
1a002090:	e000      	b.n	1a002094 <RingBuffer_PopMult+0x30>
1a002092:	461e      	mov	r6, r3
1a002094:	460f      	mov	r7, r1
1a002096:	4605      	mov	r5, r0
1a002098:	1b9b      	subs	r3, r3, r6
1a00209a:	4296      	cmp	r6, r2
1a00209c:	bfa8      	it	ge
1a00209e:	4616      	movge	r6, r2
1a0020a0:	1b94      	subs	r4, r2, r6
1a0020a2:	429c      	cmp	r4, r3
1a0020a4:	bfa8      	it	ge
1a0020a6:	461c      	movge	r4, r3
1a0020a8:	6882      	ldr	r2, [r0, #8]
1a0020aa:	4608      	mov	r0, r1
1a0020ac:	fb02 e10c 	mla	r1, r2, ip, lr
1a0020b0:	fb02 f206 	mul.w	r2, r2, r6
1a0020b4:	f000 fe30 	bl	1a002d18 <memcpy>
1a0020b8:	692b      	ldr	r3, [r5, #16]
1a0020ba:	18f2      	adds	r2, r6, r3
1a0020bc:	612a      	str	r2, [r5, #16]
1a0020be:	6829      	ldr	r1, [r5, #0]
1a0020c0:	686b      	ldr	r3, [r5, #4]
1a0020c2:	3b01      	subs	r3, #1
1a0020c4:	4013      	ands	r3, r2
1a0020c6:	68aa      	ldr	r2, [r5, #8]
1a0020c8:	fb02 7006 	mla	r0, r2, r6, r7
1a0020cc:	fb02 1103 	mla	r1, r2, r3, r1
1a0020d0:	fb02 f204 	mul.w	r2, r2, r4
1a0020d4:	f000 fe20 	bl	1a002d18 <memcpy>
1a0020d8:	692b      	ldr	r3, [r5, #16]
1a0020da:	4423      	add	r3, r4
1a0020dc:	612b      	str	r3, [r5, #16]
1a0020de:	1930      	adds	r0, r6, r4
1a0020e0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
1a0020e2:	2000      	movs	r0, #0
1a0020e4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
1a0020e6:	bf00      	nop

1a0020e8 <Chip_SetupCoreClock>:
1a0020e8:	b570      	push	{r4, r5, r6, lr}
1a0020ea:	b08a      	sub	sp, #40	; 0x28
1a0020ec:	4605      	mov	r5, r0
1a0020ee:	460e      	mov	r6, r1
1a0020f0:	4614      	mov	r4, r2
1a0020f2:	f44f 73fa 	mov.w	r3, #500	; 0x1f4
1a0020f6:	9309      	str	r3, [sp, #36]	; 0x24
1a0020f8:	2806      	cmp	r0, #6
1a0020fa:	d101      	bne.n	1a002100 <Chip_SetupCoreClock+0x18>
1a0020fc:	f7ff fb9a 	bl	1a001834 <Chip_Clock_EnableCrystal>
1a002100:	2004      	movs	r0, #4
1a002102:	4629      	mov	r1, r5
1a002104:	2201      	movs	r2, #1
1a002106:	2300      	movs	r3, #0
1a002108:	f7ff fd96 	bl	1a001c38 <Chip_Clock_SetBaseClock>
1a00210c:	4a47      	ldr	r2, [pc, #284]	; (1a00222c <Chip_SetupCoreClock+0x144>)
1a00210e:	6c53      	ldr	r3, [r2, #68]	; 0x44
1a002110:	f043 0301 	orr.w	r3, r3, #1
1a002114:	6453      	str	r3, [r2, #68]	; 0x44
1a002116:	f88d 5008 	strb.w	r5, [sp, #8]
1a00211a:	4630      	mov	r0, r6
1a00211c:	a901      	add	r1, sp, #4
1a00211e:	f7ff fc59 	bl	1a0019d4 <Chip_Clock_CalcMainPLLValue>
1a002122:	4b43      	ldr	r3, [pc, #268]	; (1a002230 <Chip_SetupCoreClock+0x148>)
1a002124:	429e      	cmp	r6, r3
1a002126:	d913      	bls.n	1a002150 <Chip_SetupCoreClock+0x68>
1a002128:	9b01      	ldr	r3, [sp, #4]
1a00212a:	f013 0f40 	tst.w	r3, #64	; 0x40
1a00212e:	d000      	beq.n	1a002132 <Chip_SetupCoreClock+0x4a>
1a002130:	e7fe      	b.n	1a002130 <Chip_SetupCoreClock+0x48>
1a002132:	f013 0f80 	tst.w	r3, #128	; 0x80
1a002136:	d005      	beq.n	1a002144 <Chip_SetupCoreClock+0x5c>
1a002138:	f023 0380 	bic.w	r3, r3, #128	; 0x80
1a00213c:	9301      	str	r3, [sp, #4]
1a00213e:	2500      	movs	r5, #0
1a002140:	2601      	movs	r6, #1
1a002142:	e007      	b.n	1a002154 <Chip_SetupCoreClock+0x6c>
1a002144:	9b04      	ldr	r3, [sp, #16]
1a002146:	3301      	adds	r3, #1
1a002148:	9304      	str	r3, [sp, #16]
1a00214a:	2501      	movs	r5, #1
1a00214c:	2600      	movs	r6, #0
1a00214e:	e001      	b.n	1a002154 <Chip_SetupCoreClock+0x6c>
1a002150:	2500      	movs	r5, #0
1a002152:	462e      	mov	r6, r5
1a002154:	f89d 2008 	ldrb.w	r2, [sp, #8]
1a002158:	9b01      	ldr	r3, [sp, #4]
1a00215a:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
1a00215e:	9a05      	ldr	r2, [sp, #20]
1a002160:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
1a002164:	9a03      	ldr	r2, [sp, #12]
1a002166:	ea43 3302 	orr.w	r3, r3, r2, lsl #12
1a00216a:	9a04      	ldr	r2, [sp, #16]
1a00216c:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
1a002170:	f443 6300 	orr.w	r3, r3, #2048	; 0x800
1a002174:	4a2d      	ldr	r2, [pc, #180]	; (1a00222c <Chip_SetupCoreClock+0x144>)
1a002176:	6453      	str	r3, [r2, #68]	; 0x44
1a002178:	4b2c      	ldr	r3, [pc, #176]	; (1a00222c <Chip_SetupCoreClock+0x144>)
1a00217a:	6c1b      	ldr	r3, [r3, #64]	; 0x40
1a00217c:	f013 0f01 	tst.w	r3, #1
1a002180:	d0fa      	beq.n	1a002178 <Chip_SetupCoreClock+0x90>
1a002182:	2004      	movs	r0, #4
1a002184:	2109      	movs	r1, #9
1a002186:	2201      	movs	r2, #1
1a002188:	2300      	movs	r3, #0
1a00218a:	f7ff fd55 	bl	1a001c38 <Chip_Clock_SetBaseClock>
1a00218e:	b1ee      	cbz	r6, 1a0021cc <Chip_SetupCoreClock+0xe4>
1a002190:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
1a002194:	9309      	str	r3, [sp, #36]	; 0x24
1a002196:	9b09      	ldr	r3, [sp, #36]	; 0x24
1a002198:	1e5a      	subs	r2, r3, #1
1a00219a:	9209      	str	r2, [sp, #36]	; 0x24
1a00219c:	2b00      	cmp	r3, #0
1a00219e:	d1fa      	bne.n	1a002196 <Chip_SetupCoreClock+0xae>
1a0021a0:	9b01      	ldr	r3, [sp, #4]
1a0021a2:	f043 0380 	orr.w	r3, r3, #128	; 0x80
1a0021a6:	9301      	str	r3, [sp, #4]
1a0021a8:	f89d 2008 	ldrb.w	r2, [sp, #8]
1a0021ac:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
1a0021b0:	9a05      	ldr	r2, [sp, #20]
1a0021b2:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
1a0021b6:	9a03      	ldr	r2, [sp, #12]
1a0021b8:	ea43 3302 	orr.w	r3, r3, r2, lsl #12
1a0021bc:	9a04      	ldr	r2, [sp, #16]
1a0021be:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
1a0021c2:	f443 6300 	orr.w	r3, r3, #2048	; 0x800
1a0021c6:	4a19      	ldr	r2, [pc, #100]	; (1a00222c <Chip_SetupCoreClock+0x144>)
1a0021c8:	6453      	str	r3, [r2, #68]	; 0x44
1a0021ca:	e01c      	b.n	1a002206 <Chip_SetupCoreClock+0x11e>
1a0021cc:	b1dd      	cbz	r5, 1a002206 <Chip_SetupCoreClock+0x11e>
1a0021ce:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
1a0021d2:	9309      	str	r3, [sp, #36]	; 0x24
1a0021d4:	9b09      	ldr	r3, [sp, #36]	; 0x24
1a0021d6:	1e5a      	subs	r2, r3, #1
1a0021d8:	9209      	str	r2, [sp, #36]	; 0x24
1a0021da:	2b00      	cmp	r3, #0
1a0021dc:	d1fa      	bne.n	1a0021d4 <Chip_SetupCoreClock+0xec>
1a0021de:	9b04      	ldr	r3, [sp, #16]
1a0021e0:	1e59      	subs	r1, r3, #1
1a0021e2:	9104      	str	r1, [sp, #16]
1a0021e4:	f89d 2008 	ldrb.w	r2, [sp, #8]
1a0021e8:	9b01      	ldr	r3, [sp, #4]
1a0021ea:	ea43 6202 	orr.w	r2, r3, r2, lsl #24
1a0021ee:	9b05      	ldr	r3, [sp, #20]
1a0021f0:	ea42 4203 	orr.w	r2, r2, r3, lsl #16
1a0021f4:	9b03      	ldr	r3, [sp, #12]
1a0021f6:	ea42 3303 	orr.w	r3, r2, r3, lsl #12
1a0021fa:	ea43 2301 	orr.w	r3, r3, r1, lsl #8
1a0021fe:	f443 6300 	orr.w	r3, r3, #2048	; 0x800
1a002202:	4a0a      	ldr	r2, [pc, #40]	; (1a00222c <Chip_SetupCoreClock+0x144>)
1a002204:	6453      	str	r3, [r2, #68]	; 0x44
1a002206:	b964      	cbnz	r4, 1a002222 <Chip_SetupCoreClock+0x13a>
1a002208:	e00e      	b.n	1a002228 <Chip_SetupCoreClock+0x140>
1a00220a:	4a0a      	ldr	r2, [pc, #40]	; (1a002234 <Chip_SetupCoreClock+0x14c>)
1a00220c:	eb02 0384 	add.w	r3, r2, r4, lsl #2
1a002210:	f812 0024 	ldrb.w	r0, [r2, r4, lsl #2]
1a002214:	7859      	ldrb	r1, [r3, #1]
1a002216:	789a      	ldrb	r2, [r3, #2]
1a002218:	78db      	ldrb	r3, [r3, #3]
1a00221a:	f7ff fd0d 	bl	1a001c38 <Chip_Clock_SetBaseClock>
1a00221e:	3401      	adds	r4, #1
1a002220:	e000      	b.n	1a002224 <Chip_SetupCoreClock+0x13c>
1a002222:	2400      	movs	r4, #0
1a002224:	2c11      	cmp	r4, #17
1a002226:	d9f0      	bls.n	1a00220a <Chip_SetupCoreClock+0x122>
1a002228:	b00a      	add	sp, #40	; 0x28
1a00222a:	bd70      	pop	{r4, r5, r6, pc}
1a00222c:	40050000 	.word	0x40050000
1a002230:	068e7780 	.word	0x068e7780
1a002234:	1a003088 	.word	0x1a003088

1a002238 <Chip_SetupXtalClocking>:
1a002238:	b508      	push	{r3, lr}
1a00223a:	2006      	movs	r0, #6
1a00223c:	4902      	ldr	r1, [pc, #8]	; (1a002248 <Chip_SetupXtalClocking+0x10>)
1a00223e:	2201      	movs	r2, #1
1a002240:	f7ff ff52 	bl	1a0020e8 <Chip_SetupCoreClock>
1a002244:	bd08      	pop	{r3, pc}
1a002246:	bf00      	nop
1a002248:	0c28cb00 	.word	0x0c28cb00

1a00224c <Chip_SetupIrcClocking>:
1a00224c:	b508      	push	{r3, lr}
1a00224e:	2001      	movs	r0, #1
1a002250:	4902      	ldr	r1, [pc, #8]	; (1a00225c <Chip_SetupIrcClocking+0x10>)
1a002252:	4602      	mov	r2, r0
1a002254:	f7ff ff48 	bl	1a0020e8 <Chip_SetupCoreClock>
1a002258:	bd08      	pop	{r3, pc}
1a00225a:	bf00      	nop
1a00225c:	0c28cb00 	.word	0x0c28cb00

1a002260 <Chip_SystemInit>:
1a002260:	b508      	push	{r3, lr}
1a002262:	f7ff fff3 	bl	1a00224c <Chip_SetupIrcClocking>
1a002266:	bd08      	pop	{r3, pc}

1a002268 <Chip_TIMER_GetClockIndex>:
1a002268:	4b09      	ldr	r3, [pc, #36]	; (1a002290 <Chip_TIMER_GetClockIndex+0x28>)
1a00226a:	4298      	cmp	r0, r3
1a00226c:	d009      	beq.n	1a002282 <Chip_TIMER_GetClockIndex+0x1a>
1a00226e:	f5a3 5380 	sub.w	r3, r3, #4096	; 0x1000
1a002272:	4298      	cmp	r0, r3
1a002274:	d007      	beq.n	1a002286 <Chip_TIMER_GetClockIndex+0x1e>
1a002276:	f5a3 3378 	sub.w	r3, r3, #253952	; 0x3e000
1a00227a:	4298      	cmp	r0, r3
1a00227c:	d105      	bne.n	1a00228a <Chip_TIMER_GetClockIndex+0x22>
1a00227e:	2085      	movs	r0, #133	; 0x85
1a002280:	4770      	bx	lr
1a002282:	20a4      	movs	r0, #164	; 0xa4
1a002284:	4770      	bx	lr
1a002286:	20a3      	movs	r0, #163	; 0xa3
1a002288:	4770      	bx	lr
1a00228a:	2084      	movs	r0, #132	; 0x84
1a00228c:	4770      	bx	lr
1a00228e:	bf00      	nop
1a002290:	400c4000 	.word	0x400c4000

1a002294 <Chip_TIMER_Init>:
1a002294:	b508      	push	{r3, lr}
1a002296:	f7ff ffe7 	bl	1a002268 <Chip_TIMER_GetClockIndex>
1a00229a:	f7ff fd67 	bl	1a001d6c <Chip_Clock_Enable>
1a00229e:	bd08      	pop	{r3, pc}

1a0022a0 <Chip_TIMER_DeInit>:
1a0022a0:	b508      	push	{r3, lr}
1a0022a2:	f7ff ffe1 	bl	1a002268 <Chip_TIMER_GetClockIndex>
1a0022a6:	f7ff fd87 	bl	1a001db8 <Chip_Clock_Disable>
1a0022aa:	bd08      	pop	{r3, pc}

1a0022ac <Chip_TIMER_Reset>:
1a0022ac:	6842      	ldr	r2, [r0, #4]
1a0022ae:	2300      	movs	r3, #0
1a0022b0:	6043      	str	r3, [r0, #4]
1a0022b2:	2301      	movs	r3, #1
1a0022b4:	6083      	str	r3, [r0, #8]
1a0022b6:	2302      	movs	r3, #2
1a0022b8:	6043      	str	r3, [r0, #4]
1a0022ba:	6883      	ldr	r3, [r0, #8]
1a0022bc:	2b00      	cmp	r3, #0
1a0022be:	d1fc      	bne.n	1a0022ba <Chip_TIMER_Reset+0xe>
1a0022c0:	6042      	str	r2, [r0, #4]
1a0022c2:	4770      	bx	lr

1a0022c4 <Chip_TIMER_ExtMatchControlSet>:
1a0022c4:	b470      	push	{r4, r5, r6}
1a0022c6:	2401      	movs	r4, #1
1a0022c8:	fa04 f603 	lsl.w	r6, r4, r3
1a0022cc:	1c9d      	adds	r5, r3, #2
1a0022ce:	40a5      	lsls	r5, r4
1a0022d0:	2403      	movs	r4, #3
1a0022d2:	40ac      	lsls	r4, r5
1a0022d4:	4334      	orrs	r4, r6
1a0022d6:	6bc6      	ldr	r6, [r0, #60]	; 0x3c
1a0022d8:	ea26 0404 	bic.w	r4, r6, r4
1a0022dc:	63c4      	str	r4, [r0, #60]	; 0x3c
1a0022de:	4099      	lsls	r1, r3
1a0022e0:	430c      	orrs	r4, r1
1a0022e2:	40aa      	lsls	r2, r5
1a0022e4:	4314      	orrs	r4, r2
1a0022e6:	63c4      	str	r4, [r0, #60]	; 0x3c
1a0022e8:	bc70      	pop	{r4, r5, r6}
1a0022ea:	4770      	bx	lr

1a0022ec <Chip_UART_GetIndex>:
1a0022ec:	4b09      	ldr	r3, [pc, #36]	; (1a002314 <Chip_UART_GetIndex+0x28>)
1a0022ee:	4298      	cmp	r0, r3
1a0022f0:	d009      	beq.n	1a002306 <Chip_UART_GetIndex+0x1a>
1a0022f2:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
1a0022f6:	4298      	cmp	r0, r3
1a0022f8:	d007      	beq.n	1a00230a <Chip_UART_GetIndex+0x1e>
1a0022fa:	f5a3 2380 	sub.w	r3, r3, #262144	; 0x40000
1a0022fe:	4298      	cmp	r0, r3
1a002300:	d005      	beq.n	1a00230e <Chip_UART_GetIndex+0x22>
1a002302:	2000      	movs	r0, #0
1a002304:	4770      	bx	lr
1a002306:	2002      	movs	r0, #2
1a002308:	4770      	bx	lr
1a00230a:	2003      	movs	r0, #3
1a00230c:	4770      	bx	lr
1a00230e:	2001      	movs	r0, #1
1a002310:	4770      	bx	lr
1a002312:	bf00      	nop
1a002314:	400c1000 	.word	0x400c1000

1a002318 <Chip_UART_ABIntHandler>:
1a002318:	6883      	ldr	r3, [r0, #8]
1a00231a:	f413 7f80 	tst.w	r3, #256	; 0x100
1a00231e:	d00f      	beq.n	1a002340 <Chip_UART_ABIntHandler+0x28>
1a002320:	6a03      	ldr	r3, [r0, #32]
1a002322:	f443 7380 	orr.w	r3, r3, #256	; 0x100
1a002326:	6203      	str	r3, [r0, #32]
1a002328:	6843      	ldr	r3, [r0, #4]
1a00232a:	f423 7380 	bic.w	r3, r3, #256	; 0x100
1a00232e:	6043      	str	r3, [r0, #4]
1a002330:	4b0a      	ldr	r3, [pc, #40]	; (1a00235c <Chip_UART_ABIntHandler+0x44>)
1a002332:	781b      	ldrb	r3, [r3, #0]
1a002334:	f013 0fff 	tst.w	r3, #255	; 0xff
1a002338:	d102      	bne.n	1a002340 <Chip_UART_ABIntHandler+0x28>
1a00233a:	2201      	movs	r2, #1
1a00233c:	4b07      	ldr	r3, [pc, #28]	; (1a00235c <Chip_UART_ABIntHandler+0x44>)
1a00233e:	701a      	strb	r2, [r3, #0]
1a002340:	6883      	ldr	r3, [r0, #8]
1a002342:	f413 7f00 	tst.w	r3, #512	; 0x200
1a002346:	d007      	beq.n	1a002358 <Chip_UART_ABIntHandler+0x40>
1a002348:	6a03      	ldr	r3, [r0, #32]
1a00234a:	f443 7300 	orr.w	r3, r3, #512	; 0x200
1a00234e:	6203      	str	r3, [r0, #32]
1a002350:	6843      	ldr	r3, [r0, #4]
1a002352:	f423 7300 	bic.w	r3, r3, #512	; 0x200
1a002356:	6043      	str	r3, [r0, #4]
1a002358:	4770      	bx	lr
1a00235a:	bf00      	nop
1a00235c:	10000164 	.word	0x10000164

1a002360 <Chip_UART_Init>:
1a002360:	b510      	push	{r4, lr}
1a002362:	b082      	sub	sp, #8
1a002364:	4604      	mov	r4, r0
1a002366:	f7ff ffc1 	bl	1a0022ec <Chip_UART_GetIndex>
1a00236a:	4b0f      	ldr	r3, [pc, #60]	; (1a0023a8 <Chip_UART_Init+0x48>)
1a00236c:	f833 0010 	ldrh.w	r0, [r3, r0, lsl #1]
1a002370:	2101      	movs	r1, #1
1a002372:	460a      	mov	r2, r1
1a002374:	460b      	mov	r3, r1
1a002376:	f7ff fcdb 	bl	1a001d30 <Chip_Clock_EnableOpts>
1a00237a:	2307      	movs	r3, #7
1a00237c:	60a3      	str	r3, [r4, #8]
1a00237e:	2300      	movs	r3, #0
1a002380:	65e3      	str	r3, [r4, #92]	; 0x5c
1a002382:	6063      	str	r3, [r4, #4]
1a002384:	60e3      	str	r3, [r4, #12]
1a002386:	6223      	str	r3, [r4, #32]
1a002388:	64e3      	str	r3, [r4, #76]	; 0x4c
1a00238a:	6563      	str	r3, [r4, #84]	; 0x54
1a00238c:	6523      	str	r3, [r4, #80]	; 0x50
1a00238e:	4b07      	ldr	r3, [pc, #28]	; (1a0023ac <Chip_UART_Init+0x4c>)
1a002390:	429c      	cmp	r4, r3
1a002392:	d103      	bne.n	1a00239c <Chip_UART_Init+0x3c>
1a002394:	2300      	movs	r3, #0
1a002396:	6123      	str	r3, [r4, #16]
1a002398:	69a3      	ldr	r3, [r4, #24]
1a00239a:	9301      	str	r3, [sp, #4]
1a00239c:	2303      	movs	r3, #3
1a00239e:	60e3      	str	r3, [r4, #12]
1a0023a0:	2310      	movs	r3, #16
1a0023a2:	62a3      	str	r3, [r4, #40]	; 0x28
1a0023a4:	b002      	add	sp, #8
1a0023a6:	bd10      	pop	{r4, pc}
1a0023a8:	1a0030d0 	.word	0x1a0030d0
1a0023ac:	40082000 	.word	0x40082000

1a0023b0 <Chip_UART_DeInit>:
1a0023b0:	b508      	push	{r3, lr}
1a0023b2:	2200      	movs	r2, #0
1a0023b4:	65c2      	str	r2, [r0, #92]	; 0x5c
1a0023b6:	f7ff ff99 	bl	1a0022ec <Chip_UART_GetIndex>
1a0023ba:	4b03      	ldr	r3, [pc, #12]	; (1a0023c8 <Chip_UART_DeInit+0x18>)
1a0023bc:	f833 0010 	ldrh.w	r0, [r3, r0, lsl #1]
1a0023c0:	f7ff fcfa 	bl	1a001db8 <Chip_Clock_Disable>
1a0023c4:	bd08      	pop	{r3, pc}
1a0023c6:	bf00      	nop
1a0023c8:	1a0030d0 	.word	0x1a0030d0

1a0023cc <Chip_UART_Send>:
1a0023cc:	b410      	push	{r4}
1a0023ce:	2300      	movs	r3, #0
1a0023d0:	e003      	b.n	1a0023da <Chip_UART_Send+0xe>
1a0023d2:	f811 4b01 	ldrb.w	r4, [r1], #1
1a0023d6:	6004      	str	r4, [r0, #0]
1a0023d8:	3301      	adds	r3, #1
1a0023da:	4293      	cmp	r3, r2
1a0023dc:	da03      	bge.n	1a0023e6 <Chip_UART_Send+0x1a>
1a0023de:	6944      	ldr	r4, [r0, #20]
1a0023e0:	f014 0f20 	tst.w	r4, #32
1a0023e4:	d1f5      	bne.n	1a0023d2 <Chip_UART_Send+0x6>
1a0023e6:	4618      	mov	r0, r3
1a0023e8:	f85d 4b04 	ldr.w	r4, [sp], #4
1a0023ec:	4770      	bx	lr
1a0023ee:	bf00      	nop

1a0023f0 <Chip_UART_CheckBusy>:
1a0023f0:	6943      	ldr	r3, [r0, #20]
1a0023f2:	f013 0f40 	tst.w	r3, #64	; 0x40
1a0023f6:	d001      	beq.n	1a0023fc <Chip_UART_CheckBusy+0xc>
1a0023f8:	2000      	movs	r0, #0
1a0023fa:	4770      	bx	lr
1a0023fc:	2001      	movs	r0, #1
1a0023fe:	4770      	bx	lr

1a002400 <Chip_UART_SendBlocking>:
1a002400:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
1a002402:	4607      	mov	r7, r0
1a002404:	460d      	mov	r5, r1
1a002406:	4614      	mov	r4, r2
1a002408:	2600      	movs	r6, #0
1a00240a:	e007      	b.n	1a00241c <Chip_UART_SendBlocking+0x1c>
1a00240c:	4638      	mov	r0, r7
1a00240e:	4629      	mov	r1, r5
1a002410:	4622      	mov	r2, r4
1a002412:	f7ff ffdb 	bl	1a0023cc <Chip_UART_Send>
1a002416:	1a24      	subs	r4, r4, r0
1a002418:	4406      	add	r6, r0
1a00241a:	4405      	add	r5, r0
1a00241c:	2c00      	cmp	r4, #0
1a00241e:	dcf5      	bgt.n	1a00240c <Chip_UART_SendBlocking+0xc>
1a002420:	4630      	mov	r0, r6
1a002422:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

1a002424 <Chip_UART_Read>:
1a002424:	b410      	push	{r4}
1a002426:	2300      	movs	r3, #0
1a002428:	e003      	b.n	1a002432 <Chip_UART_Read+0xe>
1a00242a:	6804      	ldr	r4, [r0, #0]
1a00242c:	f801 4b01 	strb.w	r4, [r1], #1
1a002430:	3301      	adds	r3, #1
1a002432:	4293      	cmp	r3, r2
1a002434:	da03      	bge.n	1a00243e <Chip_UART_Read+0x1a>
1a002436:	6944      	ldr	r4, [r0, #20]
1a002438:	f014 0f01 	tst.w	r4, #1
1a00243c:	d1f5      	bne.n	1a00242a <Chip_UART_Read+0x6>
1a00243e:	4618      	mov	r0, r3
1a002440:	f85d 4b04 	ldr.w	r4, [sp], #4
1a002444:	4770      	bx	lr
1a002446:	bf00      	nop

1a002448 <Chip_UART_ReadBlocking>:
1a002448:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
1a00244a:	4607      	mov	r7, r0
1a00244c:	460d      	mov	r5, r1
1a00244e:	4614      	mov	r4, r2
1a002450:	2600      	movs	r6, #0
1a002452:	e007      	b.n	1a002464 <Chip_UART_ReadBlocking+0x1c>
1a002454:	4638      	mov	r0, r7
1a002456:	4629      	mov	r1, r5
1a002458:	4622      	mov	r2, r4
1a00245a:	f7ff ffe3 	bl	1a002424 <Chip_UART_Read>
1a00245e:	1a24      	subs	r4, r4, r0
1a002460:	4406      	add	r6, r0
1a002462:	4405      	add	r5, r0
1a002464:	2c00      	cmp	r4, #0
1a002466:	dcf5      	bgt.n	1a002454 <Chip_UART_ReadBlocking+0xc>
1a002468:	4630      	mov	r0, r6
1a00246a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

1a00246c <Chip_UART_SetBaud>:
1a00246c:	b538      	push	{r3, r4, r5, lr}
1a00246e:	4605      	mov	r5, r0
1a002470:	460c      	mov	r4, r1
1a002472:	f7ff ff3b 	bl	1a0022ec <Chip_UART_GetIndex>
1a002476:	4b0d      	ldr	r3, [pc, #52]	; (1a0024ac <Chip_UART_SetBaud+0x40>)
1a002478:	eb03 0040 	add.w	r0, r3, r0, lsl #1
1a00247c:	8900      	ldrh	r0, [r0, #8]
1a00247e:	f7ff fcc9 	bl	1a001e14 <Chip_Clock_GetRate>
1a002482:	0124      	lsls	r4, r4, #4
1a002484:	fbb0 f3f4 	udiv	r3, r0, r4
1a002488:	68ea      	ldr	r2, [r5, #12]
1a00248a:	f042 0280 	orr.w	r2, r2, #128	; 0x80
1a00248e:	60ea      	str	r2, [r5, #12]
1a002490:	b2da      	uxtb	r2, r3
1a002492:	602a      	str	r2, [r5, #0]
1a002494:	f3c3 2207 	ubfx	r2, r3, #8, #8
1a002498:	606a      	str	r2, [r5, #4]
1a00249a:	68ea      	ldr	r2, [r5, #12]
1a00249c:	f022 0280 	bic.w	r2, r2, #128	; 0x80
1a0024a0:	60ea      	str	r2, [r5, #12]
1a0024a2:	fbb0 f0f3 	udiv	r0, r0, r3
1a0024a6:	0900      	lsrs	r0, r0, #4
1a0024a8:	bd38      	pop	{r3, r4, r5, pc}
1a0024aa:	bf00      	nop
1a0024ac:	1a0030d0 	.word	0x1a0030d0

1a0024b0 <Chip_UART_RXIntHandlerRB>:
1a0024b0:	b530      	push	{r4, r5, lr}
1a0024b2:	b083      	sub	sp, #12
1a0024b4:	4604      	mov	r4, r0
1a0024b6:	460d      	mov	r5, r1
1a0024b8:	e006      	b.n	1a0024c8 <Chip_UART_RXIntHandlerRB+0x18>
1a0024ba:	6823      	ldr	r3, [r4, #0]
1a0024bc:	a902      	add	r1, sp, #8
1a0024be:	f801 3d01 	strb.w	r3, [r1, #-1]!
1a0024c2:	4628      	mov	r0, r5
1a0024c4:	f7ff fd56 	bl	1a001f74 <RingBuffer_Insert>
1a0024c8:	6963      	ldr	r3, [r4, #20]
1a0024ca:	f013 0f01 	tst.w	r3, #1
1a0024ce:	d1f4      	bne.n	1a0024ba <Chip_UART_RXIntHandlerRB+0xa>
1a0024d0:	b003      	add	sp, #12
1a0024d2:	bd30      	pop	{r4, r5, pc}

1a0024d4 <Chip_UART_TXIntHandlerRB>:
1a0024d4:	b530      	push	{r4, r5, lr}
1a0024d6:	b083      	sub	sp, #12
1a0024d8:	4604      	mov	r4, r0
1a0024da:	460d      	mov	r5, r1
1a0024dc:	e002      	b.n	1a0024e4 <Chip_UART_TXIntHandlerRB+0x10>
1a0024de:	f89d 3007 	ldrb.w	r3, [sp, #7]
1a0024e2:	6023      	str	r3, [r4, #0]
1a0024e4:	6963      	ldr	r3, [r4, #20]
1a0024e6:	f013 0f20 	tst.w	r3, #32
1a0024ea:	d006      	beq.n	1a0024fa <Chip_UART_TXIntHandlerRB+0x26>
1a0024ec:	4628      	mov	r0, r5
1a0024ee:	f10d 0107 	add.w	r1, sp, #7
1a0024f2:	f7ff fd9f 	bl	1a002034 <RingBuffer_Pop>
1a0024f6:	2800      	cmp	r0, #0
1a0024f8:	d1f1      	bne.n	1a0024de <Chip_UART_TXIntHandlerRB+0xa>
1a0024fa:	68ea      	ldr	r2, [r5, #12]
1a0024fc:	692b      	ldr	r3, [r5, #16]
1a0024fe:	429a      	cmp	r2, r3
1a002500:	d103      	bne.n	1a00250a <Chip_UART_TXIntHandlerRB+0x36>
1a002502:	6863      	ldr	r3, [r4, #4]
1a002504:	f023 0302 	bic.w	r3, r3, #2
1a002508:	6063      	str	r3, [r4, #4]
1a00250a:	b003      	add	sp, #12
1a00250c:	bd30      	pop	{r4, r5, pc}
1a00250e:	bf00      	nop

1a002510 <Chip_UART_SendRB>:
1a002510:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
1a002514:	4604      	mov	r4, r0
1a002516:	460e      	mov	r6, r1
1a002518:	4690      	mov	r8, r2
1a00251a:	461f      	mov	r7, r3
1a00251c:	6843      	ldr	r3, [r0, #4]
1a00251e:	f023 0302 	bic.w	r3, r3, #2
1a002522:	6043      	str	r3, [r0, #4]
1a002524:	4608      	mov	r0, r1
1a002526:	4611      	mov	r1, r2
1a002528:	463a      	mov	r2, r7
1a00252a:	f7ff fd3b 	bl	1a001fa4 <RingBuffer_InsertMult>
1a00252e:	4605      	mov	r5, r0
1a002530:	4620      	mov	r0, r4
1a002532:	4631      	mov	r1, r6
1a002534:	f7ff ffce 	bl	1a0024d4 <Chip_UART_TXIntHandlerRB>
1a002538:	4630      	mov	r0, r6
1a00253a:	eb08 0105 	add.w	r1, r8, r5
1a00253e:	1b7a      	subs	r2, r7, r5
1a002540:	f7ff fd30 	bl	1a001fa4 <RingBuffer_InsertMult>
1a002544:	6863      	ldr	r3, [r4, #4]
1a002546:	f043 0302 	orr.w	r3, r3, #2
1a00254a:	6063      	str	r3, [r4, #4]
1a00254c:	4428      	add	r0, r5
1a00254e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
1a002552:	bf00      	nop

1a002554 <Chip_UART_ReadRB>:
1a002554:	b508      	push	{r3, lr}
1a002556:	4608      	mov	r0, r1
1a002558:	4611      	mov	r1, r2
1a00255a:	461a      	mov	r2, r3
1a00255c:	f7ff fd82 	bl	1a002064 <RingBuffer_PopMult>
1a002560:	bd08      	pop	{r3, pc}
1a002562:	bf00      	nop

1a002564 <Chip_UART_IRQRBHandler>:
1a002564:	b570      	push	{r4, r5, r6, lr}
1a002566:	4604      	mov	r4, r0
1a002568:	460e      	mov	r6, r1
1a00256a:	6843      	ldr	r3, [r0, #4]
1a00256c:	f013 0f02 	tst.w	r3, #2
1a002570:	d00b      	beq.n	1a00258a <Chip_UART_IRQRBHandler+0x26>
1a002572:	4615      	mov	r5, r2
1a002574:	4611      	mov	r1, r2
1a002576:	f7ff ffad 	bl	1a0024d4 <Chip_UART_TXIntHandlerRB>
1a00257a:	68ea      	ldr	r2, [r5, #12]
1a00257c:	692b      	ldr	r3, [r5, #16]
1a00257e:	429a      	cmp	r2, r3
1a002580:	d103      	bne.n	1a00258a <Chip_UART_IRQRBHandler+0x26>
1a002582:	6863      	ldr	r3, [r4, #4]
1a002584:	f023 0302 	bic.w	r3, r3, #2
1a002588:	6063      	str	r3, [r4, #4]
1a00258a:	4620      	mov	r0, r4
1a00258c:	4631      	mov	r1, r6
1a00258e:	f7ff ff8f 	bl	1a0024b0 <Chip_UART_RXIntHandlerRB>
1a002592:	4620      	mov	r0, r4
1a002594:	f7ff fec0 	bl	1a002318 <Chip_UART_ABIntHandler>
1a002598:	bd70      	pop	{r4, r5, r6, pc}
1a00259a:	bf00      	nop

1a00259c <Chip_UART_SetBaudFDR>:
1a00259c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
1a0025a0:	b083      	sub	sp, #12
1a0025a2:	4683      	mov	fp, r0
1a0025a4:	4688      	mov	r8, r1
1a0025a6:	f7ff fea1 	bl	1a0022ec <Chip_UART_GetIndex>
1a0025aa:	4b35      	ldr	r3, [pc, #212]	; (1a002680 <Chip_UART_SetBaudFDR+0xe4>)
1a0025ac:	eb03 0040 	add.w	r0, r3, r0, lsl #1
1a0025b0:	8900      	ldrh	r0, [r0, #8]
1a0025b2:	f7ff fc2f 	bl	1a001e14 <Chip_Clock_GetRate>
1a0025b6:	4606      	mov	r6, r0
1a0025b8:	f04f 37ff 	mov.w	r7, #4294967295	; 0xffffffff
1a0025bc:	2401      	movs	r4, #1
1a0025be:	2300      	movs	r3, #0
1a0025c0:	9301      	str	r3, [sp, #4]
1a0025c2:	46a2      	mov	sl, r4
1a0025c4:	4699      	mov	r9, r3
1a0025c6:	e029      	b.n	1a00261c <Chip_UART_SetBaudFDR+0x80>
1a0025c8:	2300      	movs	r3, #0
1a0025ca:	0932      	lsrs	r2, r6, #4
1a0025cc:	0730      	lsls	r0, r6, #28
1a0025ce:	fba0 0104 	umull	r0, r1, r0, r4
1a0025d2:	fb04 1102 	mla	r1, r4, r2, r1
1a0025d6:	1962      	adds	r2, r4, r5
1a0025d8:	fb08 f202 	mul.w	r2, r8, r2
1a0025dc:	f000 f8ce 	bl	1a00277c <__aeabi_uldivmod>
1a0025e0:	4603      	mov	r3, r0
1a0025e2:	460a      	mov	r2, r1
1a0025e4:	2800      	cmp	r0, #0
1a0025e6:	da01      	bge.n	1a0025ec <Chip_UART_SetBaudFDR+0x50>
1a0025e8:	4243      	negs	r3, r0
1a0025ea:	1c4a      	adds	r2, r1, #1
1a0025ec:	429f      	cmp	r7, r3
1a0025ee:	d30a      	bcc.n	1a002606 <Chip_UART_SetBaudFDR+0x6a>
1a0025f0:	b14a      	cbz	r2, 1a002606 <Chip_UART_SetBaudFDR+0x6a>
1a0025f2:	0c11      	lsrs	r1, r2, #16
1a0025f4:	d107      	bne.n	1a002606 <Chip_UART_SetBaudFDR+0x6a>
1a0025f6:	2a02      	cmp	r2, #2
1a0025f8:	d800      	bhi.n	1a0025fc <Chip_UART_SetBaudFDR+0x60>
1a0025fa:	b925      	cbnz	r5, 1a002606 <Chip_UART_SetBaudFDR+0x6a>
1a0025fc:	b14b      	cbz	r3, 1a002612 <Chip_UART_SetBaudFDR+0x76>
1a0025fe:	461f      	mov	r7, r3
1a002600:	9501      	str	r5, [sp, #4]
1a002602:	46a2      	mov	sl, r4
1a002604:	4691      	mov	r9, r2
1a002606:	3501      	adds	r5, #1
1a002608:	e000      	b.n	1a00260c <Chip_UART_SetBaudFDR+0x70>
1a00260a:	2500      	movs	r5, #0
1a00260c:	42a5      	cmp	r5, r4
1a00260e:	d3db      	bcc.n	1a0025c8 <Chip_UART_SetBaudFDR+0x2c>
1a002610:	e003      	b.n	1a00261a <Chip_UART_SetBaudFDR+0x7e>
1a002612:	461f      	mov	r7, r3
1a002614:	9501      	str	r5, [sp, #4]
1a002616:	46a2      	mov	sl, r4
1a002618:	4691      	mov	r9, r2
1a00261a:	3401      	adds	r4, #1
1a00261c:	b10f      	cbz	r7, 1a002622 <Chip_UART_SetBaudFDR+0x86>
1a00261e:	2c0f      	cmp	r4, #15
1a002620:	d9f3      	bls.n	1a00260a <Chip_UART_SetBaudFDR+0x6e>
1a002622:	f1b9 0f00 	cmp.w	r9, #0
1a002626:	d026      	beq.n	1a002676 <Chip_UART_SetBaudFDR+0xda>
1a002628:	f8db 300c 	ldr.w	r3, [fp, #12]
1a00262c:	f043 0380 	orr.w	r3, r3, #128	; 0x80
1a002630:	f8cb 300c 	str.w	r3, [fp, #12]
1a002634:	fa5f f389 	uxtb.w	r3, r9
1a002638:	f8cb 3000 	str.w	r3, [fp]
1a00263c:	f3c9 2307 	ubfx	r3, r9, #8, #8
1a002640:	f8cb 3004 	str.w	r3, [fp, #4]
1a002644:	f8db 300c 	ldr.w	r3, [fp, #12]
1a002648:	f023 0380 	bic.w	r3, r3, #128	; 0x80
1a00264c:	f8cb 300c 	str.w	r3, [fp, #12]
1a002650:	ea4f 130a 	mov.w	r3, sl, lsl #4
1a002654:	b2da      	uxtb	r2, r3
1a002656:	9901      	ldr	r1, [sp, #4]
1a002658:	f001 030f 	and.w	r3, r1, #15
1a00265c:	4313      	orrs	r3, r2
1a00265e:	f8cb 3028 	str.w	r3, [fp, #40]	; 0x28
1a002662:	0933      	lsrs	r3, r6, #4
1a002664:	fb0a f303 	mul.w	r3, sl, r3
1a002668:	eb0a 0001 	add.w	r0, sl, r1
1a00266c:	fb09 f000 	mul.w	r0, r9, r0
1a002670:	fbb3 f0f0 	udiv	r0, r3, r0
1a002674:	e000      	b.n	1a002678 <Chip_UART_SetBaudFDR+0xdc>
1a002676:	2000      	movs	r0, #0
1a002678:	b003      	add	sp, #12
1a00267a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
1a00267e:	bf00      	nop
1a002680:	1a0030d0 	.word	0x1a0030d0

1a002684 <Chip_UART_GetABEOStatus>:
1a002684:	4b01      	ldr	r3, [pc, #4]	; (1a00268c <Chip_UART_GetABEOStatus+0x8>)
1a002686:	7818      	ldrb	r0, [r3, #0]
1a002688:	4770      	bx	lr
1a00268a:	bf00      	nop
1a00268c:	10000164 	.word	0x10000164

1a002690 <Chip_UART_ABCmd>:
1a002690:	2b01      	cmp	r3, #1
1a002692:	d116      	bne.n	1a0026c2 <Chip_UART_ABCmd+0x32>
1a002694:	68c3      	ldr	r3, [r0, #12]
1a002696:	f043 0380 	orr.w	r3, r3, #128	; 0x80
1a00269a:	60c3      	str	r3, [r0, #12]
1a00269c:	2300      	movs	r3, #0
1a00269e:	6003      	str	r3, [r0, #0]
1a0026a0:	6043      	str	r3, [r0, #4]
1a0026a2:	68c3      	ldr	r3, [r0, #12]
1a0026a4:	f023 0380 	bic.w	r3, r3, #128	; 0x80
1a0026a8:	60c3      	str	r3, [r0, #12]
1a0026aa:	2310      	movs	r3, #16
1a0026ac:	6283      	str	r3, [r0, #40]	; 0x28
1a0026ae:	2901      	cmp	r1, #1
1a0026b0:	d101      	bne.n	1a0026b6 <Chip_UART_ABCmd+0x26>
1a0026b2:	2303      	movs	r3, #3
1a0026b4:	e000      	b.n	1a0026b8 <Chip_UART_ABCmd+0x28>
1a0026b6:	2301      	movs	r3, #1
1a0026b8:	b10a      	cbz	r2, 1a0026be <Chip_UART_ABCmd+0x2e>
1a0026ba:	f043 0304 	orr.w	r3, r3, #4
1a0026be:	6203      	str	r3, [r0, #32]
1a0026c0:	4770      	bx	lr
1a0026c2:	2300      	movs	r3, #0
1a0026c4:	6203      	str	r3, [r0, #32]
1a0026c6:	4770      	bx	lr

1a0026c8 <ResetISR>:
1a0026c8:	b672      	cpsid	i
1a0026ca:	4a17      	ldr	r2, [pc, #92]	; (1a002728 <ResetISR+0x60>)
1a0026cc:	4b17      	ldr	r3, [pc, #92]	; (1a00272c <ResetISR+0x64>)
1a0026ce:	601a      	str	r2, [r3, #0]
1a0026d0:	4a17      	ldr	r2, [pc, #92]	; (1a002730 <ResetISR+0x68>)
1a0026d2:	3304      	adds	r3, #4
1a0026d4:	601a      	str	r2, [r3, #0]
1a0026d6:	2300      	movs	r3, #0
1a0026d8:	e005      	b.n	1a0026e6 <ResetISR+0x1e>
1a0026da:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
1a0026de:	4a15      	ldr	r2, [pc, #84]	; (1a002734 <ResetISR+0x6c>)
1a0026e0:	f842 1023 	str.w	r1, [r2, r3, lsl #2]
1a0026e4:	3301      	adds	r3, #1
1a0026e6:	2b07      	cmp	r3, #7
1a0026e8:	d9f7      	bls.n	1a0026da <ResetISR+0x12>
1a0026ea:	b510      	push	{r4, lr}
1a0026ec:	b662      	cpsie	i
1a0026ee:	f7fe ff25 	bl	1a00153c <SystemInit>
1a0026f2:	4b11      	ldr	r3, [pc, #68]	; (1a002738 <ResetISR+0x70>)
1a0026f4:	e007      	b.n	1a002706 <ResetISR+0x3e>
1a0026f6:	f103 040c 	add.w	r4, r3, #12
1a0026fa:	6818      	ldr	r0, [r3, #0]
1a0026fc:	6859      	ldr	r1, [r3, #4]
1a0026fe:	689a      	ldr	r2, [r3, #8]
1a002700:	f7fd fd50 	bl	1a0001a4 <data_init>
1a002704:	4623      	mov	r3, r4
1a002706:	4a0d      	ldr	r2, [pc, #52]	; (1a00273c <ResetISR+0x74>)
1a002708:	4293      	cmp	r3, r2
1a00270a:	d3f4      	bcc.n	1a0026f6 <ResetISR+0x2e>
1a00270c:	e006      	b.n	1a00271c <ResetISR+0x54>
1a00270e:	461c      	mov	r4, r3
1a002710:	f854 0b08 	ldr.w	r0, [r4], #8
1a002714:	6859      	ldr	r1, [r3, #4]
1a002716:	f7fd fd53 	bl	1a0001c0 <bss_init>
1a00271a:	4623      	mov	r3, r4
1a00271c:	4a08      	ldr	r2, [pc, #32]	; (1a002740 <ResetISR+0x78>)
1a00271e:	4293      	cmp	r3, r2
1a002720:	d3f5      	bcc.n	1a00270e <ResetISR+0x46>
1a002722:	f7fd fed3 	bl	1a0004cc <main>
1a002726:	e7fe      	b.n	1a002726 <ResetISR+0x5e>
1a002728:	10df1000 	.word	0x10df1000
1a00272c:	40053100 	.word	0x40053100
1a002730:	01dff7ff 	.word	0x01dff7ff
1a002734:	e000e280 	.word	0xe000e280
1a002738:	1a000114 	.word	0x1a000114
1a00273c:	1a000150 	.word	0x1a000150
1a002740:	1a000178 	.word	0x1a000178

1a002744 <__aeabi_ldivmod>:
1a002744:	b97b      	cbnz	r3, 1a002766 <__aeabi_ldivmod+0x22>
1a002746:	b972      	cbnz	r2, 1a002766 <__aeabi_ldivmod+0x22>
1a002748:	2900      	cmp	r1, #0
1a00274a:	bfbe      	ittt	lt
1a00274c:	2000      	movlt	r0, #0
1a00274e:	f04f 4100 	movlt.w	r1, #2147483648	; 0x80000000
1a002752:	e006      	blt.n	1a002762 <__aeabi_ldivmod+0x1e>
1a002754:	bf08      	it	eq
1a002756:	2800      	cmpeq	r0, #0
1a002758:	bf1c      	itt	ne
1a00275a:	f06f 4100 	mvnne.w	r1, #2147483648	; 0x80000000
1a00275e:	f04f 30ff 	movne.w	r0, #4294967295	; 0xffffffff
1a002762:	f000 b853 	b.w	1a00280c <__aeabi_idiv0>
1a002766:	b082      	sub	sp, #8
1a002768:	46ec      	mov	ip, sp
1a00276a:	e92d 5000 	stmdb	sp!, {ip, lr}
1a00276e:	f000 f81d 	bl	1a0027ac <__gnu_ldivmod_helper>
1a002772:	f8dd e004 	ldr.w	lr, [sp, #4]
1a002776:	b002      	add	sp, #8
1a002778:	bc0c      	pop	{r2, r3}
1a00277a:	4770      	bx	lr

1a00277c <__aeabi_uldivmod>:
1a00277c:	b953      	cbnz	r3, 1a002794 <__aeabi_uldivmod+0x18>
1a00277e:	b94a      	cbnz	r2, 1a002794 <__aeabi_uldivmod+0x18>
1a002780:	2900      	cmp	r1, #0
1a002782:	bf08      	it	eq
1a002784:	2800      	cmpeq	r0, #0
1a002786:	bf1c      	itt	ne
1a002788:	f04f 31ff 	movne.w	r1, #4294967295	; 0xffffffff
1a00278c:	f04f 30ff 	movne.w	r0, #4294967295	; 0xffffffff
1a002790:	f000 b83c 	b.w	1a00280c <__aeabi_idiv0>
1a002794:	b082      	sub	sp, #8
1a002796:	46ec      	mov	ip, sp
1a002798:	e92d 5000 	stmdb	sp!, {ip, lr}
1a00279c:	f000 f81e 	bl	1a0027dc <__gnu_uldivmod_helper>
1a0027a0:	f8dd e004 	ldr.w	lr, [sp, #4]
1a0027a4:	b002      	add	sp, #8
1a0027a6:	bc0c      	pop	{r2, r3}
1a0027a8:	4770      	bx	lr
1a0027aa:	bf00      	nop

1a0027ac <__gnu_ldivmod_helper>:
1a0027ac:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
1a0027b0:	9c06      	ldr	r4, [sp, #24]
1a0027b2:	4615      	mov	r5, r2
1a0027b4:	4606      	mov	r6, r0
1a0027b6:	460f      	mov	r7, r1
1a0027b8:	4698      	mov	r8, r3
1a0027ba:	f000 f829 	bl	1a002810 <__divdi3>
1a0027be:	fb05 f301 	mul.w	r3, r5, r1
1a0027c2:	fb00 3808 	mla	r8, r0, r8, r3
1a0027c6:	fba5 2300 	umull	r2, r3, r5, r0
1a0027ca:	1ab2      	subs	r2, r6, r2
1a0027cc:	4443      	add	r3, r8
1a0027ce:	eb67 0303 	sbc.w	r3, r7, r3
1a0027d2:	e9c4 2300 	strd	r2, r3, [r4]
1a0027d6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
1a0027da:	bf00      	nop

1a0027dc <__gnu_uldivmod_helper>:
1a0027dc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
1a0027e0:	9c06      	ldr	r4, [sp, #24]
1a0027e2:	4690      	mov	r8, r2
1a0027e4:	4606      	mov	r6, r0
1a0027e6:	460f      	mov	r7, r1
1a0027e8:	461d      	mov	r5, r3
1a0027ea:	f000 f95f 	bl	1a002aac <__udivdi3>
1a0027ee:	fb00 f505 	mul.w	r5, r0, r5
1a0027f2:	fba0 2308 	umull	r2, r3, r0, r8
1a0027f6:	fb08 5501 	mla	r5, r8, r1, r5
1a0027fa:	1ab2      	subs	r2, r6, r2
1a0027fc:	442b      	add	r3, r5
1a0027fe:	eb67 0303 	sbc.w	r3, r7, r3
1a002802:	e9c4 2300 	strd	r2, r3, [r4]
1a002806:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
1a00280a:	bf00      	nop

1a00280c <__aeabi_idiv0>:
1a00280c:	4770      	bx	lr
1a00280e:	bf00      	nop

1a002810 <__divdi3>:
1a002810:	2900      	cmp	r1, #0
1a002812:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
1a002816:	f2c0 80a6 	blt.w	1a002966 <__divdi3+0x156>
1a00281a:	2600      	movs	r6, #0
1a00281c:	2b00      	cmp	r3, #0
1a00281e:	f2c0 809c 	blt.w	1a00295a <__divdi3+0x14a>
1a002822:	4688      	mov	r8, r1
1a002824:	4694      	mov	ip, r2
1a002826:	469e      	mov	lr, r3
1a002828:	4615      	mov	r5, r2
1a00282a:	4604      	mov	r4, r0
1a00282c:	460f      	mov	r7, r1
1a00282e:	2b00      	cmp	r3, #0
1a002830:	d13d      	bne.n	1a0028ae <__divdi3+0x9e>
1a002832:	428a      	cmp	r2, r1
1a002834:	d959      	bls.n	1a0028ea <__divdi3+0xda>
1a002836:	fab2 f382 	clz	r3, r2
1a00283a:	b13b      	cbz	r3, 1a00284c <__divdi3+0x3c>
1a00283c:	f1c3 0220 	rsb	r2, r3, #32
1a002840:	409f      	lsls	r7, r3
1a002842:	fa20 f202 	lsr.w	r2, r0, r2
1a002846:	409d      	lsls	r5, r3
1a002848:	4317      	orrs	r7, r2
1a00284a:	409c      	lsls	r4, r3
1a00284c:	0c29      	lsrs	r1, r5, #16
1a00284e:	0c22      	lsrs	r2, r4, #16
1a002850:	fbb7 fef1 	udiv	lr, r7, r1
1a002854:	b2a8      	uxth	r0, r5
1a002856:	fb01 771e 	mls	r7, r1, lr, r7
1a00285a:	ea42 4707 	orr.w	r7, r2, r7, lsl #16
1a00285e:	fb00 f30e 	mul.w	r3, r0, lr
1a002862:	42bb      	cmp	r3, r7
1a002864:	d90a      	bls.n	1a00287c <__divdi3+0x6c>
1a002866:	197f      	adds	r7, r7, r5
1a002868:	f10e 32ff 	add.w	r2, lr, #4294967295	; 0xffffffff
1a00286c:	f080 8105 	bcs.w	1a002a7a <__divdi3+0x26a>
1a002870:	42bb      	cmp	r3, r7
1a002872:	f240 8102 	bls.w	1a002a7a <__divdi3+0x26a>
1a002876:	f1ae 0e02 	sub.w	lr, lr, #2
1a00287a:	442f      	add	r7, r5
1a00287c:	1aff      	subs	r7, r7, r3
1a00287e:	b2a4      	uxth	r4, r4
1a002880:	fbb7 f3f1 	udiv	r3, r7, r1
1a002884:	fb01 7713 	mls	r7, r1, r3, r7
1a002888:	ea44 4707 	orr.w	r7, r4, r7, lsl #16
1a00288c:	fb00 f003 	mul.w	r0, r0, r3
1a002890:	42b8      	cmp	r0, r7
1a002892:	d908      	bls.n	1a0028a6 <__divdi3+0x96>
1a002894:	197f      	adds	r7, r7, r5
1a002896:	f103 32ff 	add.w	r2, r3, #4294967295	; 0xffffffff
1a00289a:	f080 80f0 	bcs.w	1a002a7e <__divdi3+0x26e>
1a00289e:	42b8      	cmp	r0, r7
1a0028a0:	f240 80ed 	bls.w	1a002a7e <__divdi3+0x26e>
1a0028a4:	3b02      	subs	r3, #2
1a0028a6:	ea43 430e 	orr.w	r3, r3, lr, lsl #16
1a0028aa:	2200      	movs	r2, #0
1a0028ac:	e003      	b.n	1a0028b6 <__divdi3+0xa6>
1a0028ae:	428b      	cmp	r3, r1
1a0028b0:	d90f      	bls.n	1a0028d2 <__divdi3+0xc2>
1a0028b2:	2200      	movs	r2, #0
1a0028b4:	4613      	mov	r3, r2
1a0028b6:	1c34      	adds	r4, r6, #0
1a0028b8:	bf18      	it	ne
1a0028ba:	2401      	movne	r4, #1
1a0028bc:	4260      	negs	r0, r4
1a0028be:	f04f 0500 	mov.w	r5, #0
1a0028c2:	eb65 0145 	sbc.w	r1, r5, r5, lsl #1
1a0028c6:	4058      	eors	r0, r3
1a0028c8:	4051      	eors	r1, r2
1a0028ca:	1900      	adds	r0, r0, r4
1a0028cc:	4169      	adcs	r1, r5
1a0028ce:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
1a0028d2:	fab3 f283 	clz	r2, r3
1a0028d6:	2a00      	cmp	r2, #0
1a0028d8:	f040 8086 	bne.w	1a0029e8 <__divdi3+0x1d8>
1a0028dc:	428b      	cmp	r3, r1
1a0028de:	d302      	bcc.n	1a0028e6 <__divdi3+0xd6>
1a0028e0:	4584      	cmp	ip, r0
1a0028e2:	f200 80db 	bhi.w	1a002a9c <__divdi3+0x28c>
1a0028e6:	2301      	movs	r3, #1
1a0028e8:	e7e5      	b.n	1a0028b6 <__divdi3+0xa6>
1a0028ea:	b912      	cbnz	r2, 1a0028f2 <__divdi3+0xe2>
1a0028ec:	2301      	movs	r3, #1
1a0028ee:	fbb3 f5f2 	udiv	r5, r3, r2
1a0028f2:	fab5 f085 	clz	r0, r5
1a0028f6:	2800      	cmp	r0, #0
1a0028f8:	d13b      	bne.n	1a002972 <__divdi3+0x162>
1a0028fa:	1b78      	subs	r0, r7, r5
1a0028fc:	ea4f 4e15 	mov.w	lr, r5, lsr #16
1a002900:	fa1f fc85 	uxth.w	ip, r5
1a002904:	2201      	movs	r2, #1
1a002906:	fbb0 f8fe 	udiv	r8, r0, lr
1a00290a:	0c21      	lsrs	r1, r4, #16
1a00290c:	fb0e 0718 	mls	r7, lr, r8, r0
1a002910:	ea41 4707 	orr.w	r7, r1, r7, lsl #16
1a002914:	fb0c f308 	mul.w	r3, ip, r8
1a002918:	42bb      	cmp	r3, r7
1a00291a:	d907      	bls.n	1a00292c <__divdi3+0x11c>
1a00291c:	197f      	adds	r7, r7, r5
1a00291e:	f108 31ff 	add.w	r1, r8, #4294967295	; 0xffffffff
1a002922:	d202      	bcs.n	1a00292a <__divdi3+0x11a>
1a002924:	42bb      	cmp	r3, r7
1a002926:	f200 80bd 	bhi.w	1a002aa4 <__divdi3+0x294>
1a00292a:	4688      	mov	r8, r1
1a00292c:	1aff      	subs	r7, r7, r3
1a00292e:	b2a4      	uxth	r4, r4
1a002930:	fbb7 f3fe 	udiv	r3, r7, lr
1a002934:	fb0e 7713 	mls	r7, lr, r3, r7
1a002938:	ea44 4707 	orr.w	r7, r4, r7, lsl #16
1a00293c:	fb0c fc03 	mul.w	ip, ip, r3
1a002940:	45bc      	cmp	ip, r7
1a002942:	d907      	bls.n	1a002954 <__divdi3+0x144>
1a002944:	197f      	adds	r7, r7, r5
1a002946:	f103 31ff 	add.w	r1, r3, #4294967295	; 0xffffffff
1a00294a:	d202      	bcs.n	1a002952 <__divdi3+0x142>
1a00294c:	45bc      	cmp	ip, r7
1a00294e:	f200 80a7 	bhi.w	1a002aa0 <__divdi3+0x290>
1a002952:	460b      	mov	r3, r1
1a002954:	ea43 4308 	orr.w	r3, r3, r8, lsl #16
1a002958:	e7ad      	b.n	1a0028b6 <__divdi3+0xa6>
1a00295a:	4252      	negs	r2, r2
1a00295c:	ea6f 0606 	mvn.w	r6, r6
1a002960:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
1a002964:	e75d      	b.n	1a002822 <__divdi3+0x12>
1a002966:	4240      	negs	r0, r0
1a002968:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
1a00296c:	f04f 36ff 	mov.w	r6, #4294967295	; 0xffffffff
1a002970:	e754      	b.n	1a00281c <__divdi3+0xc>
1a002972:	f1c0 0220 	rsb	r2, r0, #32
1a002976:	fa24 f102 	lsr.w	r1, r4, r2
1a00297a:	fa07 f300 	lsl.w	r3, r7, r0
1a00297e:	4085      	lsls	r5, r0
1a002980:	ea4f 4e15 	mov.w	lr, r5, lsr #16
1a002984:	40d7      	lsrs	r7, r2
1a002986:	4319      	orrs	r1, r3
1a002988:	fbb7 f2fe 	udiv	r2, r7, lr
1a00298c:	0c0b      	lsrs	r3, r1, #16
1a00298e:	fb0e 7712 	mls	r7, lr, r2, r7
1a002992:	fa1f fc85 	uxth.w	ip, r5
1a002996:	ea43 4307 	orr.w	r3, r3, r7, lsl #16
1a00299a:	fb0c f702 	mul.w	r7, ip, r2
1a00299e:	429f      	cmp	r7, r3
1a0029a0:	fa04 f400 	lsl.w	r4, r4, r0
1a0029a4:	d907      	bls.n	1a0029b6 <__divdi3+0x1a6>
1a0029a6:	195b      	adds	r3, r3, r5
1a0029a8:	f102 30ff 	add.w	r0, r2, #4294967295	; 0xffffffff
1a0029ac:	d274      	bcs.n	1a002a98 <__divdi3+0x288>
1a0029ae:	429f      	cmp	r7, r3
1a0029b0:	d972      	bls.n	1a002a98 <__divdi3+0x288>
1a0029b2:	3a02      	subs	r2, #2
1a0029b4:	442b      	add	r3, r5
1a0029b6:	1bdf      	subs	r7, r3, r7
1a0029b8:	b289      	uxth	r1, r1
1a0029ba:	fbb7 f8fe 	udiv	r8, r7, lr
1a0029be:	fb0e 7318 	mls	r3, lr, r8, r7
1a0029c2:	ea41 4303 	orr.w	r3, r1, r3, lsl #16
1a0029c6:	fb0c f708 	mul.w	r7, ip, r8
1a0029ca:	429f      	cmp	r7, r3
1a0029cc:	d908      	bls.n	1a0029e0 <__divdi3+0x1d0>
1a0029ce:	195b      	adds	r3, r3, r5
1a0029d0:	f108 31ff 	add.w	r1, r8, #4294967295	; 0xffffffff
1a0029d4:	d25c      	bcs.n	1a002a90 <__divdi3+0x280>
1a0029d6:	429f      	cmp	r7, r3
1a0029d8:	d95a      	bls.n	1a002a90 <__divdi3+0x280>
1a0029da:	f1a8 0802 	sub.w	r8, r8, #2
1a0029de:	442b      	add	r3, r5
1a0029e0:	1bd8      	subs	r0, r3, r7
1a0029e2:	ea48 4202 	orr.w	r2, r8, r2, lsl #16
1a0029e6:	e78e      	b.n	1a002906 <__divdi3+0xf6>
1a0029e8:	f1c2 0320 	rsb	r3, r2, #32
1a0029ec:	fa2c f103 	lsr.w	r1, ip, r3
1a0029f0:	fa0e fe02 	lsl.w	lr, lr, r2
1a0029f4:	fa20 f703 	lsr.w	r7, r0, r3
1a0029f8:	ea41 0e0e 	orr.w	lr, r1, lr
1a0029fc:	fa08 f002 	lsl.w	r0, r8, r2
1a002a00:	fa28 f103 	lsr.w	r1, r8, r3
1a002a04:	ea4f 451e 	mov.w	r5, lr, lsr #16
1a002a08:	4338      	orrs	r0, r7
1a002a0a:	fbb1 f8f5 	udiv	r8, r1, r5
1a002a0e:	0c03      	lsrs	r3, r0, #16
1a002a10:	fb05 1118 	mls	r1, r5, r8, r1
1a002a14:	fa1f f78e 	uxth.w	r7, lr
1a002a18:	ea43 4101 	orr.w	r1, r3, r1, lsl #16
1a002a1c:	fb07 f308 	mul.w	r3, r7, r8
1a002a20:	428b      	cmp	r3, r1
1a002a22:	fa0c fc02 	lsl.w	ip, ip, r2
1a002a26:	d909      	bls.n	1a002a3c <__divdi3+0x22c>
1a002a28:	eb11 010e 	adds.w	r1, r1, lr
1a002a2c:	f108 39ff 	add.w	r9, r8, #4294967295	; 0xffffffff
1a002a30:	d230      	bcs.n	1a002a94 <__divdi3+0x284>
1a002a32:	428b      	cmp	r3, r1
1a002a34:	d92e      	bls.n	1a002a94 <__divdi3+0x284>
1a002a36:	f1a8 0802 	sub.w	r8, r8, #2
1a002a3a:	4471      	add	r1, lr
1a002a3c:	1ac9      	subs	r1, r1, r3
1a002a3e:	b280      	uxth	r0, r0
1a002a40:	fbb1 f3f5 	udiv	r3, r1, r5
1a002a44:	fb05 1113 	mls	r1, r5, r3, r1
1a002a48:	ea40 4101 	orr.w	r1, r0, r1, lsl #16
1a002a4c:	fb07 f703 	mul.w	r7, r7, r3
1a002a50:	428f      	cmp	r7, r1
1a002a52:	d908      	bls.n	1a002a66 <__divdi3+0x256>
1a002a54:	eb11 010e 	adds.w	r1, r1, lr
1a002a58:	f103 30ff 	add.w	r0, r3, #4294967295	; 0xffffffff
1a002a5c:	d216      	bcs.n	1a002a8c <__divdi3+0x27c>
1a002a5e:	428f      	cmp	r7, r1
1a002a60:	d914      	bls.n	1a002a8c <__divdi3+0x27c>
1a002a62:	3b02      	subs	r3, #2
1a002a64:	4471      	add	r1, lr
1a002a66:	ea43 4308 	orr.w	r3, r3, r8, lsl #16
1a002a6a:	1bc9      	subs	r1, r1, r7
1a002a6c:	fba3 890c 	umull	r8, r9, r3, ip
1a002a70:	4549      	cmp	r1, r9
1a002a72:	d309      	bcc.n	1a002a88 <__divdi3+0x278>
1a002a74:	d005      	beq.n	1a002a82 <__divdi3+0x272>
1a002a76:	2200      	movs	r2, #0
1a002a78:	e71d      	b.n	1a0028b6 <__divdi3+0xa6>
1a002a7a:	4696      	mov	lr, r2
1a002a7c:	e6fe      	b.n	1a00287c <__divdi3+0x6c>
1a002a7e:	4613      	mov	r3, r2
1a002a80:	e711      	b.n	1a0028a6 <__divdi3+0x96>
1a002a82:	4094      	lsls	r4, r2
1a002a84:	4544      	cmp	r4, r8
1a002a86:	d2f6      	bcs.n	1a002a76 <__divdi3+0x266>
1a002a88:	3b01      	subs	r3, #1
1a002a8a:	e7f4      	b.n	1a002a76 <__divdi3+0x266>
1a002a8c:	4603      	mov	r3, r0
1a002a8e:	e7ea      	b.n	1a002a66 <__divdi3+0x256>
1a002a90:	4688      	mov	r8, r1
1a002a92:	e7a5      	b.n	1a0029e0 <__divdi3+0x1d0>
1a002a94:	46c8      	mov	r8, r9
1a002a96:	e7d1      	b.n	1a002a3c <__divdi3+0x22c>
1a002a98:	4602      	mov	r2, r0
1a002a9a:	e78c      	b.n	1a0029b6 <__divdi3+0x1a6>
1a002a9c:	4613      	mov	r3, r2
1a002a9e:	e70a      	b.n	1a0028b6 <__divdi3+0xa6>
1a002aa0:	3b02      	subs	r3, #2
1a002aa2:	e757      	b.n	1a002954 <__divdi3+0x144>
1a002aa4:	f1a8 0802 	sub.w	r8, r8, #2
1a002aa8:	442f      	add	r7, r5
1a002aaa:	e73f      	b.n	1a00292c <__divdi3+0x11c>

1a002aac <__udivdi3>:
1a002aac:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
1a002ab0:	2b00      	cmp	r3, #0
1a002ab2:	d144      	bne.n	1a002b3e <__udivdi3+0x92>
1a002ab4:	428a      	cmp	r2, r1
1a002ab6:	4615      	mov	r5, r2
1a002ab8:	4604      	mov	r4, r0
1a002aba:	d94f      	bls.n	1a002b5c <__udivdi3+0xb0>
1a002abc:	fab2 f782 	clz	r7, r2
1a002ac0:	460e      	mov	r6, r1
1a002ac2:	b14f      	cbz	r7, 1a002ad8 <__udivdi3+0x2c>
1a002ac4:	f1c7 0320 	rsb	r3, r7, #32
1a002ac8:	40b9      	lsls	r1, r7
1a002aca:	fa20 f603 	lsr.w	r6, r0, r3
1a002ace:	fa02 f507 	lsl.w	r5, r2, r7
1a002ad2:	430e      	orrs	r6, r1
1a002ad4:	fa00 f407 	lsl.w	r4, r0, r7
1a002ad8:	ea4f 4e15 	mov.w	lr, r5, lsr #16
1a002adc:	0c23      	lsrs	r3, r4, #16
1a002ade:	fbb6 f0fe 	udiv	r0, r6, lr
1a002ae2:	b2af      	uxth	r7, r5
1a002ae4:	fb0e 6110 	mls	r1, lr, r0, r6
1a002ae8:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
1a002aec:	fb07 f100 	mul.w	r1, r7, r0
1a002af0:	4299      	cmp	r1, r3
1a002af2:	d909      	bls.n	1a002b08 <__udivdi3+0x5c>
1a002af4:	195b      	adds	r3, r3, r5
1a002af6:	f100 32ff 	add.w	r2, r0, #4294967295	; 0xffffffff
1a002afa:	f080 80ec 	bcs.w	1a002cd6 <__udivdi3+0x22a>
1a002afe:	4299      	cmp	r1, r3
1a002b00:	f240 80e9 	bls.w	1a002cd6 <__udivdi3+0x22a>
1a002b04:	3802      	subs	r0, #2
1a002b06:	442b      	add	r3, r5
1a002b08:	1a5a      	subs	r2, r3, r1
1a002b0a:	b2a4      	uxth	r4, r4
1a002b0c:	fbb2 f3fe 	udiv	r3, r2, lr
1a002b10:	fb0e 2213 	mls	r2, lr, r3, r2
1a002b14:	ea44 4202 	orr.w	r2, r4, r2, lsl #16
1a002b18:	fb07 f703 	mul.w	r7, r7, r3
1a002b1c:	4297      	cmp	r7, r2
1a002b1e:	d908      	bls.n	1a002b32 <__udivdi3+0x86>
1a002b20:	1952      	adds	r2, r2, r5
1a002b22:	f103 31ff 	add.w	r1, r3, #4294967295	; 0xffffffff
1a002b26:	f080 80d8 	bcs.w	1a002cda <__udivdi3+0x22e>
1a002b2a:	4297      	cmp	r7, r2
1a002b2c:	f240 80d5 	bls.w	1a002cda <__udivdi3+0x22e>
1a002b30:	3b02      	subs	r3, #2
1a002b32:	ea43 4000 	orr.w	r0, r3, r0, lsl #16
1a002b36:	2600      	movs	r6, #0
1a002b38:	4631      	mov	r1, r6
1a002b3a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
1a002b3e:	428b      	cmp	r3, r1
1a002b40:	d847      	bhi.n	1a002bd2 <__udivdi3+0x126>
1a002b42:	fab3 f683 	clz	r6, r3
1a002b46:	2e00      	cmp	r6, #0
1a002b48:	d148      	bne.n	1a002bdc <__udivdi3+0x130>
1a002b4a:	428b      	cmp	r3, r1
1a002b4c:	d302      	bcc.n	1a002b54 <__udivdi3+0xa8>
1a002b4e:	4282      	cmp	r2, r0
1a002b50:	f200 80cd 	bhi.w	1a002cee <__udivdi3+0x242>
1a002b54:	2001      	movs	r0, #1
1a002b56:	4631      	mov	r1, r6
1a002b58:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
1a002b5c:	b912      	cbnz	r2, 1a002b64 <__udivdi3+0xb8>
1a002b5e:	2501      	movs	r5, #1
1a002b60:	fbb5 f5f2 	udiv	r5, r5, r2
1a002b64:	fab5 f885 	clz	r8, r5
1a002b68:	f1b8 0f00 	cmp.w	r8, #0
1a002b6c:	d177      	bne.n	1a002c5e <__udivdi3+0x1b2>
1a002b6e:	1b4a      	subs	r2, r1, r5
1a002b70:	ea4f 4e15 	mov.w	lr, r5, lsr #16
1a002b74:	b2af      	uxth	r7, r5
1a002b76:	2601      	movs	r6, #1
1a002b78:	fbb2 f0fe 	udiv	r0, r2, lr
1a002b7c:	0c23      	lsrs	r3, r4, #16
1a002b7e:	fb0e 2110 	mls	r1, lr, r0, r2
1a002b82:	ea43 4101 	orr.w	r1, r3, r1, lsl #16
1a002b86:	fb07 f300 	mul.w	r3, r7, r0
1a002b8a:	428b      	cmp	r3, r1
1a002b8c:	d907      	bls.n	1a002b9e <__udivdi3+0xf2>
1a002b8e:	1949      	adds	r1, r1, r5
1a002b90:	f100 32ff 	add.w	r2, r0, #4294967295	; 0xffffffff
1a002b94:	d202      	bcs.n	1a002b9c <__udivdi3+0xf0>
1a002b96:	428b      	cmp	r3, r1
1a002b98:	f200 80ba 	bhi.w	1a002d10 <__udivdi3+0x264>
1a002b9c:	4610      	mov	r0, r2
1a002b9e:	1ac9      	subs	r1, r1, r3
1a002ba0:	b2a4      	uxth	r4, r4
1a002ba2:	fbb1 f3fe 	udiv	r3, r1, lr
1a002ba6:	fb0e 1113 	mls	r1, lr, r3, r1
1a002baa:	ea44 4401 	orr.w	r4, r4, r1, lsl #16
1a002bae:	fb07 f703 	mul.w	r7, r7, r3
1a002bb2:	42a7      	cmp	r7, r4
1a002bb4:	d908      	bls.n	1a002bc8 <__udivdi3+0x11c>
1a002bb6:	1964      	adds	r4, r4, r5
1a002bb8:	f103 32ff 	add.w	r2, r3, #4294967295	; 0xffffffff
1a002bbc:	f080 808f 	bcs.w	1a002cde <__udivdi3+0x232>
1a002bc0:	42a7      	cmp	r7, r4
1a002bc2:	f240 808c 	bls.w	1a002cde <__udivdi3+0x232>
1a002bc6:	3b02      	subs	r3, #2
1a002bc8:	ea43 4000 	orr.w	r0, r3, r0, lsl #16
1a002bcc:	4631      	mov	r1, r6
1a002bce:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
1a002bd2:	2600      	movs	r6, #0
1a002bd4:	4630      	mov	r0, r6
1a002bd6:	4631      	mov	r1, r6
1a002bd8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
1a002bdc:	f1c6 0420 	rsb	r4, r6, #32
1a002be0:	fa22 f504 	lsr.w	r5, r2, r4
1a002be4:	40b3      	lsls	r3, r6
1a002be6:	432b      	orrs	r3, r5
1a002be8:	fa20 fc04 	lsr.w	ip, r0, r4
1a002bec:	fa01 f706 	lsl.w	r7, r1, r6
1a002bf0:	fa21 f504 	lsr.w	r5, r1, r4
1a002bf4:	ea4f 4e13 	mov.w	lr, r3, lsr #16
1a002bf8:	ea4c 0707 	orr.w	r7, ip, r7
1a002bfc:	fbb5 f8fe 	udiv	r8, r5, lr
1a002c00:	0c39      	lsrs	r1, r7, #16
1a002c02:	fb0e 5518 	mls	r5, lr, r8, r5
1a002c06:	fa1f fc83 	uxth.w	ip, r3
1a002c0a:	ea41 4505 	orr.w	r5, r1, r5, lsl #16
1a002c0e:	fb0c f108 	mul.w	r1, ip, r8
1a002c12:	42a9      	cmp	r1, r5
1a002c14:	fa02 f206 	lsl.w	r2, r2, r6
1a002c18:	d904      	bls.n	1a002c24 <__udivdi3+0x178>
1a002c1a:	18ed      	adds	r5, r5, r3
1a002c1c:	f108 34ff 	add.w	r4, r8, #4294967295	; 0xffffffff
1a002c20:	d367      	bcc.n	1a002cf2 <__udivdi3+0x246>
1a002c22:	46a0      	mov	r8, r4
1a002c24:	1a6d      	subs	r5, r5, r1
1a002c26:	b2bf      	uxth	r7, r7
1a002c28:	fbb5 f4fe 	udiv	r4, r5, lr
1a002c2c:	fb0e 5514 	mls	r5, lr, r4, r5
1a002c30:	ea47 4105 	orr.w	r1, r7, r5, lsl #16
1a002c34:	fb0c fc04 	mul.w	ip, ip, r4
1a002c38:	458c      	cmp	ip, r1
1a002c3a:	d904      	bls.n	1a002c46 <__udivdi3+0x19a>
1a002c3c:	18c9      	adds	r1, r1, r3
1a002c3e:	f104 35ff 	add.w	r5, r4, #4294967295	; 0xffffffff
1a002c42:	d35c      	bcc.n	1a002cfe <__udivdi3+0x252>
1a002c44:	462c      	mov	r4, r5
1a002c46:	ea44 4408 	orr.w	r4, r4, r8, lsl #16
1a002c4a:	ebcc 0101 	rsb	r1, ip, r1
1a002c4e:	fba4 2302 	umull	r2, r3, r4, r2
1a002c52:	4299      	cmp	r1, r3
1a002c54:	d348      	bcc.n	1a002ce8 <__udivdi3+0x23c>
1a002c56:	d044      	beq.n	1a002ce2 <__udivdi3+0x236>
1a002c58:	4620      	mov	r0, r4
1a002c5a:	2600      	movs	r6, #0
1a002c5c:	e76c      	b.n	1a002b38 <__udivdi3+0x8c>
1a002c5e:	f1c8 0420 	rsb	r4, r8, #32
1a002c62:	fa01 f308 	lsl.w	r3, r1, r8
1a002c66:	fa05 f508 	lsl.w	r5, r5, r8
1a002c6a:	fa20 f704 	lsr.w	r7, r0, r4
1a002c6e:	40e1      	lsrs	r1, r4
1a002c70:	ea4f 4e15 	mov.w	lr, r5, lsr #16
1a002c74:	431f      	orrs	r7, r3
1a002c76:	fbb1 f6fe 	udiv	r6, r1, lr
1a002c7a:	0c3a      	lsrs	r2, r7, #16
1a002c7c:	fb0e 1116 	mls	r1, lr, r6, r1
1a002c80:	fa1f fc85 	uxth.w	ip, r5
1a002c84:	ea42 4301 	orr.w	r3, r2, r1, lsl #16
1a002c88:	fb0c f206 	mul.w	r2, ip, r6
1a002c8c:	429a      	cmp	r2, r3
1a002c8e:	fa00 f408 	lsl.w	r4, r0, r8
1a002c92:	d907      	bls.n	1a002ca4 <__udivdi3+0x1f8>
1a002c94:	195b      	adds	r3, r3, r5
1a002c96:	f106 31ff 	add.w	r1, r6, #4294967295	; 0xffffffff
1a002c9a:	d237      	bcs.n	1a002d0c <__udivdi3+0x260>
1a002c9c:	429a      	cmp	r2, r3
1a002c9e:	d935      	bls.n	1a002d0c <__udivdi3+0x260>
1a002ca0:	3e02      	subs	r6, #2
1a002ca2:	442b      	add	r3, r5
1a002ca4:	1a9b      	subs	r3, r3, r2
1a002ca6:	b2bf      	uxth	r7, r7
1a002ca8:	fbb3 f0fe 	udiv	r0, r3, lr
1a002cac:	fb0e 3310 	mls	r3, lr, r0, r3
1a002cb0:	ea47 4303 	orr.w	r3, r7, r3, lsl #16
1a002cb4:	fb0c f100 	mul.w	r1, ip, r0
1a002cb8:	4299      	cmp	r1, r3
1a002cba:	d907      	bls.n	1a002ccc <__udivdi3+0x220>
1a002cbc:	195b      	adds	r3, r3, r5
1a002cbe:	f100 32ff 	add.w	r2, r0, #4294967295	; 0xffffffff
1a002cc2:	d221      	bcs.n	1a002d08 <__udivdi3+0x25c>
1a002cc4:	4299      	cmp	r1, r3
1a002cc6:	d91f      	bls.n	1a002d08 <__udivdi3+0x25c>
1a002cc8:	3802      	subs	r0, #2
1a002cca:	442b      	add	r3, r5
1a002ccc:	1a5a      	subs	r2, r3, r1
1a002cce:	ea40 4606 	orr.w	r6, r0, r6, lsl #16
1a002cd2:	4667      	mov	r7, ip
1a002cd4:	e750      	b.n	1a002b78 <__udivdi3+0xcc>
1a002cd6:	4610      	mov	r0, r2
1a002cd8:	e716      	b.n	1a002b08 <__udivdi3+0x5c>
1a002cda:	460b      	mov	r3, r1
1a002cdc:	e729      	b.n	1a002b32 <__udivdi3+0x86>
1a002cde:	4613      	mov	r3, r2
1a002ce0:	e772      	b.n	1a002bc8 <__udivdi3+0x11c>
1a002ce2:	40b0      	lsls	r0, r6
1a002ce4:	4290      	cmp	r0, r2
1a002ce6:	d2b7      	bcs.n	1a002c58 <__udivdi3+0x1ac>
1a002ce8:	1e60      	subs	r0, r4, #1
1a002cea:	2600      	movs	r6, #0
1a002cec:	e724      	b.n	1a002b38 <__udivdi3+0x8c>
1a002cee:	4630      	mov	r0, r6
1a002cf0:	e722      	b.n	1a002b38 <__udivdi3+0x8c>
1a002cf2:	42a9      	cmp	r1, r5
1a002cf4:	d995      	bls.n	1a002c22 <__udivdi3+0x176>
1a002cf6:	f1a8 0802 	sub.w	r8, r8, #2
1a002cfa:	441d      	add	r5, r3
1a002cfc:	e792      	b.n	1a002c24 <__udivdi3+0x178>
1a002cfe:	458c      	cmp	ip, r1
1a002d00:	d9a0      	bls.n	1a002c44 <__udivdi3+0x198>
1a002d02:	3c02      	subs	r4, #2
1a002d04:	4419      	add	r1, r3
1a002d06:	e79e      	b.n	1a002c46 <__udivdi3+0x19a>
1a002d08:	4610      	mov	r0, r2
1a002d0a:	e7df      	b.n	1a002ccc <__udivdi3+0x220>
1a002d0c:	460e      	mov	r6, r1
1a002d0e:	e7c9      	b.n	1a002ca4 <__udivdi3+0x1f8>
1a002d10:	3802      	subs	r0, #2
1a002d12:	4429      	add	r1, r5
1a002d14:	e743      	b.n	1a002b9e <__udivdi3+0xf2>
1a002d16:	bf00      	nop

1a002d18 <memcpy>:
1a002d18:	b510      	push	{r4, lr}
1a002d1a:	1e43      	subs	r3, r0, #1
1a002d1c:	440a      	add	r2, r1
1a002d1e:	4291      	cmp	r1, r2
1a002d20:	d004      	beq.n	1a002d2c <memcpy+0x14>
1a002d22:	f811 4b01 	ldrb.w	r4, [r1], #1
1a002d26:	f803 4f01 	strb.w	r4, [r3, #1]!
1a002d2a:	e7f8      	b.n	1a002d1e <memcpy+0x6>
1a002d2c:	bd10      	pop	{r4, pc}

1a002d2e <memset>:
1a002d2e:	4402      	add	r2, r0
1a002d30:	4603      	mov	r3, r0
1a002d32:	4293      	cmp	r3, r2
1a002d34:	d002      	beq.n	1a002d3c <memset+0xe>
1a002d36:	f803 1b01 	strb.w	r1, [r3], #1
1a002d3a:	e7fa      	b.n	1a002d32 <memset+0x4>
1a002d3c:	4770      	bx	lr
1a002d3e:	0000      	movs	r0, r0
1a002d40:	61726143 	.word	0x61726143
1a002d44:	72657463 	.word	0x72657463
1a002d48:	63657220 	.word	0x63657220
1a002d4c:	64696269 	.word	0x64696269
1a002d50:	54203a6f 	.word	0x54203a6f
1a002d54:	00000d0a 	.word	0x00000d0a
1a002d58:	61726143 	.word	0x61726143
1a002d5c:	72657463 	.word	0x72657463
1a002d60:	63657220 	.word	0x63657220
1a002d64:	64696269 	.word	0x64696269
1a002d68:	4c203a6f 	.word	0x4c203a6f
1a002d6c:	00000d0a 	.word	0x00000d0a
1a002d70:	61726143 	.word	0x61726143
1a002d74:	72657463 	.word	0x72657463
1a002d78:	63657220 	.word	0x63657220
1a002d7c:	64696269 	.word	0x64696269
1a002d80:	7566206f 	.word	0x7566206f
1a002d84:	20617265 	.word	0x20617265
1a002d88:	6d206564 	.word	0x6d206564
1a002d8c:	0a756e65 	.word	0x0a756e65
1a002d90:	0000000d 	.word	0x0000000d
1a002d94:	54524155 	.word	0x54524155
1a002d98:	4253555f 	.word	0x4253555f
1a002d9c:	6e6f6320 	.word	0x6e6f6320
1a002da0:	75676966 	.word	0x75676966
1a002da4:	61646172 	.word	0x61646172
1a002da8:	000d0a2e 	.word	0x000d0a2e
1a002dac:	7778797a 	.word	0x7778797a
1a002db0:	73747576 	.word	0x73747576
1a002db4:	6f707172 	.word	0x6f707172
1a002db8:	6b6c6d6e 	.word	0x6b6c6d6e
1a002dbc:	6768696a 	.word	0x6768696a
1a002dc0:	63646566 	.word	0x63646566
1a002dc4:	38396162 	.word	0x38396162
1a002dc8:	34353637 	.word	0x34353637
1a002dcc:	30313233 	.word	0x30313233
1a002dd0:	34333231 	.word	0x34333231
1a002dd4:	38373635 	.word	0x38373635
1a002dd8:	63626139 	.word	0x63626139
1a002ddc:	67666564 	.word	0x67666564
1a002de0:	6b6a6968 	.word	0x6b6a6968
1a002de4:	6f6e6d6c 	.word	0x6f6e6d6c
1a002de8:	73727170 	.word	0x73727170
1a002dec:	77767574 	.word	0x77767574
1a002df0:	007a7978 	.word	0x007a7978
1a002df4:	33323130 	.word	0x33323130
1a002df8:	37363534 	.word	0x37363534
1a002dfc:	42413938 	.word	0x42413938
1a002e00:	46454443 	.word	0x46454443
1a002e04:	00000000 	.word	0x00000000

1a002e08 <gpioPinsConfig>:
1a002e08:	02000104 00050701 05010d03 04080100     ................
1a002e18:	02020002 02000304 00000403 04070002     ................
1a002e28:	030c0300 09050402 05040103 04030208     ................
1a002e38:	04020305 06040504 0802000c 03000b06     ................
1a002e48:	00090607 07060503 060f0504 03030004     ................
1a002e58:	02000404 00050404 06040502 04060200     ................
1a002e68:	0c050408 05040a04 0003010e 14010a00     ................
1a002e78:	010f0000 0d000012 00001101 0010010c     ................
1a002e88:	07070300 000f0300 01000001 00000000     ................
1a002e98:	000a0600 08060603 06100504 04030005     ................
1a002ea8:	03000106 04090400 04010d05 010b0000     ................
1a002eb8:	0200000f 00000001 00010104 02010800     ................
1a002ec8:	01090000 09010006 05040002 04010200     ................
1a002ed8:	02020105 02020504 0e00000a 01000b02     ................
1a002ee8:	000c020b 00040c01 04000200 01020001     ................
1a002ef8:	02000204 00030402 03070302 070b0300     ................
1a002f08:	0c030004 03000507 0006070d 01020e03     ................
1a002f18:	04010504 06020006 02000504 00040405     ................
1a002f28:	08040402 040c0504 0d050409 05040a04     ................
1a002f38:	0005010e 00000801 00000a0d              ............

1a002f44 <timer_sd>:
1a002f44:	40084000 00000020 0000000c 40085000     .@.@ ........P.@
1a002f54:	00000021 0000000d 400c3000 00000022     !........0.@"...
1a002f64:	0000000e 400c4000 00000023 0000000f     .....@.@#.......

1a002f74 <gpioLEDBits>:
1a002f74:	0b010e00 00050c01 02050105 12376000     .............`7.
1a002f84:	00005634                                4V..

1a002f88 <OscRateIn>:
1a002f88:	00b71b00                                ....

1a002f8c <ExtRateIn>:
1a002f8c:	00000000                                ....

1a002f90 <pinmuxing>:
1a002f90:	00400a02 00400b02 00400c02 00440002     ..@...@...@...D.
1a002fa0:	00440102 00440202 00520302 00520402     ..D...D...R...R.
1a002fb0:	00520509 00570609 00570206 00500001     ..R...W...W...P.
1a002fc0:	00500101 00500201 00500601 00f30f01     ..P...P...P.....
1a002fd0:	00f71001 00f31101 00b31201 00f01301     ................
1a002fe0:	00b31401 00b60707 00f20000 00b60100     ................

1a002ff0 <InitClkStates>:
1a002ff0:	00010308 00010307 01010f01              ............

1a002ffc <usbPLLSetup>:
1a002ffc:	0000601d 06167ffa 00000000 00000000     .`..............
1a00300c:	1c9c3800                                .8..

1a003010 <periph_to_base>:
1a003010:	00050000 0020000a 00090024 00400040     ...... .$...@.@.
1a003020:	00600005 000400a6 00c300c0 00e00002     ..`.............
1a003030:	000100e0 01000100 01200003 00060120     .......... . ...
1a003040:	01400140 0142000c 00190142 01620162     @.@...B.B...b.b.
1a003050:	01820013 00120182 01a201a2 01c20011     ................
1a003060:	001001c2 01e201e2 0202000f 000e0202     ................
1a003070:	02220222 0223000d 001c0223 08040201     "."...#.#.......
1a003080:	0f0f0f03 000000ff                       ........

1a003088 <InitClkStates>:
1a003088:	00010100 00010909 0001090a 01010701     ................
1a003098:	00010902 00010906 0101090c 0001090d     ................
1a0030a8:	0001090e 0001090f 00010910 00010911     ................
1a0030b8:	00010912 00010913 00011114 00011119     ................
1a0030c8:	0001111a 0001111b                       ........

1a0030d0 <UART_PClock>:
1a0030d0:	00820081 00a200a1                       ........

1a0030d8 <UART_BClock>:
1a0030d8:	01a201c2 01620182                       ......b.
